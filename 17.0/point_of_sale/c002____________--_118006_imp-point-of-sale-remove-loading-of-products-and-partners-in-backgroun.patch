PR: https://github.com/odoo/odoo/pull/118006

From: b90cae065001aa44fb05532950b78732217649a7
From: Adrien Guilliams (adgu)
Date: 2023-04-12 22:06:03

Structural Changes: 12
Total Changes: 31

[IMP] point_of_sale: remove loading of products and partners in background

In a previous PR, we changed the default value of the background loading
of the partners and products to false in 16.0 to saas-16.2
because the features were causing loss of performance in the pos
when clients had lot of products or partners.
We now remove completly this feature saas-16.3 and hardcode the number
of loaded products and partners at the opening of the PoS to respectively
20000 and 100.

closes odoo/odoo#118006

Related: odoo/upgrade#4531
Signed-off-by: Heinz Robin (rhe) <rhe@odoo.com>

================================= pseudo patch: =================================

--- a/addons/point_of_sale/models/pos_config.py
+++ b/addons/point_of_sale/models/pos_config.py
@@ -160,20 +160,6 @@ class PosConfig(models.Model):
         string='Shipping Policy', required=True, default='direct',
         help="If you deliver all products at once, the delivery order will be scheduled based on the greatest "
         "product lead time. Otherwise, it will be based on the shortest.")
-    limited_products_loading = fields.Boolean('Limited Product Loading',
-                                              default=True,
-                                              help="we load all starred products (favorite), all services, recent inventory movements of products, and the most recently updated products.\n"
-                                                   "When the session is open, we keep on loading all remaining products in the background.\n"
-                                                   "In the meantime, you can click on the 'database icon' in the searchbar to load products from database.")
-    limited_products_amount = fields.Integer(default=20000)
-    product_load_background = fields.Boolean(default=False)
-    limited_partners_loading = fields.Boolean('Limited Partners Loading',
-                                              default=True,
-                                              help="By default, 100 partners are loaded.\n"
-                                                   "When the session is open, we keep on loading all remaining partners in the background.\n"
-                                                   "In the meantime, you can use the 'Load Customers' button to load partners from database.")
-    limited_partners_amount = fields.Integer(default=100)
-    partner_load_background = fields.Boolean(default=False)
     auto_validate_terminal_payment = fields.Boolean(default=True, help="Automatically validates orders paid with a payment terminal.")
     trusted_config_ids = fields.Many2many("pos.config", relation="pos_config_trust_relation", column1="is_trusting",
                                           column2="is_trusted", string="Trusted Point of Sale Configurations",
@@ -681,7 +667,7 @@ class PosConfig(models.Model):
             'company_id': self.company_id.id,
             'available_categ_ids': self.iface_available_categ_ids.mapped('id') if self.iface_available_categ_ids else None,
             'tip_product_id': self.tip_product_id.id if self.tip_product_id else None,
-            'limit': self.limited_products_amount
+            'limit': 20000
         }
         self.env.cr.execute(query, params)
         product_ids = self.env.cr.fetchall()
@@ -706,7 +692,7 @@ class PosConfig(models.Model):
             )
             ORDER BY  COALESCE(pm.order_count, 0) DESC,
                       NAME limit %s;
-        """, [self.company_id.id, str(self.limited_partners_amount)])
+        """, [self.company_id.id, str(100)])
         result = self.env.cr.fetchall()
         return result
 

--- a/addons/point_of_sale/models/pos_session.py
+++ b/addons/point_of_sale/models/pos_session.py
@@ -1796,8 +1796,6 @@ class PosSession(models.Model):
         }
 
     def _get_pos_ui_res_partner(self, params):
-        if not self.config_id.limited_partners_loading:
-            return self.env['res.partner'].search_read(**params['search_params'])
         partner_ids = [res[0] for res in self.config_id.get_limited_partners_loading()]
         # Need to search_read because get_limited_partners_loading
         # might return a partner id that is not accessible.
@@ -1937,10 +1935,7 @@ class PosSession(models.Model):
 
     def _get_pos_ui_product_product(self, params):
         self = self.with_context(**params['context'])
-        if not self.config_id.limited_products_loading:
-            products = self.env['product.product'].search_read(**params['search_params'])
-        else:
-            products = self.config_id.get_limited_products_loading(params['search_params']['fields'])
+        products = self.config_id.get_limited_products_loading(params['search_params']['fields'])
 
         self._process_pos_ui_product_product(products)
         return products

--- a/addons/point_of_sale/models/res_config_settings.py
+++ b/addons/point_of_sale/models/res_config_settings.py
@@ -75,19 +75,13 @@ class ResConfigSettings(models.TransientModel):
     pos_is_posbox = fields.Boolean(related='pos_config_id.is_posbox', readonly=False)
     pos_journal_id = fields.Many2one(related='pos_config_id.journal_id', readonly=False)
     pos_limit_categories = fields.Boolean(related='pos_config_id.limit_categories', readonly=False)
-    pos_limited_partners_amount = fields.Integer(related='pos_config_id.limited_partners_amount', readonly=False)
-    pos_limited_partners_loading = fields.Boolean(related='pos_config_id.limited_partners_loading', readonly=False)
-    pos_limited_products_amount = fields.Integer(related='pos_config_id.limited_products_amount', readonly=False)
-    pos_limited_products_loading = fields.Boolean(related='pos_config_id.limited_products_loading', readonly=False)
     pos_manual_discount = fields.Boolean(related='pos_config_id.manual_discount', readonly=False)
     pos_only_round_cash_method = fields.Boolean(related='pos_config_id.only_round_cash_method', readonly=False)
     pos_other_devices = fields.Boolean(related='pos_config_id.other_devices', readonly=False)
-    pos_partner_load_background = fields.Boolean(related='pos_config_id.partner_load_background', readonly=False)
     pos_payment_method_ids = fields.Many2many(related='pos_config_id.payment_method_ids', readonly=False)
     pos_picking_policy = fields.Selection(related='pos_config_id.picking_policy', readonly=False)
     pos_picking_type_id = fields.Many2one(related='pos_config_id.picking_type_id', readonly=False)
     pos_pricelist_id = fields.Many2one('product.pricelist', string='Default Pricelist', compute='_compute_pos_pricelist_id', readonly=False, store=True)
-    pos_product_load_background = fields.Boolean(related='pos_config_id.product_load_background', readonly=False)
     pos_proxy_ip = fields.Char(string='IP Address', compute='_compute_pos_proxy_ip', readonly=False, store=True)
     pos_receipt_footer = fields.Text(string='Receipt Footer', compute='_compute_pos_receipt_header_footer', readonly=False, store=True)
     pos_receipt_header = fields.Text(string='Receipt Header', compute='_compute_pos_receipt_header_footer', readonly=False, store=True)
