PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:5 + add:0, change matches:
-    _inherit = ["mail.activity"]
-    _inherit = ["mail.activity.type"]
-    _inherit = ['res.partner']
-    _inherit = ['res.users']
-    _inherit = ["res.users.settings"]

Total Changes: 20

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/calendar/models/calendar_alarm.py
+++ b/addons/calendar/models/calendar_alarm.py
@@ -5,6 +5,7 @@ from odoo import api, fields, models
 
 
 class CalendarAlarm(models.Model):
+    _name = 'calendar.alarm'
     _description = 'Event Alarm'
 
     _interval_selection = {'minutes': 'Minutes', 'hours': 'Hours', 'days': 'Days'}

--- a/addons/calendar/models/calendar_alarm_manager.py
+++ b/addons/calendar/models/calendar_alarm_manager.py
@@ -9,6 +9,7 @@ from odoo.tools import plaintext2html
 
 
 class CalendarAlarm_Manager(models.AbstractModel):
+    _name = 'calendar.alarm_manager'
     _description = 'Event Alarm Manager'
 
     def _get_next_potential_limit_alarm(self, alarm_type, seconds=None, partners=None):

--- a/addons/calendar/models/calendar_event.py
+++ b/addons/calendar/models/calendar_event.py
@@ -65,6 +65,7 @@ def get_weekday_occurence(date):
 
 
 class CalendarEvent(models.Model):
+    _name = 'calendar.event'
     _description = "Calendar Event"
     _order = "start desc"
     _inherit = ["mail.thread"]

--- a/addons/calendar/models/calendar_event_type.py
+++ b/addons/calendar/models/calendar_event_type.py
@@ -7,6 +7,7 @@ from odoo import fields, models
 
 
 class CalendarEventType(models.Model):
+    _name = 'calendar.event.type'
 
     _description = 'Event Meeting Type'
 

--- a/addons/calendar/models/calendar_filter.py
+++ b/addons/calendar/models/calendar_filter.py
@@ -5,6 +5,7 @@ from odoo import api, fields, models
 
 
 class CalendarFilters(models.Model):
+    _name = 'calendar.filters'
     _description = 'Calendar Filters'
 
     user_id = fields.Many2one('res.users', 'Me', required=True, default=lambda self: self.env.user, index=True, ondelete='cascade')

--- a/addons/calendar/models/calendar_recurrence.py
+++ b/addons/calendar/models/calendar_recurrence.py
@@ -92,6 +92,7 @@ def weekday_to_field(weekday_index):
 
 
 class CalendarRecurrence(models.Model):
+    _name = 'calendar.recurrence'
     _description = 'Event Recurrence Rule'
 
     name = fields.Char(compute='_compute_name', store=True)

--- a/addons/calendar/models/ir_http.py
+++ b/addons/calendar/models/ir_http.py
@@ -8,7 +8,7 @@ from odoo.http import request
 
 
 class IrHttp(models.AbstractModel):
-    _inherit = ['ir.http']
+    _inherit = 'ir.http'
 
     @classmethod
     def _auth_method_calendar(cls):

--- a/addons/calendar/models/mail_activity.py
+++ b/addons/calendar/models/mail_activity.py
@@ -6,7 +6,7 @@ from odoo.tools import is_html_empty
 
 
 class MailActivity(models.Model):
-    _inherit = ["mail.activity"]
+    _inherit = "mail.activity"
 
     calendar_event_id = fields.Many2one('calendar.event', string="Calendar Meeting", ondelete='cascade')
 

--- a/addons/calendar/models/mail_activity_mixin.py
+++ b/addons/calendar/models/mail_activity_mixin.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class MailActivityMixin(models.AbstractModel):
-    _inherit = ['mail.activity.mixin']
+    _inherit = 'mail.activity.mixin'
 
     activity_calendar_event_id = fields.Many2one(
         'calendar.event', string="Next Activity Calendar Event",

--- a/addons/calendar/models/mail_activity_type.py
+++ b/addons/calendar/models/mail_activity_type.py
@@ -5,6 +5,6 @@ from odoo import models, fields
 
 
 class MailActivityType(models.Model):
-    _inherit = ["mail.activity.type"]
+    _inherit = "mail.activity.type"
 
     category = fields.Selection(selection_add=[('meeting', 'Meeting')])

--- a/addons/calendar/models/res_partner.py
+++ b/addons/calendar/models/res_partner.py
@@ -8,7 +8,7 @@ from odoo.tools import SQL
 
 
 class ResPartner(models.Model):
-    _inherit = ['res.partner']
+    _inherit = 'res.partner'
 
     meeting_count = fields.Integer("# Meetings", compute='_compute_meeting_count')
     meeting_ids = fields.Many2many('calendar.event', 'calendar_event_res_partner_rel', 'res_partner_id',

--- a/addons/calendar/models/res_users.py
+++ b/addons/calendar/models/res_users.py
@@ -9,7 +9,7 @@ from pytz import timezone, UTC
 
 
 class ResUsers(models.Model):
-    _inherit = ['res.users']
+    _inherit = 'res.users'
 
     calendar_default_privacy = fields.Selection(
         [('public', 'Public'),

--- a/addons/calendar/models/res_users_settings.py
+++ b/addons/calendar/models/res_users_settings.py
@@ -4,7 +4,7 @@ from odoo import api, fields, models
 
 
 class ResUsersSettings(models.Model):
-    _inherit = ["res.users.settings"]
+    _inherit = "res.users.settings"
 
     # Calendar module settings.
     calendar_default_privacy = fields.Selection(
