PR: https://github.com/odoo/odoo/pull/139568

From: 261d3f3999c60727d9e5e875f4f1aa1caeb788f9
From: RÃ©my Voet (ryv)
Date: 2023-11-02 21:33:09

Structural Changes: 12
Total Changes: 14

[REM] core,*: remove `unaccent` parameter from `Field`

In https://github.com/odoo/odoo/pull/76436 we added `unaccent=False` on
field definitions to prevent the ORM (expression.py) from using
`unaccent` for matching domain operators ('(not) (=)(i)like').
However, since https://github.com/odoo/odoo/pull/136007, the domain
operators '=like', 'like' and 'not like' no longer use `unaccent`.

We can therefore prevent the use of `unaccent` by using the right
operator ('=like', 'like', 'not like') instead of overriding the
behavior in the field itself.  This makes the `unaccent` parameter on
`Field` less relevant.

In order to reduce field complexity and keep a generic behavior, we
remove this parameter from `Field` and change the usage where
necessary:

 - Remove `unaccent=False` from all `parent_path` fields.  These fields
   are only searched with operator `=like` (see the implementation of
   `child_of` in expression.py).

 - Remove `unaccent=False` from `res.partner` fields `phone` and
   `mobile`.  They were introduced to simplify the creation of indexes
   (in https://github.com/odoo/odoo/pull/91788) for the voip module,
   which uses `ilike` on these fields.  We replace `ilike` with `like`
   to have the same behavior as before (see Enterprise PR).

 - Remove `unaccent=False` from fields `ir.attachment.store_fname` and
   `crm.lead.email_domain_criterion`.  They were already useless (no
   search with '...like' operators).

There is a small behavior change: all the mentioned fields will be
searched with `unaccent` from the webclient, since the latter always
uses operator `like` by default.

closes odoo/odoo#139568

Related: odoo/enterprise#49448
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/odoo/addons/base/models/ir_attachment.py
+++ b/odoo/addons/base/models/ir_attachment.py
@@ -413,7 +413,7 @@ class IrAttachment(models.Model):
     raw = fields.Binary(string="File Content (raw)", compute='_compute_raw', inverse='_inverse_raw')
     datas = fields.Binary(string='File Content (base64)', compute='_compute_datas', inverse='_inverse_datas')
     db_datas = fields.Binary('Database Data', attachment=False)
-    store_fname = fields.Char('Stored Filename', index=True, unaccent=False)
+    store_fname = fields.Char('Stored Filename', index=True)
     file_size = fields.Integer('File Size', readonly=True)
     checksum = fields.Char("Checksum/SHA1", size=40, readonly=True)
     mimetype = fields.Char('Mime Type', readonly=True)

--- a/odoo/addons/base/models/ir_ui_menu.py
+++ b/odoo/addons/base/models/ir_ui_menu.py
@@ -27,7 +27,7 @@ class IrUiMenu(models.Model):
     sequence = fields.Integer(default=10)
     child_id = fields.One2many('ir.ui.menu', 'parent_id', string='Child IDs')
     parent_id = fields.Many2one('ir.ui.menu', string='Parent Menu', index=True, ondelete="restrict")
-    parent_path = fields.Char(index=True, unaccent=False)
+    parent_path = fields.Char(index=True)
     groups_id = fields.Many2many('res.groups', 'ir_ui_menu_group_rel',
                                  'menu_id', 'gid', string='Groups',
                                  help="If you have groups, the visibility of this menu will be based on these groups. "\

--- a/odoo/addons/base/models/res_company.py
+++ b/odoo/addons/base/models/res_company.py
@@ -34,7 +34,7 @@ class Company(models.Model):
     parent_id = fields.Many2one('res.company', string='Parent Company', index=True)
     child_ids = fields.One2many('res.company', 'parent_id', string='Branches')
     all_child_ids = fields.One2many('res.company', 'parent_id', context={'active_test': False})
-    parent_path = fields.Char(index=True, unaccent=False)
+    parent_path = fields.Char(index=True)
     parent_ids = fields.Many2many('res.company', compute='_compute_parent_ids', compute_sudo=True)
     root_id = fields.Many2one('res.company', compute='_compute_parent_ids', compute_sudo=True)
     partner_id = fields.Many2one('res.partner', string='Partner', required=True)

--- a/odoo/addons/base/models/res_partner.py
+++ b/odoo/addons/base/models/res_partner.py
@@ -120,7 +120,7 @@ class PartnerCategory(models.Model):
     parent_id = fields.Many2one('res.partner.category', string='Parent Category', index=True, ondelete='cascade')
     child_ids = fields.One2many('res.partner.category', 'parent_id', string='Child Tags')
     active = fields.Boolean(default=True, help="The active field allows you to hide the category without removing it.")
-    parent_path = fields.Char(index=True, unaccent=False)
+    parent_path = fields.Char(index=True)
     partner_ids = fields.Many2many('res.partner', column1='category_id', column2='partner_id', string='Partners', copy=False)
 
     @api.constrains('parent_id')
@@ -253,8 +253,8 @@ class Partner(models.Model):
     email_formatted = fields.Char(
         'Formatted Email', compute='_compute_email_formatted',
         help='Format email address "Name <email@domain>"')
-    phone = fields.Char(unaccent=False)
-    mobile = fields.Char(unaccent=False)
+    phone = fields.Char()
+    mobile = fields.Char()
     is_company = fields.Boolean(string='Is a Company', default=False,
         help="Check if the contact is a company, otherwise it is a person")
     is_public = fields.Boolean(compute='_compute_is_public')

--- a/odoo/addons/base/tests/test_expression.py
+++ b/odoo/addons/base/tests/test_expression.py
@@ -747,7 +747,7 @@ class TestExpression(SavepointCaseWithUserDemo):
 
         with patch('odoo.osv.expression.get_unaccent_wrapper') as w:
             w().side_effect = lambda x: x
-            rs = Model.search([('parent_path', 'like', f'{helen.id}/%')], order='id asc')
+            rs = Model.search([('parent_path', '=like', f'{helen.id}/%')], order='id asc')
             self.assertEqual(rs, helen | hermione | nicostratus)
             # the result of `get_unaccent_wrapper()` is the wrapper and that's
             # what should not be called
