PR: https://github.com/odoo/odoo/pull/144474

From: 7f164c7451be9c39b2fbe4b04c19eee68f7f7c49
From: mjvi-odoo
Date: 2024-06-04 13:22:26

Structural Changes: 1
Total Changes: 39

[IMP] sale_project: remove 'project' field from 'other info' tab on sales orders

- In this commit, the 'project' field has been removed from the 'other info'
  tab on sales orders, streamlining and optimizing the user interface.

task-3619428

closes odoo/odoo#144474

Related: odoo/upgrade#5582
Signed-off-by: Vincent Larcin (vila) <vila@odoo.com>

================================= pseudo patch: =================================

--- a/addons/sale_project/models/sale_order.py
+++ b/addons/sale_project/models/sale_order.py
@@ -17,8 +17,6 @@ class SaleOrder(models.Model):
     tasks_count = fields.Integer(string='Tasks', compute='_compute_tasks_ids', groups="project.group_project_user", export_string_translation=False)
 
     visible_project = fields.Boolean('Display project', compute='_compute_visible_project', readonly=True, export_string_translation=False)
-    project_id = fields.Many2one('project.project', 'Project',
-        help='Select a non billable project on which tasks can be created.')
     project_ids = fields.Many2many('project.project', compute="_compute_project_ids", string='Projects', copy=False, groups="project.group_project_user,project.group_project_milestone", export_string_translation=False)
     project_count = fields.Integer(string='Number of Projects', compute='_compute_project_ids', groups='project.group_project_user', export_string_translation=False)
     milestone_count = fields.Integer(compute='_compute_milestone_count', export_string_translation=False)
@@ -118,19 +116,12 @@ class SaleOrder(models.Model):
         for order in self:
             projects = order.order_line.mapped('product_id.project_id')
             projects |= order.order_line.mapped('project_id')
-            projects |= order.project_id
             projects |= projects_per_so[order.id or order._origin.id]
             if not is_project_manager:
                 projects = projects._filter_access_rules('read')
             order.project_ids = projects
             order.project_count = len(projects)
 
-    @api.onchange('project_id')
-    def _onchange_project_id(self):
-        """ Set the SO analytic account to the selected project's analytic account """
-        if self.project_id.analytic_account_id:
-            self.analytic_account_id = self.project_id.analytic_account_id
-
     def _action_confirm(self):
         """ On SO confirmation, some lines should generate a task or a project. """
         result = super()._action_confirm()
@@ -161,7 +152,6 @@ class SaleOrder(models.Model):
                     for sol in order.order_line
                 )
             ):
-                order_project_id = order.project_id
                 service_sols = order.order_line.filtered(
                     lambda sol:
                         sol.is_service
@@ -173,7 +163,7 @@ class SaleOrder(models.Model):
                     lambda p:
                         p.project_template_id
                         and (
-                            (p.service_tracking == 'task_in_project' and not order_project_id)
+                            p.service_tracking == 'task_in_project'
                             or p.service_tracking != 'no'
                         )
                         and p.default_code
@@ -204,7 +194,7 @@ class SaleOrder(models.Model):
             action['res_id'] = self.tasks_ids.id
         # set default project
         default_line = next((sol for sol in self.order_line if sol.product_id.type == 'service'), self.env['sale.order.line'])
-        default_project_id = default_line.project_id.id or self.project_id.id or self.project_ids[:1].id
+        default_project_id = default_line.project_id.id or self.project_ids[:1].id
 
         action['context'] = {
             'default_sale_order_id': self.id,
@@ -316,9 +306,11 @@ class SaleOrder(models.Model):
         return created_records
 
     def write(self, values):
+        res = super().write(values)
         if 'state' in values and values['state'] == 'cancel':
-            self.project_id.sudo().sale_line_id = False
-        return super(SaleOrder, self).write(values)
+            # Remove sale line field reference from all projects
+            self.env['project.project'].sudo().search([('sale_line_id.order_id', '=', self.id)]).sale_line_id = False
+        return res
 
     def _prepare_analytic_account_data(self, prefix=None):
         result = super(SaleOrder, self)._prepare_analytic_account_data(prefix=prefix)

--- a/addons/sale_project/models/sale_order_line.py
+++ b/addons/sale_project/models/sale_order_line.py
@@ -296,21 +296,6 @@ class SaleOrderLine(models.Model):
                     return True
             return False
 
-        def _determine_project(so_line):
-            """Determine the project for this sale order line.
-            Rules are different based on the service_tracking:
-
-            - 'project_only': the project_id can only come from the sale order line itself
-            - 'task_in_project': the project_id comes from the sale order line only if no project_id was configured
-              on the parent sale order"""
-
-            if so_line.product_id.service_tracking == 'project_only':
-                return so_line.project_id
-            elif so_line.product_id.service_tracking == 'task_in_project':
-                return so_line.order_id.project_id or so_line.project_id
-
-            return False
-
         # task_global_project: create task in global project
         for so_line in so_line_task_global_project:
             if not so_line.task_id:
@@ -320,7 +305,9 @@ class SaleOrderLine(models.Model):
         # project_only, task_in_project: create a new project, based or not on a template (1 per SO). May be create a task too.
         # if 'task_in_project' and project_id configured on SO, use that one instead
         for so_line in so_line_new_project:
-            project = _determine_project(so_line)
+            project = False
+            if so_line.product_id.service_tracking in ['project_only', 'task_in_project']:
+                project = so_line.project_id
             if not project and _can_create_project(so_line):
                 project = so_line._timesheet_create_project()
                 if so_line.product_id.project_template_id:
