PR: https://github.com/odoo/odoo/pull/198995

From: c6cc036410ad6dc21d161d76342f5238870f97d8
From: akha
Date: 2025-04-29 11:52:38

Breaking data model changes scores: del:2 + add:1, change matches:
-    date_from = fields.Date(help="Is set, update applicants availability once hired for that specific mission.")
-    date_to = fields.Date()
+    job_source_ids = fields.One2many('hr.recruitment.source', 'job_id')

Total Changes: 88

[IMP] *: improve hr_recruitment UI/UX

*: hr, hr_recruitment, website_hr_recruitment

1. Replace job position kanban card with kanban list as kanban lists are easier to read and a single order (vertical).
2. Update help message on job position empty kanban view.
3. Replace `Trackers` stat button by a `Trackers` page in job position form view.
4. Show Mission Dates on Job Position form view only when job_boards (hr_recruitment_integration_monster) is installed
5. Improve UI of `hr_applicant` form and list views.
6. Remove the `Refuse` cog menu button and replace it with an action button in `hr_applicant` list view to be more discoverable.
7. Use standard email composer in `applicant.get.refuse.reason` wizard instead of relying only on email templates.
8. Use m2m tags widget for displaying duplicate applicants in `applicant.get.refuse.reason` wizard.
9. Previously, duplicate applicants in `applicant.get.refuse.reason` were computed only if one applicant is refused.
    Now, duplicate applicants are computed even if multiple applicants are refused.
10. Create widget `RecruitmentCopyClipboardCharField` that extends
    `CopyClipboardCharField` widget. It adds the following props:
    1. `contentGenerationFunctionName`: Specifies the name of the
       function responsible for generating the content that will be
       copied when the copy button is clicked. The function should be
       defined inside the model of the view and not the model of the
       field which uses the widget.
    2. `displayedValue`: The value displayed next to the CopyButton. If
       not passed, the value of the field on which the widget is used will be displayed.

task-4463696

Part-of: odoo/odoo#198995
Related: odoo/enterprise#80033
Related: odoo/upgrade#7277
Signed-off-by: Bertrand Dossogne (bedo) <bedo@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr_recruitment/models/hr_applicant.py
+++ b/addons/hr_recruitment/models/hr_applicant.py
@@ -327,16 +327,15 @@ class HrApplicant(models.Model):
         Returns:
             Domain()
         """
-        self.ensure_one()
-        domain = Domain("id", "=", self.id)
-        if self.email_normalized:
-            domain |= Domain("email_normalized", "=", self.email_normalized)
-        if self.partner_phone_sanitized:
-            domain |= Domain("partner_phone_sanitized", "=", self.partner_phone_sanitized)
-        if self.linkedin_profile:
-            domain |= Domain("linkedin_profile", "=", self.linkedin_profile)
-        if self.pool_applicant_id:
-            domain |= Domain("pool_applicant_id", "=", self.pool_applicant_id)
+        domain = Domain.AND([
+            Domain('company_id', 'in', self.mapped('company_id.id')),
+            Domain.OR([
+                Domain("id", "in", self.ids),
+                Domain("email_normalized", "in", [email for email in self.mapped("email_normalized") if email]),
+                Domain("partner_phone_sanitized", "in", [phone for phone in self.mapped("partner_phone_sanitized") if phone]),
+                Domain("linkedin_profile", "in", [linkedin_profile for linkedin_profile in self.mapped("linkedin_profile") if linkedin_profile]),
+            ])
+        ])
         if ignore_talent:
             domain &= Domain("talent_pool_ids", "=", False)
         if only_talent:
@@ -536,14 +535,12 @@ class HrApplicant(models.Model):
             'hired': Domain('date_closed', '!=', False),
             'ongoing': Domain(['&', ('active', '=', True), ('date_closed', '=', False)]),
         }
-        if not all(v in ([state for state in valid_statuses_domain] + [False]) for v in value):
+        if not all(v in (list(valid_statuses_domain) + [False]) for v in value):
             raise UserError(_('Some values do not exist in the application status'))
-        positive_operator = operator not in expression.NEGATIVE_TERM_OPERATORS
-        domain = Domain([])
+        domain = Domain.FALSE
         for status in value:
-            domain &= valid_statuses_domain[status] if positive_operator else ~valid_statuses_domain[status]
-
-        return domain
+            domain |= valid_statuses_domain[status]
+        return ~domain if operator in expression.NEGATIVE_TERM_OPERATORS else domain
 
     def _get_attachment_number(self):
         read_group_res = self.env['ir.attachment']._read_group(
@@ -707,11 +704,6 @@ class HrApplicant(models.Model):
                         record_name=applicant.display_name,
                         model_description="Applicant",
                     )
-        if vals.get('date_closed'):
-            for applicant in self:
-                if applicant.job_id.date_to:
-                    applicant.availability = applicant.job_id.date_to + relativedelta(days=1)
-
         return res
 
     @api.model
@@ -723,23 +715,15 @@ class HrApplicant(models.Model):
         else:
             hr_job = self.env['hr.job']
 
-        nocontent_body = Markup("""<p class="o_view_nocontent_smiling_face">%(help_title)s</p>""") % {
-            'help_title': _("No application found. Let's create one !"),
-        }
-
-        if hr_job:
-            pattern = r'(.*)<a>(.*?)<\/a>(.*)'
-            match = re.fullmatch(pattern, _('Have you tried to <a>add skills to your job position</a> and search into the Reserve ?'))
-            nocontent_body += Markup("""<p>%(para_1)s<a href="%(link)s">%(para_2)s</a>%(para_3)s</p>""") % {
-            'para_1': match[1],
-            'para_2': match[2],
-            'para_3': match[3],
-            'link': f'/odoo/recruitment/{hr_job.id}',
+        nocontent_body = Markup("""
+<p class="o_view_nocontent_smiling_face">%(help_title)s</p>
+""") % {
+            'help_title': _("No applications found."),
         }
 
         if hr_job.alias_email:
             nocontent_body += Markup('<p class="o_copy_paste_email oe_view_nocontent_alias">%(helper_email)s <a href="mailto:%(email)s">%(email)s</a></p>') % {
-                'helper_email': _("Try creating an application by sending an email to"),
+                'helper_email': _("Send applications to"),
                 'email': hr_job.alias_email,
             }
 

--- a/addons/hr_recruitment/models/hr_job.py
+++ b/addons/hr_recruitment/models/hr_job.py
@@ -59,8 +59,6 @@ class HrJob(models.Model):
     interviewer_ids = fields.Many2many('res.users', string='Interviewers', domain="[('share', '=', False), ('company_ids', 'in', company_id)]", tracking=True, help="The Interviewers set on the job position can see all Applicants in it. They have access to the information, the attachments, the meeting management and they can refuse him. You don't need to have Recruitment rights to be set as an interviewer.")
     extended_interviewer_ids = fields.Many2many('res.users', 'hr_job_extended_interviewer_res_users', compute='_compute_extended_interviewer_ids', store=True)
     industry_id = fields.Many2one('res.partner.industry', 'Industry', tracking=True)
-    date_from = fields.Date(help="Is set, update applicants availability once hired for that specific mission.")
-    date_to = fields.Date()
     currency_id = fields.Many2one("res.currency", related="company_id.currency_id", readonly=True)
     compensation = fields.Monetary(currency_field="currency_id")
 
@@ -76,6 +74,8 @@ class HrJob(models.Model):
         help='Number of hired employees for this job position during recruitment phase.',
         store=True)
 
+    job_source_ids = fields.One2many('hr.recruitment.source', 'job_id')
+
     @api.depends('application_ids.date_closed')
     def _compute_no_of_hired_employee(self):
         counts = dict(self.env['hr.applicant']._read_group(
@@ -260,13 +260,6 @@ class HrJob(models.Model):
         for vals in vals_list:
             vals["favorite_user_ids"] = vals.get("favorite_user_ids", [])
         jobs = super().create(vals_list)
-        utm_linkedin = self.env.ref("utm.utm_source_linkedin", raise_if_not_found=False)
-        if utm_linkedin:
-            source_vals = [{
-                'source_id': utm_linkedin.id,
-                'job_id': job.id,
-            } for job in jobs]
-            self.env['hr.recruitment.source'].create(source_vals)
         jobs.sudo().interviewer_ids._create_recruitment_interviewers()
         return jobs
 
@@ -303,13 +296,6 @@ class HrJob(models.Model):
                     application_ids.message_unsubscribe(to_unsubscribe)
                     application_ids.user_id = job.user_id
 
-        # Update the availability on all hired applicants if the mission end date is changed
-        if "date_to" in vals:
-            for job in self:
-                hired_applicants = job.application_ids.filtered(lambda a: a.application_status == 'hired')
-                for applicant in hired_applicants:
-                    applicant.availability = job.date_to + relativedelta(days=1)
-
         # Since the alias is created upon record creation, the default values do not reflect the current values unless
         # specifically rewritten
         # List of fields to keep synched with the alias
@@ -396,16 +382,3 @@ class HrJob(models.Model):
             "type": "ir.actions.client",
             "tag": "reload",
         }
-
-    def action_job_board_modules(self):
-        return {
-            'name': _('New Job Board'),
-            'view_mode': 'kanban,form',
-            'res_model': 'ir.module.module',
-            'domain': [
-                ('name', '=like', 'hr_recruitment_integration_%'),
-                ('auto_install', '=', False),
-                ('name', '!=', 'hr_recruitment_integration_base'),
-            ],
-            'type': 'ir.actions.act_window',
-        }

--- a/addons/hr_recruitment/models/hr_recruitment_source.py
+++ b/addons/hr_recruitment/models/hr_recruitment_source.py
@@ -45,6 +45,11 @@ class HrRecruitmentSource(models.Model):
             source.check_access('create')
             source.alias_id = self.env['mail.alias'].sudo().create(vals)
 
+    def create_and_get_alias(self):
+        self.ensure_one()
+        self.create_alias()
+        return self.email
+
     def unlink(self):
         """ Cascade delete aliases to avoid useless / badly configured aliases. """
         aliases = self.alias_id
