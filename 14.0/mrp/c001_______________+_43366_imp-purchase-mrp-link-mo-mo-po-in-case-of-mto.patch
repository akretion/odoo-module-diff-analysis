PR: https://github.com/odoo/odoo/pull/43366

From: b0d22b5752d483da0534dad00b7f35dd11612804
From: RÃ©my Voet (ryv)
Date: 2020-01-24 12:04:47

Structural Changes: 3
Total Changes: 56

[IMP] purchase_mrp: link MO<->MO<->PO in case of MTO

In case of MTO (+buy) on products used in a MO,
add the link between the MO source and the PO generated.
Also add links between MO's when MTO+manufacturing.

task-1913392

closes odoo/odoo#43366

Signed-off-by: Simon Lejeune (sle) <sle@openerp.com>

================================= pseudo patch: =================================

--- a/addons/mrp/models/mrp_production.py
+++ b/addons/mrp/models/mrp_production.py
@@ -223,6 +223,19 @@ class MrpProduction(models.Model):
     delivery_count = fields.Integer(string='Delivery Orders', compute='_compute_picking_ids')
     confirm_cancel = fields.Boolean(compute='_compute_confirm_cancel')
 
+    mrp_production_child_count = fields.Integer("Number of generated MO", compute='_compute_mrp_production_child_count')
+    mrp_production_source_count = fields.Integer("Number of source MO", compute='_compute_mrp_production_source_count')
+
+    @api.depends('procurement_group_id.stock_move_ids.created_production_id')
+    def _compute_mrp_production_child_count(self):
+        for production in self:
+            production.mrp_production_child_count = len(production.procurement_group_id.stock_move_ids.created_production_id)
+
+    @api.depends('move_dest_ids.group_id.mrp_production_id')
+    def _compute_mrp_production_source_count(self):
+        for production in self:
+            production.mrp_production_source_count = len(production.move_dest_ids.group_id.mrp_production_id)
+
     @api.depends('move_raw_ids.date_expected', 'move_finished_ids.date_expected')
     def _compute_dates_planned(self):
         for production in self:
@@ -698,6 +711,46 @@ class MrpProduction(models.Model):
             return 'assigned'
         return 'confirmed'
 
+    def action_view_mrp_production_childs(self):
+        self.ensure_one()
+        mrp_production_ids = self.procurement_group_id.stock_move_ids.created_production_id.ids
+        action = {
+            'res_model': 'mrp.production',
+            'type': 'ir.actions.act_window',
+        }
+        if len(mrp_production_ids) == 1:
+            action.update({
+                'view_mode': 'form',
+                'res_id': mrp_production_ids[0],
+            })
+        else:
+            action.update({
+                'name': _("MO Source of %s" % self.name),
+                'domain': [('id', 'in', mrp_production_ids)],
+                'view_mode': 'tree,form',
+            })
+        return action
+
+    def action_view_mrp_production_sources(self):
+        self.ensure_one()
+        mrp_production_ids = self.move_dest_ids.group_id.mrp_production_id.ids
+        action = {
+            'res_model': 'mrp.production',
+            'type': 'ir.actions.act_window',
+        }
+        if len(mrp_production_ids) == 1:
+            action.update({
+                'view_mode': 'form',
+                'res_id': mrp_production_ids[0],
+            })
+        else:
+            action.update({
+                'name': _("MO Generated by %s" % self.name),
+                'domain': [('id', 'in', mrp_production_ids)],
+                'view_mode': 'tree,form',
+            })
+        return action
+
     def action_confirm(self):
         self._check_company()
         for production in self:

--- a/addons/mrp/models/stock_rule.py
+++ b/addons/mrp/models/stock_rule.py
@@ -134,9 +134,12 @@ class StockRule(models.Model):
         new_move_vals['production_id'] = False
         return new_move_vals
 
+
 class ProcurementGroup(models.Model):
     _inherit = 'procurement.group'
 
+    mrp_production_id = fields.One2many('mrp.production', 'procurement_group_id')
+
     @api.model
     def run(self, procurements, raise_user_error=True):
         """ If 'run' is called on a kit, this override is made in order to call
