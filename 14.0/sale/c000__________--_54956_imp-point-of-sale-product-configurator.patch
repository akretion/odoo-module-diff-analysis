PR: https://github.com/odoo/odoo/pull/54956

From: 0c3fe8736d77763b4fb31fd76be1f41f1effd5c0
From: Antoine Prieels
Date: 2020-07-30 13:08:24

Breaking data model changes scores: del:13 + add:0, change matches:
-    _inherit = "product.attribute"
-    display_type = fields.Selection([
-    _inherit = "product.attribute.value"
-    is_custom = fields.Boolean('Is custom value', help="Allow users to input custom values for this attribute value")
-    html_color = fields.Char(
-    display_type = fields.Selection(related='attribute_id.display_type', readonly=True)
-    _inherit = "product.template.attribute.value"
-    html_color = fields.Char('HTML Color Index', related="product_attribute_value_id.html_color")
-    is_custom = fields.Boolean('Is custom value', related="product_attribute_value_id.is_custom")
-    display_type = fields.Selection(related='product_attribute_value_id.display_type', readonly=True)
-    name = fields.Char("Name", compute='_compute_name')
-    custom_product_template_attribute_value_id = fields.Many2one('product.template.attribute.value', string="Attribute Value", required=True, ondelete='restrict')
-    custom_value = fields.Char("Custom Value")

Total Changes: 42

[IMP] point_of_sale: Product configurator

Configure products with create_variants = 'never' from the POS

closes odoo/odoo#54956

Taskid: 208205
Related: odoo/upgrade#1522
Signed-off-by: pimodoo <pimodoo@users.noreply.github.com>

================================= pseudo patch: =================================

--- a/addons/sale/models/product_product.py
+++ b/addons/sale/models/product_product.py
@@ -57,50 +57,10 @@ class ProductProduct(models.Model):
         return self.product_tmpl_id._get_combination_info(self.product_template_attribute_value_ids, self.id, add_qty, pricelist, parent_combination)
 
 
-class ProductAttribute(models.Model):
-    _inherit = "product.attribute"
-
-    display_type = fields.Selection([
-        ('radio', 'Radio'),
-        ('select', 'Select'),
-        ('color', 'Color')], default='radio', required=True, help="The display type used in the Product Configurator.")
-
-
-class ProductAttributeValue(models.Model):
-    _inherit = "product.attribute.value"
-
-    is_custom = fields.Boolean('Is custom value', help="Allow users to input custom values for this attribute value")
-    html_color = fields.Char(
-        string='Color',
-        help="Here you can set a specific HTML color index (e.g. #ff0000) to display the color if the attribute type is 'Color'.")
-    display_type = fields.Selection(related='attribute_id.display_type', readonly=True)
-
-
-class ProductTemplateAttributeValue(models.Model):
-    _inherit = "product.template.attribute.value"
-
-    html_color = fields.Char('HTML Color Index', related="product_attribute_value_id.html_color")
-    is_custom = fields.Boolean('Is custom value', related="product_attribute_value_id.is_custom")
-    display_type = fields.Selection(related='product_attribute_value_id.display_type', readonly=True)
-
-
 class ProductAttributeCustomValue(models.Model):
-    _name = "product.attribute.custom.value"
-    _description = 'Product Attribute Custom Value'
-    _order = 'custom_product_template_attribute_value_id, id'
+    _inherit = "product.attribute.custom.value"
 
-    name = fields.Char("Name", compute='_compute_name')
-    custom_product_template_attribute_value_id = fields.Many2one('product.template.attribute.value', string="Attribute Value", required=True, ondelete='restrict')
     sale_order_line_id = fields.Many2one('sale.order.line', string="Sales Order Line", required=True, ondelete='cascade')
-    custom_value = fields.Char("Custom Value")
-
-    @api.depends('custom_product_template_attribute_value_id.name', 'custom_value')
-    def _compute_name(self):
-        for record in self:
-            name = (record.custom_value or '').strip()
-            if record.custom_product_template_attribute_value_id.display_name:
-                name = "%s: %s" % (record.custom_product_template_attribute_value_id.display_name, name)
-            record.name = name
 
     _sql_constraints = [
         ('sol_custom_value_unique', 'unique(custom_product_template_attribute_value_id, sale_order_line_id)', "Only one Custom Value is allowed per Attribute Value per Sales Order Line.")
