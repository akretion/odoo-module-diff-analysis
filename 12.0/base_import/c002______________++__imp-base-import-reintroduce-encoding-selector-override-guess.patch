PR: https://github.com/odoo/odoo/pull/

From: 5aba5ac99e6663f0b8d329f7607e44068d1174e4
From: Xavier Morel
Date: 2018-08-07 11:07:05

Structural Changes: 7
Total Changes: 19

[IMP] base_import: reintroduce encoding selector & override guess

* if an encoding is explicitly specified, use it and don't guess
* otherwise guess and return the guessed encoding so it can be
  displayed in the configuration UI
* fix less-than-stellar configuration & behaviour of select2 inputs
  to properly reflect underlying values as they get modified, to
  correctly handle future configuration guesses

================================= pseudo patch: =================================

--- a/addons/base_import/models/base_import.py
+++ b/addons/base_import/models/base_import.py
@@ -2,6 +2,7 @@
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
 import base64
+import codecs
 import collections
 import unicodedata
 
@@ -311,8 +312,12 @@ class Import(models.TransientModel):
             :throws csv.Error: if an error is detected during CSV parsing
         """
         csv_data = self.file
-        encoding = chardet.detect(csv_data)['encoding']
-        csv_data = csv_data.decode(encoding).encode('utf-8')
+        encoding = options.get('encoding')
+        if not encoding:
+            encoding = options['encoding'] = chardet.detect(csv_data)['encoding'].lower()
+
+        if encoding != 'utf-8':
+            csv_data = csv_data.decode(encoding).encode('utf-8')
 
         csv_iterator = pycompat.csv_reader(
             io.BytesIO(csv_data),

--- a/addons/base_import/models/test_models.py
+++ b/addons/base_import/models/test_models.py
@@ -81,3 +81,13 @@ class FloatModel(models.Model):
     value = fields.Float()
     value2 = fields.Monetary()
     currency_id = fields.Many2one('res.currency')
+
+class ComplexModel(models.Model):
+    _name = name('complex')
+
+    f = fields.Float()
+    m = fields.Monetary()
+    c = fields.Char()
+    currency_id = fields.Many2one('res.currency')
+    d = fields.Date()
+    dt = fields.Datetime()
