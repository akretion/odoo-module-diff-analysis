PR: https://github.com/odoo/odoo/pull/33083

From: e71f954da3a3b29f2b89e02b56419de43e13952c
From: Priyanka Kakadiya
Date: 2019-05-28 08:36:58

Structural Changes: 5
Total Changes: 9

[REF] purchase,mrp,repairs,stock: enforce uom domain

Enforce the domain of the UOM not by an onchange but by a domain.

Exemple of issue if the domain is enforce by an onchange:
- create a picking
- add a move
- select the product
- select an uom
> the uom presented are the one from the product category.
-Save
- edit
- select an uom
> all UOM are presented even the ones of other categories

This commit enforce this new logic at most places.

task: 1886272

closes odoo/odoo#33083

Signed-off-by: Simon Lejeune (sle) <sle@openerp.com>

================================= pseudo patch: =================================

--- a/addons/repair/models/repair.py
+++ b/addons/repair/models/repair.py
@@ -42,7 +42,8 @@ class Repair(models.Model):
         readonly=True, required=True, states={'draft': [('readonly', False)]})
     product_uom = fields.Many2one(
         'uom.uom', 'Product Unit of Measure',
-        readonly=True, required=True, states={'draft': [('readonly', False)]})
+        readonly=True, required=True, states={'draft': [('readonly', False)]}, domain="[('category_id', '=', product_uom_category_id)]")
+    product_uom_category_id = fields.Many2one(related='product_id.uom_id.category_id')
     partner_id = fields.Many2one(
         'res.partner', 'Customer',
         index=True, states={'confirmed': [('readonly', True)]},
@@ -518,7 +519,8 @@ class RepairLine(models.Model):
         digits=dp.get_precision('Product Unit of Measure'), required=True)
     product_uom = fields.Many2one(
         'uom.uom', 'Product Unit of Measure',
-        required=True)
+        required=True, domain="[('category_id', '=', product_uom_category_id)]")
+    product_uom_category_id = fields.Many2one(related='product_id.uom_id.category_id')
     invoice_line_id = fields.Many2one(
         'account.invoice.line', 'Invoice Line',
         copy=False, readonly=True)
@@ -630,7 +632,8 @@ class RepairFee(models.Model):
     product_id = fields.Many2one('product.product', 'Product')
     product_uom_qty = fields.Float('Quantity', digits=dp.get_precision('Product Unit of Measure'), required=True, default=1.0)
     price_unit = fields.Float('Unit Price', required=True)
-    product_uom = fields.Many2one('uom.uom', 'Product Unit of Measure', required=True)
+    product_uom = fields.Many2one('uom.uom', 'Product Unit of Measure', required=True, domain="[('category_id', '=', product_uom_category_id)]")
+    product_uom_category_id = fields.Many2one(related='product_id.uom_id.category_id')
     price_subtotal = fields.Float('Subtotal', compute='_compute_price_subtotal', store=True, digits=0)
     tax_id = fields.Many2many('account.tax', 'repair_fee_line_tax', 'repair_fee_line_id', 'tax_id', 'Taxes')
     invoice_line_id = fields.Many2one('account.invoice.line', 'Invoice Line', copy=False, readonly=True)
