PR: https://github.com/odoo/odoo/pull/125738

From: d7ec92f349efebf48efddf1b4d66e4b33f8bcffa
From: Jurgen (jugj)
Date: 2023-06-20 13:58:38

Structural Changes: 1
Total Changes: 52

[FIX] hr_holidays : Remove automatic notification if no responsible_ids is set

Currently in hr_leaves_type, if no responsible_ids are set, all members of group_hr_holidays_user would get notified, the new behavior changes that to :
If no responsible_ids are set, no one is notified.
Some unit tests had to be adapted to this new flow, since they were sometimes getting created with no responsible_id assigned, leading to no one being notified.
task-3284318

closes odoo/odoo#125738

X-original-commit: fb1a6a8f0072398c57508b59724fcbde9a34b124
Signed-off-by: Kevin Baptiste <kba@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr_holidays/models/hr_leave.py
+++ b/addons/hr_holidays/models/hr_leave.py
@@ -1588,8 +1588,7 @@ class HolidaysRequest(models.Model):
         elif self.validation_type == 'hr' or (self.validation_type == 'both' and self.state == 'validate1'):
             if self.holiday_status_id.responsible_ids:
                 responsible = self.holiday_status_id.responsible_ids
-            else:
-                responsible = self.env.ref('hr_holidays.group_hr_holidays_user').users.filtered(lambda u: self.holiday_status_id.company_id in u.company_ids)
+
         return responsible
 
     def activity_update(self):
@@ -1604,16 +1603,17 @@ class HolidaysRequest(models.Model):
             if holiday.state == 'draft':
                 to_clean |= holiday
             elif holiday.state == 'confirm':
-                user_ids = holiday.sudo()._get_responsible_for_approval().ids or self.env.user.ids
-                for user_id in user_ids:
-                    activity_vals.append({
-                        'activity_type_id': self.env.ref('hr_holidays.mail_act_leave_approval').id,
-                        'automated': True,
-                        'note': note,
-                        'user_id': user_id,
-                        'res_id': holiday.id,
-                        'res_model_id': self.env.ref('hr_holidays.model_hr_leave').id,
-                    })
+                if holiday.holiday_status_id.responsible_ids:
+                    user_ids = holiday.sudo()._get_responsible_for_approval().ids or self.env.user.ids
+                    for user_id in user_ids:
+                        activity_vals.append({
+                            'activity_type_id': self.env.ref('hr_holidays.mail_act_leave_approval').id,
+                            'automated': True,
+                            'note': note,
+                            'user_id': user_id,
+                            'res_id': holiday.id,
+                            'res_model_id': self.env.ref('hr_holidays.model_hr_leave').id,
+                        })
             elif holiday.state == 'validate':
                 to_do |= holiday
             elif holiday.state == 'refuse':

--- a/addons/hr_holidays/models/hr_leave_allocation.py
+++ b/addons/hr_holidays/models/hr_leave_allocation.py
@@ -757,9 +757,6 @@ class HolidaysAllocation(models.Model):
         if self.validation_type == 'officer' or self.validation_type == 'set':
             if self.holiday_status_id.responsible_ids:
                 responsible = self.holiday_status_id.responsible_ids
-            else:
-                responsible = self.env.ref('hr_holidays.group_hr_holidays_user').users.filtered(lambda u: self.holiday_status_id.company_id in u.company_ids)
-
         return responsible
 
     def activity_update(self):
@@ -776,16 +773,17 @@ class HolidaysAllocation(models.Model):
                 if allocation.state == 'draft':
                     to_clean |= allocation
                 elif allocation.state == 'confirm':
-                    user_ids = allocation.sudo()._get_responsible_for_approval().ids or self.env.user.ids
-                    for user_id in user_ids:
-                        activity_vals.append({
-                            'activity_type_id': self.env.ref('hr_holidays.mail_act_leave_allocation_approval').id,
-                            'automated': True,
-                            'note': note,
-                            'user_id': user_id,
-                            'res_id': allocation.id,
-                            'res_model_id': self.env.ref('hr_holidays.model_hr_leave_allocation').id,
-                        })
+                    if allocation.holiday_status_id.responsible_ids:
+                        user_ids = allocation.sudo()._get_responsible_for_approval().ids
+                        for user_id in user_ids:
+                            activity_vals.append({
+                                'activity_type_id': self.env.ref('hr_holidays.mail_act_leave_allocation_approval').id,
+                                'automated': True,
+                                'note': note,
+                                'user_id': user_id,
+                                'res_id': allocation.id,
+                                'res_model_id': self.env.ref('hr_holidays.model_hr_leave_allocation').id,
+                            })
                 elif allocation.state == 'validate':
                     to_do |= allocation
                 elif allocation.state == 'refuse':

--- a/addons/hr_holidays/models/hr_leave_type.py
+++ b/addons/hr_holidays/models/hr_leave_type.py
@@ -59,12 +59,12 @@ class HolidaysType(models.Model):
         compute='_compute_group_days_leave', string='Group Time Off')
     company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
     responsible_ids = fields.Many2many(
-        'res.users', 'hr_leave_type_res_users_rel', 'hr_leave_type_id', 'res_users_id', string='Responsible Time Off Officer',
+        'res.users', 'hr_leave_type_res_users_rel', 'hr_leave_type_id', 'res_users_id', string='Notified Time Off Officer',
         domain=lambda self: [('groups_id', 'in', self.env.ref('hr_holidays.group_hr_holidays_user').id),
                              ('share', '=', False),
                              ('company_ids', 'in', self.env.company.id)],
                              auto_join=True,
-        help="Choose the Time Off Officer who will be notified to approve allocation or Time Off request")
+        help="Choose the Time Off Officers who will be notified to approve allocation or Time Off Request. If empty, nobody will be notified")
     leave_validation_type = fields.Selection([
         ('no_validation', 'No Validation'),
         ('hr', 'By Time Off Officer'),
