PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:7 + add:0, change matches:
-    _inherit = ["ir.model"]
-    _inherit = ["ir.ui.menu"]
-    _inherit = ['ir.ui.view']
-    _inherit = ['res.company']
-    _inherit = ['res.config.settings']
-    _inherit = ['res.partner']
-    _inherit = ["res.users"]

Total Changes: 19

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/web/models/ir_http.py
+++ b/addons/web/models/ir_http.py
@@ -28,7 +28,7 @@ ALLOWED_DEBUG_MODES = ['', '1', 'assets', 'tests', 'disable-t-cache']
 
 
 class IrHttp(models.AbstractModel):
-    _inherit = ['ir.http']
+    _inherit = 'ir.http'
 
     bots = ["bot", "crawl", "slurp", "spider", "curl", "wget", "facebookexternalhit", "whatsapp", "trendsmapresolver", "pinterest", "instagram"]
 

--- a/addons/web/models/ir_model.py
+++ b/addons/web/models/ir_model.py
@@ -5,7 +5,7 @@ from odoo import models, api
 
 
 class IrModel(models.Model):
-    _inherit = ["ir.model"]
+    _inherit = "ir.model"
 
     @api.model
     def display_name_for(self, models):

--- a/addons/web/models/ir_qweb_fields.py
+++ b/addons/web/models/ir_qweb_fields.py
@@ -114,6 +114,7 @@ class IrQwebFieldImage(models.AbstractModel):
 
 
 class IrQwebFieldImage_Url(models.AbstractModel):
+    _name = 'ir.qweb.field.image_url'
     _description = 'Qweb Field Image'
     _inherit = ['ir.qweb.field.image_url']
 

--- a/addons/web/models/ir_ui_menu.py
+++ b/addons/web/models/ir_ui_menu.py
@@ -7,7 +7,7 @@ from odoo import models
 
 
 class IrUiMenu(models.Model):
-    _inherit = ["ir.ui.menu"]
+    _inherit = "ir.ui.menu"
 
     def load_web_menus(self, debug):
         """ Loads all menu items (all applications and their sub-menus) and

--- a/addons/web/models/ir_ui_view.py
+++ b/addons/web/models/ir_ui_view.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class IrUiView(models.Model):
-    _inherit = ['ir.ui.view']
+    _inherit = 'ir.ui.view'
 
     def get_view_info(self):
         _view_info = self._get_view_info()

--- a/addons/web/models/models.py
+++ b/addons/web/models/models.py
@@ -41,7 +41,7 @@ DISPLAY_DATE_FORMATS = {
 
 
 class Base(models.AbstractModel):
-    _inherit = ['base']
+    _inherit = 'base'
 
     @api.model
     @api.readonly
@@ -1054,7 +1054,7 @@ class Base(models.AbstractModel):
 
 
 class ResCompany(models.Model):
-    _inherit = ['res.company']
+    _inherit = 'res.company'
 
     @api.model_create_multi
     def create(self, vals_list):

--- a/addons/web/models/res_config_settings.py
+++ b/addons/web/models/res_config_settings.py
@@ -5,6 +5,6 @@ from odoo import fields, models
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = ['res.config.settings']
+    _inherit = 'res.config.settings'
 
     web_app_name = fields.Char('Web App Name', config_parameter='web.web_app_name')

--- a/addons/web/models/res_partner.py
+++ b/addons/web/models/res_partner.py
@@ -16,7 +16,7 @@ except ImportError:
 
 
 class ResPartner(models.Model):
-    _inherit = ['res.partner']
+    _inherit = 'res.partner'
 
     def _build_vcard(self):
         """ Build the partner's vCard.

--- a/addons/web/models/res_users.py
+++ b/addons/web/models/res_users.py
@@ -5,7 +5,7 @@ from odoo.osv import expression
 
 
 class ResUsers(models.Model):
-    _inherit = ["res.users"]
+    _inherit = "res.users"
 
     @api.model
     def name_search(self, name='', args=None, operator='ilike', limit=100):
