PR: https://github.com/odoo/odoo/pull/160529

From: 744f919e9c73a163c716915d64d75b1b5583d205
From: Flotchet
Date: 2024-06-07 20:29:52

Structural Changes: 2
Total Changes: 68

[IMP] [FIX] hr_holidays: computed name

Improvement
-----------
This commit adds the autogeneration of the name
field.
Previously this behavior was only available in the
dashboard.
The name will not be computed if modified by the
user.

The reason of this change is to avoid the user
to manually put the name of the allocation
every time or update it on changes.

Fixes
-----
In addition to that this commit corrects
fix 1.
======
The name is now computed when the allocation
The problematic reset of the name when the
allocation is updated. (follows task 3713656)

Steps to reproduce the bug:

- Go to Time Off -> Allocation -> Create
- put a name
- change the allocation type
-> the name is reset

Expected result:
The name should not be reset to the old value

Reason:
The displayed name is relies on the private_name
field to get its value. And thus every time
an onchange is triggered the name is reset.

New Fix:
Revert most of the change of the commit https://github.com/extraprofitro/odoo/commit/c2eef0cacea0100b1bfa7c39140d267e94a16de6
(no task-id found) that was made for odoo 13.1
(except the compute of the title that was
readapted for the behavior expected for this
new task)
The commit was originally made in response
to this change https://github.com/extraprofitro/odoo/commit/eb02e9b3e00243bcf8a41b0f42273e59875ab968
(task-2088559) for fix in odoo 11.3 and imp in 13.1

NOTE: The two next bug where discovered while
making the Improvement. Those will be also covered
in a separate commit for previous version in
task 3852940

The two bugs are both introduce by the same PR
https://github.com/odoo/odoo/pull/116472
(task-3084232)

fix 2.
======
Wrong units in the form views display (dashboard)
No task
Steps to reproduce the bug:

- Go to Time Off
- On the dashboard, click on "New Allocation Request"
- Select an Time Off Type that is in Half Days
-> The units are displayed in "half_days" and
are not corresponding to the days unit

Reason
The units where retrived from the type_request_unit
field while the duration was just readen from the
number_of_days_display or the number_of_hours_display
fields.

Fix
The units are now computed selected between hours
and days not derived from the type_request_unit.

fix 3.
======
Reset of number of days/hours when changing the
allocation type
No task

Steps to reproduce the bug:
- Go to Time Off
- On the dashboard, click on "New Allocation Request"
- Select an other Time Off Type in days
- the number of days is reset to 0 while it should
be kept at one

Reason
When computing the title:
The two fields number_of_days_display and
number_of_hours are computed from the number_of_days
field. But when you change the allocation type
the recomputation is still not done at the title
computation time and thus the number_of_days_display
and number_of_hours_display are 0 and since the
number_of_days is also based on the number_of_days_display
the number_of_days is also reset to 0 after title
computation.

Fix
use the number_of_days field instead of the
number_of_days_display field to compute the
title.

task-3552639
task-3598745
task-3713656
task-3852940

closes odoo/odoo#160529

Related: odoo/upgrade#5895
Signed-off-by: Bertrand Dossogne (bedo) <bedo@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr_holidays/models/hr_leave_allocation.py
+++ b/addons/hr_holidays/models/hr_leave_allocation.py
@@ -40,11 +40,11 @@ class HolidaysAllocation(models.Model):
     name = fields.Char(
         string='Description',
         compute='_compute_description',
-        inverse='_inverse_description',
-        search='_search_description',
+        store=True,
+        readonly=False,
         compute_sudo=False)
+    is_name_custom = fields.Boolean(readonly=True, store=False)
     name_validity = fields.Char('Description with validity', compute='_compute_description_validity')
-    private_name = fields.Char('Allocation Description', groups='hr_holidays.group_hr_holidays_user')
     state = fields.Selection([
         ('confirm', 'To Approve'),
         ('refuse', 'Refused'),
@@ -154,46 +154,42 @@ class HolidaysAllocation(models.Model):
     def _compute_is_officer(self):
         self.is_officer = self.env.user.has_group("hr_holidays.group_hr_holidays_user")
 
+    def _get_title(self):
+        self.ensure_one()
+        if not self.holiday_status_id:
+            return _("Allocation Request")
+        if self.type_request_unit == 'hour':
+            return _(
+                '%(name)s (%(duration)s hour(s))',
+                name=self.holiday_status_id.name,
+                duration=self.number_of_days * (
+                    self.employee_id.sudo().resource_calendar_id.hours_per_day
+                    or self.holiday_status_id.company_id.resource_calendar_id.hours_per_day
+                    or HOURS_PER_DAY
+                ),
+            )
+        return _(
+            '%(name)s (%(duration)s day(s))',
+            name=self.holiday_status_id.name,
+            duration=self.number_of_days,
+        )
+
+    @api.onchange('name')
+    def _onchange_name(self):
+        if not self.name:
+            self.is_name_custom = False
+        elif self.name != self._get_title():
+            self.is_name_custom = True
+
     # Useless depends, so that name is computed on new, before saving the record
     @api.depends_context('uid')
     @api.depends('holiday_status_id')
     def _compute_description(self):
         self.check_access_rights('read')
         self.check_access_rule('read')
-
-        is_officer = self.env.user.has_group('hr_holidays.group_hr_holidays_user')
-
         for allocation in self:
-            if is_officer or allocation.employee_id.user_id == self.env.user or allocation.employee_id.leave_manager_id == self.env.user:
-                title = allocation.sudo().private_name
-                if allocation.env.context.get('is_employee_allocation'):
-                    if allocation.holiday_status_id:
-                        allocation_duration = allocation.number_of_days_display if allocation.type_request_unit != 'hour' else allocation.number_of_hours_display
-                        title = _("%(status)s allocation request (%(duration)s %(unit)s)",
-                            status=allocation.holiday_status_id.name,
-                            duration=allocation_duration,
-                            unit=allocation.type_request_unit)
-                    else:
-                        title = _("Allocation Request")
-                allocation.name = title
-            else:
-                allocation.name = '*****'
-
-    def _inverse_description(self):
-        is_officer = self.env.user.has_group('hr_holidays.group_hr_holidays_user')
-        for allocation in self:
-            if is_officer or allocation.employee_id.user_id == self.env.user or allocation.employee_id.leave_manager_id == self.env.user:
-                allocation.sudo().private_name = allocation.name
-
-    def _search_description(self, operator, value):
-        is_officer = self.env.user.has_group('hr_holidays.group_hr_holidays_user')
-        domain = [('private_name', operator, value)]
-
-        if not is_officer:
-            domain = expression.AND([domain, [('employee_id.user_id', '=', self.env.user.id)]])
-
-        allocations = self.sudo().search(domain)
-        return [('id', 'in', allocations.ids)]
+            if not allocation.is_name_custom:
+                allocation.name = allocation._get_title()
 
     @api.depends('accrual_plan_id')
     def _compute_has_accrual_plan(self):
