PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:4 + add:0, change matches:
-    _inherit = ['account.move.line']
-    _inherit = ["hr.expense"]
-    _inherit = ["hr.expense.sheet"]
-    _inherit = ['project.project']

Total Changes: 8

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/project_sale_expense/models/account_move_line.py
+++ b/addons/project_sale_expense/models/account_move_line.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class AccountMoveLine(models.Model):
-    _inherit = ['account.move.line']
+    _inherit = 'account.move.line'
 
     def _sale_determine_order(self):
         """ For move lines created from expense, we override the normal behavior.

--- a/addons/project_sale_expense/models/hr_expense.py
+++ b/addons/project_sale_expense/models/hr_expense.py
@@ -4,7 +4,7 @@ from odoo import api, models
 
 
 class HrExpense(models.Model):
-    _inherit = ["hr.expense"]
+    _inherit = "hr.expense"
 
     @api.depends('sale_order_id')
     def _compute_analytic_distribution(self):

--- a/addons/project_sale_expense/models/hr_expense_sheet.py
+++ b/addons/project_sale_expense/models/hr_expense_sheet.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class HrExpenseSheet(models.Model):
-    _inherit = ["hr.expense.sheet"]
+    _inherit = "hr.expense.sheet"
 
     def _do_create_moves(self):
         """ When creating the move of the expense, if the AA is given in the project of the SO, we take it as reference in the distribution.

--- a/addons/project_sale_expense/models/project_project.py
+++ b/addons/project_sale_expense/models/project_project.py
@@ -8,7 +8,7 @@ from collections import defaultdict
 
 
 class ProjectProject(models.Model):
-    _inherit = ['project.project']
+    _inherit = 'project.project'
 
     def _get_expenses_profitability_items(self, with_action=True):
         expenses_read_group = self.env['hr.expense']._read_group(
