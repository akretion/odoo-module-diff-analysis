PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:6 + add:0, change matches:
-    _inherit = ['event.event']
-    _inherit = ['event.registration']
-    _inherit = ['event.event.ticket']
-    _inherit = ['product.template']
-    _inherit = ["sale.order"]
-    _inherit = ['sale.order.line']

Total Changes: 12

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/event_sale/models/event_event.py
+++ b/addons/event_sale/models/event_event.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class EventEvent(models.Model):
-    _inherit = ['event.event']
+    _inherit = 'event.event'
 
     sale_order_lines_ids = fields.One2many(
         'sale.order.line', 'event_id',

--- a/addons/event_sale/models/event_registration.py
+++ b/addons/event_sale/models/event_registration.py
@@ -6,7 +6,7 @@ from odoo.tools import float_is_zero
 
 
 class EventRegistration(models.Model):
-    _inherit = ['event.registration']
+    _inherit = 'event.registration'
 
     # TDE FIXME: maybe add an onchange on sale_order_id
     sale_order_id = fields.Many2one('sale.order', string='Sales Order', ondelete='cascade', copy=False)

--- a/addons/event_sale/models/event_ticket.py
+++ b/addons/event_sale/models/event_ticket.py
@@ -2,7 +2,7 @@ from odoo import models
 
 
 class EventEventTicket(models.Model):
-    _inherit = ['event.event.ticket']
+    _inherit = 'event.event.ticket'
     _order = "event_id, sequence, price, name, id"
 
     def _get_ticket_multiline_description(self):

--- a/addons/event_sale/models/product_template.py
+++ b/addons/event_sale/models/product_template.py
@@ -2,7 +2,7 @@ from odoo import _, api, models
 
 
 class ProductTemplate(models.Model):
-    _inherit = ['product.template']
+    _inherit = 'product.template'
 
     def _prepare_service_tracking_tooltip(self):
         if self.service_tracking == 'event':

--- a/addons/event_sale/models/sale_order.py
+++ b/addons/event_sale/models/sale_order.py
@@ -8,7 +8,7 @@ from odoo.osv import expression
 
 
 class SaleOrder(models.Model):
-    _inherit = ["sale.order"]
+    _inherit = "sale.order"
 
     attendee_count = fields.Integer('Attendee Count', compute='_compute_attendee_count')
 

--- a/addons/event_sale/models/sale_order_line.py
+++ b/addons/event_sale/models/sale_order_line.py
@@ -5,7 +5,7 @@ from odoo.exceptions import ValidationError
 
 
 class SaleOrderLine(models.Model):
-    _inherit = ['sale.order.line']
+    _inherit = 'sale.order.line'
 
     event_id = fields.Many2one(
         'event.event', string='Event',
