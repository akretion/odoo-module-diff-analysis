PR: https://github.com/odoo/odoo/pull/192211

From: 5ad26943c26a6f297ad4c5e1b18da4e4bc43e103
From: Lulu Grimalkin (lugr)
Date: 2025-04-09 09:56:38

Breaking data model changes scores: del:3 + add:0, change matches:
-    invoice_warn = fields.Selection(WARNING_MESSAGE, 'Invoice', help=WARNING_HELP, default="no-message")
-    invoice_warn_msg = fields.Text('Message for Invoice')
-    group_warning_account = fields.Boolean(string="Warnings in Invoices", implied_group='account.group_warning_account')

Total Changes: 20

[REM] account,product,purchase,sale,stock: remove blocking warnings

Warnings are being revamped in logistics modules. Blocking warnings
are being replaced with polite, nonintrusive warnings in purchase and
sale orders, and with internal instructions in stock pickings, all of
which will be displayed in warning boxes in views rather than popup
dialogs. Invoices rely on partner and product warnings from `purchase`
and `sale` depending on the move type, and no longer have distinct
partner warnings.

As there are no separate blocking warnings, there are no warning types
either, and whether a warning exists depends on whether the message
string is empty.

Task ID: 4268689

Part-of: odoo/odoo#192211
Related: odoo/enterprise#76401
Related: odoo/upgrade#7008
Signed-off-by: Tiffany Chang (tic) <tic@odoo.com>

================================= pseudo patch: =================================

--- a/addons/account/models/account_move.py
+++ b/addons/account/models/account_move.py
@@ -2307,7 +2307,6 @@ class AccountMove(models.Model):
     def _onchange_partner_id(self):
         self = self.with_company((self.journal_id.company_id or self.env.company)._accessible_branches()[:1])
 
-        warning = {}
         if self.partner_id:
             rec_account = self.partner_id.property_account_receivable_id
             pay_account = self.partner_id.property_account_payable_id
@@ -2315,20 +2314,6 @@ class AccountMove(models.Model):
                 action = self.env.ref('account.action_account_config')
                 msg = _('Cannot find a chart of accounts for this company, You should configure it. \nPlease go to Account Configuration.')
                 raise RedirectWarning(msg, action.id, _('Go to the configuration panel'))
-            p = self.partner_id
-            if p.invoice_warn == 'no-message' and p.parent_id:
-                p = p.parent_id
-            if p.invoice_warn and p.invoice_warn != 'no-message':
-                # Block if partner only has warning but parent company is blocked
-                if p.invoice_warn != 'block' and p.parent_id and p.parent_id.invoice_warn == 'block':
-                    p = p.parent_id
-                warning = {
-                    'title': _("Warning for %s", p.name),
-                    'message': p.invoice_warn_msg
-                }
-                if p.invoice_warn == 'block':
-                    self.partner_id = False
-                return {'warning': warning}
 
     @api.onchange('name', 'highest_name')
     def _onchange_name_warning(self):

--- a/addons/account/models/partner.py
+++ b/addons/account/models/partner.py
@@ -10,8 +10,6 @@ from odoo import _, api, fields, models
 from odoo.exceptions import LockError, UserError, ValidationError
 from odoo.osv import expression
 from odoo.tools import DEFAULT_SERVER_DATETIME_FORMAT, SQL, mute_logger, unique
-
-from odoo.addons.base.models.res_partner import WARNING_HELP, WARNING_MESSAGE
 from odoo.addons.base_vat.models.res_partner import _ref_vat
 
 _logger = logging.getLogger(__name__)
@@ -567,8 +565,6 @@ class ResPartner(models.Model):
     trust = fields.Selection([('good', 'Good Debtor'), ('normal', 'Normal Debtor'), ('bad', 'Bad Debtor')], string='Degree of trust you have in this debtor', company_dependent=True)
     ignore_abnormal_invoice_date = fields.Boolean(company_dependent=True)
     ignore_abnormal_invoice_amount = fields.Boolean(company_dependent=True)
-    invoice_warn = fields.Selection(WARNING_MESSAGE, 'Invoice', help=WARNING_HELP, default="no-message")
-    invoice_warn_msg = fields.Text('Message for Invoice')
     invoice_sending_method = fields.Selection(
         string="Invoice sending",
         selection=[

--- a/addons/account/models/res_config_settings.py
+++ b/addons/account/models/res_config_settings.py
@@ -78,7 +78,6 @@ class ResConfigSettings(models.TransientModel):
         ],
         help="Intermediary account used when moving from a liquidity account to another.")
     module_account_accountant = fields.Boolean(string='Accounting')
-    group_warning_account = fields.Boolean(string="Warnings in Invoices", implied_group='account.group_warning_account')
     group_cash_rounding = fields.Boolean(string="Cash Rounding", implied_group='account.group_cash_rounding')
     group_show_sale_receipts = fields.Boolean(string='Sale Receipt',
         implied_group='account.group_sale_receipts')
