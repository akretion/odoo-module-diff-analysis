PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:14 + add:0, change matches:
-    _inherit = 'account.move'
-    _inherit = "account.move.line"
-    _inherit = 'product.template'
-    _inherit = 'res.company'
-    _inherit = 'res.config.settings'
-    _inherit = "sale.order"
-    _inherit = 'sale.order.line'
-    _inherit = "stock.route"
-    _inherit = "stock.move"
-    _inherit = "stock.move.line"
-    _inherit = 'procurement.group'
-    _inherit = 'stock.rule'
-    _inherit = 'stock.picking'
-    _inherit = 'stock.lot'

Total Changes: 31

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/sale_stock/models/account_move.py
+++ b/addons/sale_stock/models/account_move.py
@@ -9,7 +9,7 @@ from odoo.tools.misc import formatLang
 
 
 class AccountMove(models.Model):
-    _inherit = 'account.move'
+    _inherit = ['account.move']
 
     def _stock_account_get_last_step_stock_moves(self):
         """ Overridden from stock_account.
@@ -133,8 +133,9 @@ class AccountMove(models.Model):
             if incoterm_res:
                 move.incoterm_location = incoterm_res
 
+
 class AccountMoveLine(models.Model):
-    _inherit = "account.move.line"
+    _inherit = ["account.move.line"]
 
     def _sale_can_be_reinvoice(self):
         self.ensure_one()

--- a/addons/sale_stock/models/product_template.py
+++ b/addons/sale_stock/models/product_template.py
@@ -5,7 +5,7 @@ from odoo import api, models
 
 
 class ProductTemplate(models.Model):
-    _inherit = 'product.template'
+    _inherit = ['product.template']
 
     @api.depends('type')
     def _compute_expense_policy(self):

--- a/addons/sale_stock/models/res_company.py
+++ b/addons/sale_stock/models/res_company.py
@@ -4,8 +4,8 @@
 from odoo import fields, models
 
 
-class company(models.Model):
-    _inherit = 'res.company'
+class ResCompany(models.Model):
+    _inherit = ['res.company']
 
     security_lead = fields.Float(
         'Sales Safety Days', default=0.0, required=True,

--- a/addons/sale_stock/models/res_config_settings.py
+++ b/addons/sale_stock/models/res_config_settings.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = 'res.config.settings'
+    _inherit = ['res.config.settings']
 
     security_lead = fields.Float(related='company_id.security_lead', string="Security Lead Time", readonly=False)
     use_security_lead = fields.Boolean(

--- a/addons/sale_stock/models/sale_order.py
+++ b/addons/sale_stock/models/sale_order.py
@@ -12,7 +12,7 @@ _logger = logging.getLogger(__name__)
 
 
 class SaleOrder(models.Model):
-    _inherit = "sale.order"
+    _inherit = ["sale.order"]
 
     incoterm = fields.Many2one(
         'account.incoterms', 'Incoterm',

--- a/addons/sale_stock/models/sale_order_line.py
+++ b/addons/sale_stock/models/sale_order_line.py
@@ -11,7 +11,7 @@ from odoo.exceptions import UserError
 
 
 class SaleOrderLine(models.Model):
-    _inherit = 'sale.order.line'
+    _inherit = ['sale.order.line']
 
     qty_delivered_method = fields.Selection(selection_add=[('stock_move', 'Stock Moves')])
     route_id = fields.Many2one('stock.route', string='Route', domain=[('sale_selectable', '=', True)], ondelete='restrict')

--- a/addons/sale_stock/models/stock.py
+++ b/addons/sale_stock/models/stock.py
@@ -8,12 +8,12 @@ from odoo.tools.sql import column_exists, create_column
 
 
 class StockRoute(models.Model):
-    _inherit = "stock.route"
+    _inherit = ["stock.route"]
     sale_selectable = fields.Boolean("Selectable on Sales Order Line")
 
 
 class StockMove(models.Model):
-    _inherit = "stock.move"
+    _inherit = ["stock.move"]
     sale_line_id = fields.Many2one('sale.order.line', 'Sale Line', index='btree_not_null')
 
     @api.model
@@ -58,20 +58,20 @@ class StockMove(models.Model):
 
 
 class StockMoveLine(models.Model):
-    _inherit = "stock.move.line"
+    _inherit = ["stock.move.line"]
 
     def _should_show_lot_in_invoice(self):
         return 'customer' in {self.location_id.usage, self.location_dest_id.usage}
 
 
 class ProcurementGroup(models.Model):
-    _inherit = 'procurement.group'
+    _inherit = ['procurement.group']
 
     sale_id = fields.Many2one('sale.order', 'Sale Order')
 
 
 class StockRule(models.Model):
-    _inherit = 'stock.rule'
+    _inherit = ['stock.rule']
 
     def _get_custom_move_fields(self):
         fields = super(StockRule, self)._get_custom_move_fields()
@@ -80,7 +80,7 @@ class StockRule(models.Model):
 
 
 class StockPicking(models.Model):
-    _inherit = 'stock.picking'
+    _inherit = ['stock.picking']
 
     sale_id = fields.Many2one('sale.order', compute="_compute_sale_id", inverse="_set_sale_id", string="Sales Order", store=True, index='btree_not_null')
 
@@ -201,7 +201,7 @@ class StockPicking(models.Model):
 
 
 class StockLot(models.Model):
-    _inherit = 'stock.lot'
+    _inherit = ['stock.lot']
 
     sale_order_ids = fields.Many2many('sale.order', string="Sales Orders", compute='_compute_sale_order_ids')
     sale_order_count = fields.Integer('Sale order count', compute='_compute_sale_order_ids')
