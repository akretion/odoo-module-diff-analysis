PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:6 + add:0, change matches:
-    _inherit = 'account.move.line'
-    _inherit = 'purchase.order'
-    _inherit = 'stock.move'
-    _inherit = 'stock.picking'
-    _inherit = 'stock.rule'
-    _inherit = 'stock.valuation.layer'

Total Changes: 12

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/mrp_subcontracting_purchase/models/account_move_line.py
+++ b/addons/mrp_subcontracting_purchase/models/account_move_line.py
@@ -5,7 +5,7 @@ from odoo.tools import float_is_zero
 
 
 class AccountMoveLine(models.Model):
-    _inherit = 'account.move.line'
+    _inherit = ['account.move.line']
 
     def _get_price_unit_val_dif_and_relevant_qty(self):
         price_unit_val_dif, relevant_qty = super()._get_price_unit_val_dif_and_relevant_qty()

--- a/addons/mrp_subcontracting_purchase/models/purchase_order.py
+++ b/addons/mrp_subcontracting_purchase/models/purchase_order.py
@@ -5,7 +5,7 @@ from odoo import models, fields, api
 
 
 class PurchaseOrder(models.Model):
-    _inherit = 'purchase.order'
+    _inherit = ['purchase.order']
 
     subcontracting_resupply_picking_count = fields.Integer(
         "Count of Subcontracting Resupply", compute='_compute_subcontracting_resupply_picking_count',

--- a/addons/mrp_subcontracting_purchase/models/stock_move.py
+++ b/addons/mrp_subcontracting_purchase/models/stock_move.py
@@ -5,7 +5,7 @@ from odoo import models
 
 
 class StockMove(models.Model):
-    _inherit = 'stock.move'
+    _inherit = ['stock.move']
 
     def _is_purchase_return(self):
         res = super()._is_purchase_return()

--- a/addons/mrp_subcontracting_purchase/models/stock_picking.py
+++ b/addons/mrp_subcontracting_purchase/models/stock_picking.py
@@ -5,7 +5,7 @@ from odoo import models, fields, api, _
 
 
 class StockPicking(models.Model):
-    _inherit = 'stock.picking'
+    _inherit = ['stock.picking']
 
     subcontracting_source_purchase_count = fields.Integer(
         "Number of subcontracting PO Source", compute='_compute_subcontracting_source_purchase_count',

--- a/addons/mrp_subcontracting_purchase/models/stock_rule.py
+++ b/addons/mrp_subcontracting_purchase/models/stock_rule.py
@@ -2,7 +2,7 @@ from odoo import models, _
 
 
 class StockRule(models.Model):
-    _inherit = 'stock.rule'
+    _inherit = ['stock.rule']
 
     def _get_lead_days(self, product, **values):
         """For subcontracting, we need to consider both vendor lead time and

--- a/addons/mrp_subcontracting_purchase/models/stock_valuation_layer.py
+++ b/addons/mrp_subcontracting_purchase/models/stock_valuation_layer.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class StockValuationLayer(models.Model):
-    _inherit = 'stock.valuation.layer'
+    _inherit = ['stock.valuation.layer']
 
     def _get_layer_price_unit(self):
         """ For a subcontracted product, we want a way to get the subcontracting cost (the price on the PO)
