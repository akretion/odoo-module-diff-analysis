PR: https://github.com/odoo/odoo/pull/152896

From: d69cb61b6c69a4110bc1af30323d5c8b8398129b
From: Flotchet
Date: 2024-02-28 07:09:48

Structural Changes: 19
Total Changes: 36

[IMP] fleet: add chatter to vehicle models

This commit adds chatter to vehicle models.
It allows to add comments and log notes on vehicle models.

task-3691294

closes odoo/odoo#152896

Signed-off-by: Yannick Tivisse (yti) <yti@odoo.com>

================================= pseudo patch: =================================

--- a/addons/fleet/models/fleet_vehicle_model.py
+++ b/addons/fleet/models/fleet_vehicle_model.py
@@ -19,31 +19,31 @@ FUEL_TYPES = [
 
 class FleetVehicleModel(models.Model):
     _name = 'fleet.vehicle.model'
-    _inherit = ['avatar.mixin']
+    _inherit = ['mail.thread', 'mail.activity.mixin', 'avatar.mixin']
     _description = 'Model of a vehicle'
     _order = 'name asc'
 
-    name = fields.Char('Model name', required=True)
-    brand_id = fields.Many2one('fleet.vehicle.model.brand', 'Manufacturer', required=True)
-    category_id = fields.Many2one('fleet.vehicle.model.category', 'Category')
+    name = fields.Char('Model name', required=True, tracking=True)
+    brand_id = fields.Many2one('fleet.vehicle.model.brand', 'Manufacturer', required=True, tracking=True)
+    category_id = fields.Many2one('fleet.vehicle.model.category', 'Category', tracking=True)
     vendors = fields.Many2many('res.partner', 'fleet_vehicle_model_vendors', 'model_id', 'partner_id', string='Vendors')
     image_128 = fields.Image(related='brand_id.image_128', readonly=True)
     active = fields.Boolean(default=True)
-    vehicle_type = fields.Selection([('car', 'Car'), ('bike', 'Bike')], default='car', required=True)
-    transmission = fields.Selection([('manual', 'Manual'), ('automatic', 'Automatic')], 'Transmission')
+    vehicle_type = fields.Selection([('car', 'Car'), ('bike', 'Bike')], default='car', required=True, tracking=True)
+    transmission = fields.Selection([('manual', 'Manual'), ('automatic', 'Automatic')], 'Transmission', tracking=True)
     vehicle_count = fields.Integer(compute='_compute_vehicle_count', search='_search_vehicle_count')
-    model_year = fields.Integer()
-    color = fields.Char()
-    seats = fields.Integer(string='Seats Number')
-    doors = fields.Integer(string='Doors Number')
-    trailer_hook = fields.Boolean(default=False, string='Trailer Hitch')
-    default_co2 = fields.Float('CO2 Emissions')
-    co2_standard = fields.Char()
-    default_fuel_type = fields.Selection(FUEL_TYPES, 'Fuel Type', default='electric')
-    power = fields.Integer('Power')
-    horsepower = fields.Integer()
-    horsepower_tax = fields.Float('Horsepower Taxation')
-    electric_assistance = fields.Boolean(default=False)
+    model_year = fields.Integer(tracking=True)
+    color = fields.Char(tracking=True)
+    seats = fields.Integer(string='Seats Number', tracking=True)
+    doors = fields.Integer(string='Doors Number', tracking=True)
+    trailer_hook = fields.Boolean(default=False, string='Trailer Hitch', tracking=True)
+    default_co2 = fields.Float('CO2 Emissions', tracking=True)
+    co2_standard = fields.Char(tracking=True)
+    default_fuel_type = fields.Selection(FUEL_TYPES, 'Fuel Type', default='electric', tracking=True)
+    power = fields.Integer('Power', tracking=True)
+    horsepower = fields.Integer(tracking=True)
+    horsepower_tax = fields.Float('Horsepower Taxation', tracking=True)
+    electric_assistance = fields.Boolean(default=False, tracking=True)
     vehicle_properties_definition = fields.PropertiesDefinition('Vehicle Properties')
 
     @api.model
