PR: https://github.com/odoo/odoo/pull/

From: 3ec6294739d19e2c263c270b49483199121a02c0
From: SÃ©bastien Theys
Date: 2018-07-17 09:50:35

Breaking data model changes score: 5, change matches:
-    group_show_price_subtotal = fields.Boolean(
-    group_show_price_total = fields.Boolean(
-    sale_show_tax = fields.Selection([
-    has_group_show_price_subtotal = fields.Boolean(
-    has_group_show_price_total = fields.Boolean(

Total Changes: 36

[IMP] account,sale: move B2B/B2C setting into account

Since sale depends on account and not the other way around, it's better to have this setting inside account.

Functionally it will allow the user to benefit from this setting also if he uses only invoice without sale.

Technically it will allow us to remove all of the overrides that were previously necessary for this setting.

While we moved the setting, we also renamed the different variables so their name better convey their meaning.

PR #25209

================================= pseudo patch: =================================

--- a/addons/sale/models/res_config_settings.py
+++ b/addons/sale/models/res_config_settings.py
@@ -33,21 +33,8 @@ class ResConfigSettings(models.TransientModel):
         ('percentage', 'Multiple prices per product (e.g. customer segments, currencies)'),
         ('formula', 'Price computed from formulas (discounts, margins, roundings)')
         ], string="Pricelists", config_parameter='sale.sale_pricelist_setting')
-    group_show_price_subtotal = fields.Boolean(
-        "Show subtotal",
-        implied_group='sale.group_show_price_subtotal',
-        group='base.group_portal,base.group_user,base.group_public')
-    group_show_price_total = fields.Boolean(
-        "Show total",
-        implied_group='sale.group_show_price_total',
-        group='base.group_portal,base.group_user,base.group_public')
     group_proforma_sales = fields.Boolean(string="Pro-Forma Invoice", implied_group='sale.group_proforma_sales',
         help="Allows you to send pro-forma invoice.")
-    sale_show_tax = fields.Selection([
-        ('subtotal', 'Tax-Excluded Prices'),
-        ('total', 'Tax-Included Prices')], string="Tax Display",
-        required=True, default='subtotal',
-        config_parameter='sale.sale_show_tax')
     default_invoice_policy = fields.Selection([
         ('order', 'Invoice what is ordered'),
         ('delivery', 'Invoice what is delivered')
@@ -94,19 +81,6 @@ class ResConfigSettings(models.TransientModel):
             })
         self.sale_pricelist_setting = self.multi_sales_price and self.multi_sales_price_method or 'fixed'
 
-    @api.onchange('sale_show_tax')
-    def _onchange_sale_tax(self):
-        if self.sale_show_tax == "subtotal":
-            self.update({
-                'group_show_price_total': False,
-                'group_show_price_subtotal': True,
-            })
-        else:
-            self.update({
-                'group_show_price_total': True,
-                'group_show_price_subtotal': False,
-            })
-
     @api.onchange('sale_pricelist_setting')
     def _onchange_sale_pricelist_setting(self):
         if self.sale_pricelist_setting == 'percentage':

--- a/addons/sale/models/res_users.py
+++ b/addons/sale/models/res_users.py
@@ -22,16 +22,6 @@ class ResUsers(models.Model):
         compute='_compute_groups_id', inverse='_inverse_groups_id',
         group_xml_id='sale.group_delivery_invoice_address')
 
-    has_group_show_price_subtotal = fields.Boolean(
-        "Show line subtotals without taxes (B2B)",
-        compute='_compute_groups_id', inverse='_inverse_groups_id',
-        group_xml_id='sale.group_show_price_subtotal')
-
-    has_group_show_price_total = fields.Boolean(
-        "Show line subtotals with taxes included (B2C)",
-        compute='_compute_groups_id', inverse='_inverse_groups_id',
-        group_xml_id='sale.group_show_price_total')
-
     has_group_discount_per_so_line = fields.Boolean(
         "Discount on lines",
         compute='_compute_groups_id', inverse='_inverse_groups_id',
