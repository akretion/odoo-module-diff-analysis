PR: https://github.com/odoo/odoo/pull/

From: 2fa469c5e5ec66da262702d8c9e2415c72f7f6b9
From: Joren Van Onder
Date: 2018-06-28 16:47:51

Breaking data model changes scores: del:2 + add:0, change matches:
-    portal_confirmation = fields.Boolean('Online Signature & Payment')
-    portal_confirmation_options = fields.Selection([

Total Changes: 43

[IMP] sale, website_quote: allow portal payment after signature

Both features already existed but it was not possible to enable both.
This makes that possible. When both are enabled the quotation first has to be
signed, then it can be paid.

Purpose
=======
No way to combine digital signature and online payments to confirm orders.
A customer signature matters for big deals, in order to keep an official print
of customer agreement.

Specs
=====
* when the customer signs online, a new pdf is generated with the customer
  signature on it and posted as a note in the chatter, replacing the current
  signature jpg.

* show the signature in the portal view, with both sale_management and
  website_quote module

* change in settings: Digital Signature and Electronic Payment are now 2
  checkboxes instead of a radio button

* these settings must be company-specific (add company icon if multi-companies,
  like other company-specific settings)

* when both modes are activated, it first request the signature, then the
  payment

* the order is confirmed after payment

opw-1818837
Closes #24174

================================= pseudo patch: =================================

--- a/addons/sale/models/res_company.py
+++ b/addons/sale/models/res_company.py
@@ -8,3 +8,5 @@ class ResCompany(models.Model):
     _inherit = "res.company"
 
     sale_note = fields.Text(string='Default Terms and Conditions', translate=True)
+    portal_confirmation_sign = fields.Boolean(string='Digital Signature', default=True)
+    portal_confirmation_pay = fields.Boolean(string='Electronic Payment')

--- a/addons/sale/models/res_config_settings.py
+++ b/addons/sale/models/res_config_settings.py
@@ -18,12 +18,9 @@ class ResConfigSettings(models.TransientModel):
     module_sale_margin = fields.Boolean("Margins")
     group_sale_layout = fields.Boolean("Sections on Sales Orders", implied_group='sale.group_sale_layout')
     group_warning_sale = fields.Boolean("Sale Order Warnings", implied_group='sale.group_warning_sale')
-    portal_confirmation = fields.Boolean('Online Signature & Payment')
-    portal_confirmation_options = fields.Selection([
-        ('sign', 'Signature'),
-        ('pay', 'Payment')], string="Online Signature & Payment options",
-        config_parameter='sale.sale_portal_confirmation_options')
-    module_sale_payment = fields.Boolean("Sale Payment", help='Technical field implied by user choice of online_confirmation')
+    portal_confirmation_sign = fields.Boolean(related='company_id.portal_confirmation_sign', string='Digital Signature')
+    portal_confirmation_pay = fields.Boolean(related='company_id.portal_confirmation_pay', string='Electronic Payment')
+    module_sale_payment = fields.Boolean("Sale Payment", help='Technical field implied by user choice of portal_confirmation_pay.')
     module_website_quote = fields.Boolean("Quotations Templates")
     group_sale_delivery_address = fields.Boolean("Customer Addresses", implied_group='sale.group_delivery_invoice_address')
     multi_sales_price = fields.Boolean("Multiple Sales Prices per Product")
@@ -131,16 +128,9 @@ class ResConfigSettings(models.TransientModel):
                 'group_pricelist_item': False,
             })
 
-    @api.onchange('portal_confirmation')
-    def _onchange_portal_confirmation(self):
-        if not self.portal_confirmation:
-            self.portal_confirmation_options = False
-        elif not self.portal_confirmation_options:
-            self.portal_confirmation_options = 'sign'
-
-    @api.onchange('portal_confirmation_options')
-    def _onchange_portal_confirmation_options(self):
-        if self.portal_confirmation_options == 'pay':
+    @api.onchange('portal_confirmation_pay')
+    def _onchange_portal_confirmation_pay(self):
+        if self.portal_confirmation_pay:
             self.module_sale_payment = True
 
     @api.model
@@ -152,6 +142,5 @@ class ResConfigSettings(models.TransientModel):
             multi_sales_price=sale_pricelist_setting in ['percentage', 'formula'],
             multi_sales_price_method=sale_pricelist_setting in ['percentage', 'formula'] and sale_pricelist_setting or False,
             sale_pricelist_setting=sale_pricelist_setting,
-            portal_confirmation=ICPSudo.get_param('sale.sale_portal_confirmation_options', default=False) in ('pay', 'sign'),
         )
         return res

--- a/addons/sale/models/sale.py
+++ b/addons/sale/models/sale.py
@@ -163,6 +163,9 @@ class SaleOrder(models.Model):
     company_id = fields.Many2one('res.company', 'Company', default=lambda self: self.env['res.company']._company_default_get('sale.order'))
     team_id = fields.Many2one('crm.team', 'Sales Channel', change_default=True, default=_get_default_team, oldname='section_id')
 
+    signature = fields.Binary('Signature', help='Signature received through the portal.', copy=False, attachment=True)
+    signed_by = fields.Char('Signed by', help='Name of the person that signed the SO.', copy=False)
+
     product_id = fields.Many2one('product.product', related='order_line.product_id', string='Product')
 
     def _compute_portal_url(self):
@@ -488,6 +491,8 @@ class SaleOrder(models.Model):
         orders = self.filtered(lambda s: s.state in ['cancel', 'sent'])
         return orders.write({
             'state': 'draft',
+            'signature': False,
+            'signed_by': False,
         })
 
     @api.multi
@@ -673,7 +678,18 @@ class SaleOrder(models.Model):
         return self.get_share_url()
 
     def get_portal_confirmation_action(self):
-        return self.env['ir.config_parameter'].sudo().get_param('sale.sale_portal_confirmation_options', default='none')
+        if self.company_id.portal_confirmation_sign and not self.signature:
+            return 'sign'
+        if self.company_id.portal_confirmation_pay:
+            return 'pay'
+
+        return 'none'
+
+    def has_to_be_signed(self):
+        return self.company_id.portal_confirmation_sign
+
+    def has_to_be_paid(self):
+        return self.company_id.portal_confirmation_pay
 
     @api.multi
     def _notify_get_groups(self, message, groups):
