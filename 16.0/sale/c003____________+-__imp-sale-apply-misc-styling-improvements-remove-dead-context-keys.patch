PR: https://github.com/odoo/odoo/pull/

From: 3c07a3fecdee25c0d9db53c5293334f6ce5e1c67
From: Yannick Tivisse
Date: 2021-12-02 11:12:03

Structural Changes: 5
Total Changes: 37

[IMP] sale: Apply misc styling improvements + remove dead context keys

================================= pseudo patch: =================================

--- a/addons/sale/models/account_move.py
+++ b/addons/sale/models/account_move.py
@@ -34,9 +34,9 @@ class AccountMove(models.Model):
         """
         Trigger the change of fiscal position when the shipping address is modified.
         """
-        delivery_partner_id = self.env['res.partner'].browse(self._get_invoice_delivery_partner_id())
+        delivery_partner = self.env['res.partner'].browse(self._get_invoice_delivery_partner_id())
         fiscal_position = self.env['account.fiscal.position'].with_company(self.company_id)._get_fiscal_position(
-            self.partner_id, delivery=delivery_partner_id)
+            self.partner_id, delivery=delivery_partner)
 
         if fiscal_position:
             self.fiscal_position_id = fiscal_position

--- a/addons/sale/models/product_template.py
+++ b/addons/sale/models/product_template.py
@@ -53,7 +53,7 @@ class ProductTemplate(models.Model):
 
     @api.depends('sale_ok')
     def _compute_expense_policy(self):
-        self.filtered(lambda t: not t.sale_ok).update({'expense_policy': 'no'})
+        self.filtered(lambda t: not t.sale_ok).expense_policy = 'no'
 
     @api.depends('product_variant_ids.sales_count')
     def _compute_sales_count(self):

--- a/addons/sale/models/sale_order.py
+++ b/addons/sale/models/sale_order.py
@@ -175,25 +175,24 @@ class SaleOrder(models.Model):
         required=True, change_default=True, index=True, tracking=1,
         domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]",)
     partner_invoice_id = fields.Many2one(
-        'res.partner', string='Invoice Address',
-        readonly=False, required=True, pre_compute=True,
+        'res.partner', string='Invoice Address', required=True,
+        compute='_compute_partner_invoice_id', store=True, readonly=False, pre_compute=True,
         states={'done': [('readonly', True)], 'cancel': [('readonly', True)]},
-        compute='_compute_partner_invoice_id', store=True,
         domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]",)
     partner_shipping_id = fields.Many2one(
-        'res.partner', string='Delivery Address', readonly=False, required=True,
+        'res.partner', string='Delivery Address', required=True,
+        compute='_compute_partner_shipping_id', store=True, readonly=False, pre_compute=True,
         states={'done': [('readonly', True)], 'cancel': [('readonly', True)]},
-        compute='_compute_partner_shipping_id', store=True, pre_compute=True,
         domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]",)
 
     pricelist_id = fields.Many2one(
-        'product.pricelist', string='Pricelist', check_company=True,  # Unrequired company
-        required=False, readonly=False, store=True,
-        compute='_compute_pricelist_id', pre_compute=True,
+        'product.pricelist', string='Pricelist', required=False, check_company=True,  # Unrequired company
+        compute='_compute_pricelist_id', store=True, pre_compute=True, readonly=False,
         states={'sale': [('readonly', True)], 'done': [('readonly', True)], 'cancel': [('readonly', True)]},
         domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]", tracking=1,
         help="If you change the pricelist, only newly added lines will be affected.")
-    currency_id = fields.Many2one(related='pricelist_id.currency_id', depends=["pricelist_id"], store=True, ondelete="restrict")
+    currency_id = fields.Many2one(
+        related='pricelist_id.currency_id', depends=["pricelist_id"], store=True, pre_compute=True, ondelete="restrict")
     analytic_account_id = fields.Many2one(
         'account.analytic.account', 'Analytic Account',
         readonly=True, copy=False, check_company=True,  # Unrequired company
@@ -536,7 +535,7 @@ class SaleOrder(models.Model):
                 vals['name'] = self.env['ir.sequence'].next_by_code(
                     'sale.order', sequence_date=seq_date) or _('New')
 
-        return super(SaleOrder, self).create(vals_list)
+        return super().create(vals_list)
 
     def _compute_field_value(self, field):
         if field.name == 'invoice_status' and not self.env.context.get('mail_activity_automation_skip'):

--- a/addons/sale/models/sale_order_line.py
+++ b/addons/sale/models/sale_order_line.py
@@ -418,7 +418,7 @@ class SaleOrderLine(models.Model):
             # remove packaging if not match the product
             if line.product_packaging_id.product_id != line.product_id:
                 line.product_packaging_id = False
-            # suggest biggest suitable packaging
+            # Find biggest suitable packaging
             if line.product_id and line.product_uom_qty and line.product_uom:
                 line.product_packaging_id = line.product_id.packaging_ids.filtered(
                     'sales')._find_suitable_product_packaging(line.product_uom_qty, line.product_uom)
@@ -629,13 +629,7 @@ class SaleOrderLine(models.Model):
         for line in self:
             if not line.product_id:
                 continue
-            product = line.product_id.with_context(
-                lang=get_lang(line.env, line.order_id.partner_id.lang).code,
-                partner=line.order_id.partner_id,
-                quantity=line.product_uom_qty,
-                date=line.order_id.date_order,
-                pricelist=line.order_id.pricelist_id.id,
-                uom=line.product_uom.id)
+            product = line.product_id.with_context(lang=line.order_partner_id.lang)
             line.name = line.get_sale_order_line_multiline_description_sale(product)
 
     @api.depends('product_id')
@@ -684,7 +678,6 @@ class SaleOrderLine(models.Model):
                 continue
             if line.order_id.pricelist_id and line.order_partner_id:
                 product = line.product_id.with_context(
-                    lang=line.order_id.partner_id.lang,
                     partner=line.order_partner_id,
                     quantity=line.product_uom_qty,
                     date=line.order_id.date_order,
@@ -796,7 +789,6 @@ class SaleOrderLine(models.Model):
 
             line.discount = 0.0
             product = line.product_id.with_context(
-                lang=line.order_id.partner_id.lang,
                 partner=line.order_partner_id,
                 quantity=line.product_uom_qty,
                 date=line.order_id.date_order,
