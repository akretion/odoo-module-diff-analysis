PR: https://github.com/odoo/odoo/pull/87650

From: c5dff046650a15c995297af37006584e4b7496f5
From: Dossogne Bertrand
Date: 2022-05-20 13:25:13

Structural Changes: 5
Total Changes: 16

[IMP] hr_holidays: improve cancel interface

This commit aims to improve the time off experience by:
- fixing the "cancelled" ribbon on time offs
- removing the archive dropdown action
- removing the "off until" banner in discuss if the user's leave is not validated

TaskID 2800647

closes odoo/odoo#87650

Signed-off-by: Kevin Baptiste <kba@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr_holidays/models/hr_employee.py
+++ b/addons/hr_holidays/models/hr_employee.py
@@ -148,7 +148,7 @@ class HrEmployeeBase(models.AbstractModel):
             employee.leave_date_from = leave_data.get(employee.id, {}).get('leave_date_from')
             employee.leave_date_to = leave_data.get(employee.id, {}).get('leave_date_to')
             employee.current_leave_state = leave_data.get(employee.id, {}).get('current_leave_state')
-            employee.is_absent = leave_data.get(employee.id) and leave_data.get(employee.id, {}).get('current_leave_state') not in ['cancel', 'refuse', 'draft']
+            employee.is_absent = leave_data.get(employee.id) and leave_data.get(employee.id, {}).get('current_leave_state') in ['validate']
 
     @api.depends('parent_id')
     def _compute_leave_manager(self):

--- a/addons/hr_holidays/models/hr_leave.py
+++ b/addons/hr_holidays/models/hr_leave.py
@@ -119,7 +119,7 @@ class HolidaysRequest(models.Model):
             new_values['request_date_to'] = values['date_to'].date()
         return new_values
 
-    active = fields.Boolean(default=True)
+    active = fields.Boolean(default=True, readonly=True)
     # description
     name = fields.Char('Description', compute='_compute_description', inverse='_inverse_description', search='_search_description', compute_sudo=False)
     private_name = fields.Char('Time Off Description', groups='hr_holidays.group_hr_holidays_user')
@@ -633,9 +633,9 @@ class HolidaysRequest(models.Model):
     @api.depends_context('uid')
     @api.depends('state', 'employee_id')
     def _compute_can_cancel(self):
-        today = fields.Datetime.today()
+        now = fields.Datetime.now()
         for leave in self:
-            leave.can_cancel = leave.id and leave.employee_id.user_id == self.env.user and leave.state == 'validate' and leave.date_from and leave.date_from > today
+            leave.can_cancel = leave.id and leave.employee_id.user_id == self.env.user and leave.state == 'validate' and leave.date_from and leave.date_from > now
 
     @api.depends('state')
     def _compute_is_hatched(self):

--- a/addons/hr_holidays/models/res_partner.py
+++ b/addons/hr_holidays/models/res_partner.py
@@ -30,8 +30,10 @@ class ResPartner(models.Model):
         for partner in self:
             # in the rare case of multi-user partner, return the earliest possible return date
             dates = partner.mapped('user_ids.leave_date_to')
+            states = partner.mapped('user_ids.current_leave_state')
             date = sorted(dates)[0] if dates and all(dates) else False
+            state = sorted(states)[0] if states and all(states) else False
             partners_format.get(partner).update({
-                'out_of_office_date_end': date.strftime(DEFAULT_SERVER_DATE_FORMAT) if date else False,
+                'out_of_office_date_end': date.strftime(DEFAULT_SERVER_DATE_FORMAT) if state == 'validate' and date else False,
             })
         return partners_format

--- a/addons/hr_holidays/models/res_users.py
+++ b/addons/hr_holidays/models/res_users.py
@@ -11,6 +11,7 @@ class User(models.Model):
     show_leaves = fields.Boolean(related='employee_id.show_leaves')
     allocation_count = fields.Float(related='employee_id.allocation_count')
     leave_date_to = fields.Date(related='employee_id.leave_date_to')
+    current_leave_state = fields.Selection(related='employee_id.current_leave_state')
     is_absent = fields.Boolean(related='employee_id.is_absent')
     allocation_remaining_display = fields.Char(related='employee_id.allocation_remaining_display')
     allocation_display = fields.Char(related='employee_id.allocation_display')
@@ -23,6 +24,7 @@ class User(models.Model):
             'show_leaves',
             'allocation_count',
             'leave_date_to',
+            'current_leave_state',
             'is_absent',
             'allocation_remaining_display',
             'allocation_display',
@@ -49,7 +51,7 @@ class User(models.Model):
         self.env['hr.leave'].flush(fnames=['user_id', 'state', 'date_from', 'date_to'])
         self.env.cr.execute('''SELECT res_users.%s FROM res_users
                             JOIN hr_leave ON hr_leave.user_id = res_users.id
-                            AND state not in ('cancel', 'refuse')
+                            AND state in ('validate')
                             AND hr_leave.active = 't'
                             AND res_users.active = 't'
                             AND date_from <= %%s AND date_to >= %%s''' % field, (now, now))
