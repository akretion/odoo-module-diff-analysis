PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:8 + add:0, change matches:
-    _inherit = 'decimal.precision'
-    _inherit = 'ir.attachment'
-    _inherit = "res.company"
-    _inherit = 'res.config.settings'
-    _inherit = 'res.country.group'
-    _inherit = 'res.currency'
-    _inherit = 'res.partner'
-    _inherit = 'uom.uom'

Total Changes: 55

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/product/models/decimal_precision.py
+++ b/addons/product/models/decimal_precision.py
@@ -4,7 +4,7 @@ from odoo import api, models, _
 
 
 class DecimalPrecision(models.Model):
-    _inherit = 'decimal.precision'
+    _inherit = ['decimal.precision']
 
     @api.onchange('digits')
     def _onchange_digits(self):

--- a/addons/product/models/ir_attachment.py
+++ b/addons/product/models/ir_attachment.py
@@ -4,7 +4,7 @@ from odoo import api, models
 
 
 class IrAttachment(models.Model):
-    _inherit = 'ir.attachment'
+    _inherit = ['ir.attachment']
 
     @api.model_create_multi
     def create(self, vals_list):

--- a/addons/product/models/product_attribute.py
+++ b/addons/product/models/product_attribute.py
@@ -5,7 +5,6 @@ from odoo.exceptions import UserError
 
 
 class ProductAttribute(models.Model):
-    _name = "product.attribute"
     _description = "Product Attribute"
     # if you change this _order, keep it in sync with the method
     # `_sort_key_attribute_value` in `product.template`

--- a/addons/product/models/product_attribute_custom_value.py
+++ b/addons/product/models/product_attribute_custom_value.py
@@ -4,7 +4,6 @@ from odoo import api, fields, models
 
 
 class ProductAttributeCustomValue(models.Model):
-    _name = 'product.attribute.custom.value'
     _description = "Product Attribute Custom Value"
     _order = 'custom_product_template_attribute_value_id, id'
 

--- a/addons/product/models/product_attribute_value.py
+++ b/addons/product/models/product_attribute_value.py
@@ -7,7 +7,6 @@ from odoo.exceptions import UserError
 
 
 class ProductAttributeValue(models.Model):
-    _name = 'product.attribute.value'
     # if you change this _order, keep it in sync with the method
     # `_sort_key_variant` in `product.template'
     _order = 'attribute_id, sequence, id'

--- a/addons/product/models/product_catalog_mixin.py
+++ b/addons/product/models/product_catalog_mixin.py
@@ -9,7 +9,6 @@ class ProductCatalogMixin(models.AbstractModel):
     It assumes the model using this mixin has a O2M field where the products are added/removed and
     this field's co-related model should has a method named `_get_product_catalog_lines_data`.
     """
-    _name = 'product.catalog.mixin'
     _description = 'Product Catalog Mixin'
 
     def action_add_from_catalog(self):

--- a/addons/product/models/product_category.py
+++ b/addons/product/models/product_category.py
@@ -6,7 +6,6 @@ from odoo.exceptions import UserError, ValidationError
 
 
 class ProductCategory(models.Model):
-    _name = "product.category"
     _inherit = ['mail.thread']
     _description = "Product Category"
     _parent_name = "parent_id"

--- a/addons/product/models/product_combo.py
+++ b/addons/product/models/product_combo.py
@@ -5,7 +5,6 @@ from odoo.exceptions import ValidationError
 
 
 class ProductCombo(models.Model):
-    _name = 'product.combo'
     _description = "Product Combo"
     _order = 'sequence, id'
 

--- a/addons/product/models/product_combo_item.py
+++ b/addons/product/models/product_combo_item.py
@@ -5,7 +5,6 @@ from odoo.exceptions import ValidationError
 
 
 class ProductComboItem(models.Model):
-    _name = 'product.combo.item'
     _description = "Product Combo Item"
     _check_company_auto = True
 

--- a/addons/product/models/product_document.py
+++ b/addons/product/models/product_document.py
@@ -6,7 +6,6 @@ from odoo.exceptions import ValidationError
 
 
 class ProductDocument(models.Model):
-    _name = 'product.document'
     _description = "Product Document"
     _inherits = {
         'ir.attachment': 'ir_attachment_id',

--- a/addons/product/models/product_packaging.py
+++ b/addons/product/models/product_packaging.py
@@ -10,7 +10,6 @@ from odoo.tools import float_compare, float_round
 
 
 class ProductPackaging(models.Model):
-    _name = "product.packaging"
     _description = "Product Packaging"
     _order = 'product_id, sequence, id'
     _check_company_auto = True

--- a/addons/product/models/product_pricelist.py
+++ b/addons/product/models/product_pricelist.py
@@ -4,8 +4,7 @@ from odoo import _, api, fields, models
 from odoo.exceptions import UserError
 
 
-class Pricelist(models.Model):
-    _name = "product.pricelist"
+class ProductPricelist(models.Model):
     _inherit = ['mail.thread', 'mail.activity.mixin']
     _description = "Pricelist"
     _rec_names_search = ['name', 'currency_id']  # TODO check if should be removed
@@ -301,7 +300,7 @@ class Pricelist(models.Model):
         company_id = self.env.company.id
 
         IrConfigParameter = self.env['ir.config_parameter'].sudo()
-        Pricelist = self.env['product.pricelist']
+        ProductPricelist = self.env['product.pricelist']
         pl_domain = self._get_partner_pricelist_multi_search_domain_hook(company_id)
 
         # if no specific property, try to find a fitting pricelist
@@ -321,7 +320,7 @@ class Pricelist(models.Model):
                     return None
             # get fallback pricelist when no pricelist for a given country
             pl_fallback = (
-                Pricelist.search(pl_domain + [('country_group_ids', '=', False)], limit=1) or
+                ProductPricelist.search(pl_domain + [('country_group_ids', '=', False)], limit=1) or
                 # save data in ir.config_parameter instead of ir.default for
                 # res.partner.property_product_pricelist
                 # otherwise the data will become the default value while
@@ -329,15 +328,15 @@ class Pricelist(models.Model):
                 # however if the property_product_pricelist is not specified
                 # the result of the previous line should have high priority
                 # when computing
-                Pricelist.browse(convert_to_int(IrConfigParameter.get_param(f'res.partner.property_product_pricelist_{company_id}'))) or
-                Pricelist.browse(convert_to_int(IrConfigParameter.get_param('res.partner.property_product_pricelist'))) or
-                Pricelist.search(pl_domain, limit=1)
+                ProductPricelist.browse(convert_to_int(IrConfigParameter.get_param(f'res.partner.property_product_pricelist_{company_id}'))) or
+                ProductPricelist.browse(convert_to_int(IrConfigParameter.get_param('res.partner.property_product_pricelist'))) or
+                ProductPricelist.search(pl_domain, limit=1)
             )
             # group partners by country, and find a pricelist for each country
             remaining_partners = self.env['res.partner'].browse(remaining_partner_ids)
             partners_by_country = remaining_partners.grouped('country_id')
             for country, partners in partners_by_country.items():
-                pl = Pricelist.search(pl_domain + [('country_group_ids.country_ids', '=', country.id if country else False)], limit=1)
+                pl = ProductPricelist.search(pl_domain + [('country_group_ids.country_ids', '=', country.id if country else False)], limit=1)
                 pl = pl or pl_fallback
                 result.update(dict.fromkeys(partners._ids, pl))
 

--- a/addons/product/models/product_pricelist_item.py
+++ b/addons/product/models/product_pricelist_item.py
@@ -5,8 +5,7 @@ from odoo.exceptions import ValidationError
 from odoo.tools import format_amount, format_datetime, formatLang
 
 
-class PricelistItem(models.Model):
-    _name = "product.pricelist.item"
+class ProductPricelistItem(models.Model):
     _description = "Pricelist Rule"
     _order = "applied_on, min_quantity desc, categ_id desc, id desc"
     _check_company_auto = True

--- a/addons/product/models/product_product.py
+++ b/addons/product/models/product_product.py
@@ -13,7 +13,6 @@ from odoo.tools.misc import unique
 
 
 class ProductProduct(models.Model):
-    _name = "product.product"
     _description = "Product Variant"
     _inherits = {'product.template': 'product_tmpl_id'}
     _inherit = ['mail.thread', 'mail.activity.mixin']

--- a/addons/product/models/product_supplierinfo.py
+++ b/addons/product/models/product_supplierinfo.py
@@ -4,8 +4,7 @@
 from odoo import api, fields, models, _
 
 
-class SupplierInfo(models.Model):
-    _name = "product.supplierinfo"
+class ProductSupplierinfo(models.Model):
     _description = "Supplier Pricelist"
     _order = 'sequence, min_qty DESC, price, id'
     _rec_name = 'partner_id'

--- a/addons/product/models/product_tag.py
+++ b/addons/product/models/product_tag.py
@@ -4,8 +4,8 @@
 from odoo import api, fields, models
 from odoo.osv import expression
 
+
 class ProductTag(models.Model):
-    _name = 'product.tag'
     _description = 'Product Tag'
     _order = 'sequence, id'
 

--- a/addons/product/models/product_template.py
+++ b/addons/product/models/product_template.py
@@ -15,7 +15,6 @@ PRICE_CONTEXT_KEYS = ['pricelist', 'quantity', 'uom', 'date']
 
 
 class ProductTemplate(models.Model):
-    _name = "product.template"
     _inherit = ['mail.thread', 'mail.activity.mixin', 'image.mixin']
     _description = "Product"
     _order = "is_favorite desc, name"

--- a/addons/product/models/product_template_attribute_exclusion.py
+++ b/addons/product/models/product_template_attribute_exclusion.py
@@ -4,7 +4,6 @@ from odoo import api, fields, models
 
 
 class ProductTemplateAttributeExclusion(models.Model):
-    _name = 'product.template.attribute.exclusion'
     _description = "Product Template Attribute Exclusion"
     _order = 'product_tmpl_id, id'
 

--- a/addons/product/models/product_template_attribute_line.py
+++ b/addons/product/models/product_template_attribute_line.py
@@ -9,7 +9,6 @@ class ProductTemplateAttributeLine(models.Model):
     """Attributes available on product.template with their selected values in a m2m.
     Used as a configuration model to generate the appropriate product.template.attribute.value"""
 
-    _name = 'product.template.attribute.line'
     _rec_name = 'attribute_id'
     _rec_names_search = ['attribute_id', 'value_ids']
     _description = "Product Template Attribute Line"

--- a/addons/product/models/product_template_attribute_value.py
+++ b/addons/product/models/product_template_attribute_value.py
@@ -11,7 +11,6 @@ class ProductTemplateAttributeValue(models.Model):
     """Materialized relationship between attribute values
     and product template generated by the product.template.attribute.line"""
 
-    _name = 'product.template.attribute.value'
     _description = "Product Template Attribute Value"
     _order = 'attribute_line_id, product_attribute_value_id, id'
 

--- a/addons/product/models/res_company.py
+++ b/addons/product/models/res_company.py
@@ -4,7 +4,7 @@ from odoo import _, api, models
 
 
 class ResCompany(models.Model):
-    _inherit = "res.company"
+    _inherit = ["res.company"]
 
     @api.model_create_multi
     def create(self, vals_list):

--- a/addons/product/models/res_config_settings.py
+++ b/addons/product/models/res_config_settings.py
@@ -4,7 +4,7 @@ from odoo import _, api, fields, models
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = 'res.config.settings'
+    _inherit = ['res.config.settings']
 
     group_uom = fields.Boolean("Units of Measure", implied_group='uom.group_uom')
     group_product_variant = fields.Boolean("Variants", implied_group='product.group_product_variant')

--- a/addons/product/models/res_country_group.py
+++ b/addons/product/models/res_country_group.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class ResCountryGroup(models.Model):
-    _inherit = 'res.country.group'
+    _inherit = ['res.country.group']
 
     pricelist_ids = fields.Many2many(
         comodel_name='product.pricelist',

--- a/addons/product/models/res_currency.py
+++ b/addons/product/models/res_currency.py
@@ -5,7 +5,7 @@ from odoo import models
 
 
 class ResCurrency(models.Model):
-    _inherit = 'res.currency'
+    _inherit = ['res.currency']
 
     def _activate_group_multi_currency(self):
         # for Sale/ POS - Multi currency flows require pricelists

--- a/addons/product/models/res_partner.py
+++ b/addons/product/models/res_partner.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class ResPartner(models.Model):
-    _inherit = 'res.partner'
+    _inherit = ['res.partner']
 
     # when the specific_property_product_pricelist is not defined
     # the fallback value may be computed with 2 ir.config_parameter

--- a/addons/product/models/uom_uom.py
+++ b/addons/product/models/uom_uom.py
@@ -4,8 +4,8 @@
 from odoo import api, models, _
 
 
-class UoM(models.Model):
-    _inherit = 'uom.uom'
+class UomUom(models.Model):
+    _inherit = ['uom.uom']
 
     @api.onchange('rounding')
     def _onchange_rounding(self):
