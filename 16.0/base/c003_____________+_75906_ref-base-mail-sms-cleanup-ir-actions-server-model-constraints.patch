PR: https://github.com/odoo/odoo/pull/75906

From: 138ab8ef14cb9c1e64b18f98faf1d15c15e37310
From: Thibault Delavall√©e
Date: 2022-08-12 21:37:03

Structural Changes: 4
Total Changes: 34

[REF] base, mail, sms: cleanup ir.actions.server model constraints

In this commit we cleanup server actions model in order to make it a bit
more inlined with current code state of the art.

  * add no_create / no_open on technical fields (m2o towards fields notably)
    as creating or updating fields on the fly is not the purpose of base
    automation module;
  * rewrite onchange into compute or constraint methods;
  * add compute methods to cleanup data when changing configuration (model or
    trigger). Some fields have no usage except in some configuration better
    reset their value. Notably fields linked to the chosen model should be
    reset;
  * add constraints for invalid configuration, notably for models coherency
    with mail features;

Task-2613245 (Server actions mail update / cleaning)

Part-of: odoo/odoo#75906

================================= pseudo patch: =================================

--- a/odoo/addons/base/models/ir_actions.py
+++ b/odoo/addons/base/models/ir_actions.py
@@ -2,9 +2,8 @@
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
 import odoo
-from odoo import api, fields, models, tools, SUPERUSER_ID, _, Command
-from odoo.exceptions import MissingError, UserError, ValidationError, AccessError
-from odoo.osv import expression
+from odoo import api, fields, models, tools, _, Command
+from odoo.exceptions import MissingError, ValidationError, AccessError
 from odoo.tools.safe_eval import safe_eval, test_python_expr
 from odoo.tools.float_utils import float_compare
 from odoo.http import request
@@ -438,16 +437,31 @@ class IrActionsServer(models.Model):
     child_ids = fields.Many2many('ir.actions.server', 'rel_server_actions', 'server_id', 'action_id',
                                  string='Child Actions', help='Child server actions that will be executed. Note that the last return returned action value will be used as global return value.')
     # Create
-    crud_model_id = fields.Many2one('ir.model', string='Target Model',
-                                    help="Model for record creation / update. Set this field only to specify a different model than the base model.")
+    crud_model_id = fields.Many2one(
+        'ir.model', string='Target Model',
+        compute='_compute_crud_model_id', readonly=False, store=True,
+        help="Model for record creation / update. Set this field only to specify a different model than the base model.")
     crud_model_name = fields.Char(related='crud_model_id.model', string='Target Model Name', readonly=True)
-    link_field_id = fields.Many2one('ir.model.fields', string='Link Field',
-                                    help="Provide the field used to link the newly created record "
-                                         "on the record used by the server action.")
+    link_field_id = fields.Many2one(
+        'ir.model.fields', string='Link Field',
+        compute='_compute_link_field_id', readonly=False, store=True,
+        help="Provide the field used to link the newly created record on the record used by the server action.")
     fields_lines = fields.One2many('ir.server.object.lines', 'server_id', string='Value Mapping', copy=True)
     groups_id = fields.Many2many('res.groups', 'ir_act_server_group_rel',
                                  'act_id', 'gid', string='Groups')
 
+    @api.onchange('model_id')
+    def _compute_crud_model_id(self):
+        invalid = self.filtered(lambda act: act.crud_model_id != act.model_id)
+        if invalid:
+            invalid.crud_model_id = False
+
+    @api.depends('model_id')
+    def _compute_link_field_id(self):
+        invalid = self.filtered(lambda act: act.link_field_id.model_id != act.model_id)
+        if invalid:
+            invalid.link_field_id = False
+
     @api.constrains('code')
     def _check_python_code(self):
         for action in self.sudo().filtered('code'):
@@ -489,10 +503,6 @@ class IrActionsServer(models.Model):
                         symbol, cls.__module__, cls.__name__
                     )
 
-    @api.onchange('crud_model_id')
-    def _onchange_crud_model_id(self):
-        self.link_field_id = False
-
     def create_action(self):
         """ Create a contextual action for each server action. """
         for action in self:
