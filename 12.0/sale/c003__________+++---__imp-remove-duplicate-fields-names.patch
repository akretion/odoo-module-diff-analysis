PR: https://github.com/odoo/odoo/pull/

From: b341b5ca73dafa94a305f8be82a5dd5d9ed3fe1e
From: Fabien Pinckaers
Date: 2018-01-07 18:28:03

Structural Changes: 26
Total Changes: 18

[IMP] Remove duplicate fields names

================================= pseudo patch: =================================

--- a/addons/sale/models/res_config_settings.py
+++ b/addons/sale/models/res_config_settings.py
@@ -16,19 +16,19 @@ class ResConfigSettings(models.TransientModel):
     group_discount_per_so_line = fields.Boolean("Discounts", implied_group='sale.group_discount_per_so_line')
     module_sale_margin = fields.Boolean("Margins")
     group_sale_layout = fields.Boolean("Sections on Sales Orders", implied_group='sale.group_sale_layout')
-    group_warning_sale = fields.Boolean("Warnings", implied_group='sale.group_warning_sale')
+    group_warning_sale = fields.Boolean("Sale Order Warnings", implied_group='sale.group_warning_sale')
     portal_confirmation = fields.Boolean('Online Signature & Payment')
     portal_confirmation_options = fields.Selection([
         ('sign', 'Signature'),
         ('pay', 'Payment')], string="Online Signature & Payment options")
-    module_sale_payment = fields.Boolean("Online Signature & Payment", help='Technical field implied by user choice of online_confirmation')
+    module_sale_payment = fields.Boolean("Sale Payment", help='Technical field implied by user choice of online_confirmation')
     module_website_quote = fields.Boolean("Quotations Templates")
     group_sale_delivery_address = fields.Boolean("Customer Addresses", implied_group='sale.group_delivery_invoice_address')
     multi_sales_price = fields.Boolean("Multiple Sales Prices per Product")
     multi_sales_price_method = fields.Selection([
         ('percentage', 'Multiple prices per product (e.g. customer segments, currencies)'),
         ('formula', 'Prices computed from formulas (discounts, margins, roundings)')
-        ], default='percentage', string="Pricelists")
+        ], default='percentage', string="Pricelists Method")
     sale_pricelist_setting = fields.Selection([
         ('fixed', 'A single sales price per product'),
         ('percentage', 'Multiple prices per product (e.g. customer segments, currencies)'),
@@ -60,7 +60,7 @@ class ResConfigSettings(models.TransientModel):
         domain="[('type', '=', 'service')]",
         oldname='deposit_product_id_setting',
         help='Default product used for payment advances')
-    auto_done_setting = fields.Boolean("Lock Confirmed Orders")
+    auto_done_setting = fields.Boolean("Lock Confirmed Sales")
     module_website_sale_digital = fields.Boolean("Sell digital products - provide downloadable content on your customer portal")
 
     auth_signup_uninvited = fields.Selection([

--- a/addons/sale/models/res_partner.py
+++ b/addons/sale/models/res_partner.py
@@ -8,9 +8,9 @@ from odoo.addons.base.models.res_partner import WARNING_MESSAGE, WARNING_HELP
 class ResPartner(models.Model):
     _inherit = 'res.partner'
 
-    sale_order_count = fields.Integer(compute='_compute_sale_order_count', string='# of Sales Order')
+    sale_order_count = fields.Integer(compute='_compute_sale_order_count', string='Sale Order Count')
     sale_order_ids = fields.One2many('sale.order', 'partner_id', 'Sales Order')
-    sale_warn = fields.Selection(WARNING_MESSAGE, 'Sales Order', default='no-message', help=WARNING_HELP)
+    sale_warn = fields.Selection(WARNING_MESSAGE, 'Sales Warnings', default='no-message', help=WARNING_HELP)
     sale_warn_msg = fields.Text('Message for Sales Order')
 
     def _compute_sale_order_count(self):

--- a/addons/sale/models/sale.py
+++ b/addons/sale/models/sale.py
@@ -142,7 +142,7 @@ class SaleOrder(models.Model):
 
     order_line = fields.One2many('sale.order.line', 'order_id', string='Order Lines', states={'cancel': [('readonly', True)], 'done': [('readonly', True)]}, copy=True, auto_join=True)
 
-    invoice_count = fields.Integer(string='# of Invoices', compute='_get_invoiced', readonly=True)
+    invoice_count = fields.Integer(string='Invoice Count', compute='_get_invoiced', readonly=True)
     invoice_ids = fields.Many2many("account.invoice", string='Invoices', compute="_get_invoiced", readonly=True, copy=False)
     invoice_status = fields.Selection([
         ('upselling', 'Upselling Opportunity'),
@@ -843,7 +843,7 @@ class SaleOrderLine(models.Model):
     price_unit = fields.Float('Unit Price', required=True, digits=dp.get_precision('Product Price'), default=0.0)
 
     price_subtotal = fields.Monetary(compute='_compute_amount', string='Subtotal', readonly=True, store=True)
-    price_tax = fields.Float(compute='_compute_amount', string='Taxes', readonly=True, store=True)
+    price_tax = fields.Float(compute='_compute_amount', string='Total Tax', readonly=True, store=True)
     price_total = fields.Monetary(compute='_compute_amount', string='Total', readonly=True, store=True)
 
     price_reduce = fields.Float(compute='_get_price_reduce', string='Price Reduce', digits=dp.get_precision('Product Price'), readonly=True, store=True)
@@ -855,7 +855,7 @@ class SaleOrderLine(models.Model):
 
     product_id = fields.Many2one('product.product', string='Product', domain=[('sale_ok', '=', True)], change_default=True, ondelete='restrict', required=True)
     product_updatable = fields.Boolean(compute='_compute_product_updatable', string='Can Edit Product', readonly=True, default=True)
-    product_uom_qty = fields.Float(string='Quantity', digits=dp.get_precision('Product Unit of Measure'), required=True, default=1.0)
+    product_uom_qty = fields.Float(string='Ordered Quantity', digits=dp.get_precision('Product Unit of Measure'), required=True, default=1.0)
     product_uom = fields.Many2one('product.uom', string='Unit of Measure', required=True)
     # Non-stored related field to allow portal user to see the image of the product he has ordered
     product_image = fields.Binary('Product Image', related="product_id.image", store=False)

--- a/addons/sale/models/res_config_settings.py
+++ b/addons/sale/models/res_config_settings.py
@@ -16,7 +16,7 @@ class ResConfigSettings(models.TransientModel):
     group_discount_per_so_line = fields.Boolean("Discounts", implied_group='sale.group_discount_per_so_line')
     module_sale_margin = fields.Boolean("Margins")
     group_sale_layout = fields.Boolean("Sections on Sales Orders", implied_group='sale.group_sale_layout')
-    group_warning_sale = fields.Boolean("Warnings for Sale", implied_group='sale.group_warning_sale')
+    group_warning_sale = fields.Boolean("Sale Order Warnings", implied_group='sale.group_warning_sale')
     portal_confirmation = fields.Boolean('Online Signature & Payment')
     portal_confirmation_options = fields.Selection([
         ('sign', 'Signature'),
@@ -60,7 +60,7 @@ class ResConfigSettings(models.TransientModel):
         domain="[('type', '=', 'service')]",
         oldname='deposit_product_id_setting',
         help='Default product used for payment advances')
-    auto_done_setting = fields.Boolean("Auto Done Setting")
+    auto_done_setting = fields.Boolean("Lock Confirmed Sales")
     module_website_sale_digital = fields.Boolean("Sell digital products - provide downloadable content on your customer portal")
 
     auth_signup_uninvited = fields.Selection([

--- a/addons/sale/models/res_partner.py
+++ b/addons/sale/models/res_partner.py
@@ -8,9 +8,9 @@ from odoo.addons.base.models.res_partner import WARNING_MESSAGE, WARNING_HELP
 class ResPartner(models.Model):
     _inherit = 'res.partner'
 
-    sale_order_count = fields.Integer(compute='_compute_sale_order_count', string='# of Sales Order')
+    sale_order_count = fields.Integer(compute='_compute_sale_order_count', string='Sale Order Count')
     sale_order_ids = fields.One2many('sale.order', 'partner_id', 'Sales Order')
-    sale_warn = fields.Selection(WARNING_MESSAGE, 'Sales Order Warning', default='no-message', help=WARNING_HELP, required=True)
+    sale_warn = fields.Selection(WARNING_MESSAGE, 'Sales Warnings', default='no-message', help=WARNING_HELP)
     sale_warn_msg = fields.Text('Message for Sales Order')
 
     def _compute_sale_order_count(self):

--- a/addons/sale/models/sale.py
+++ b/addons/sale/models/sale.py
@@ -142,7 +142,7 @@ class SaleOrder(models.Model):
 
     order_line = fields.One2many('sale.order.line', 'order_id', string='Order Lines', states={'cancel': [('readonly', True)], 'done': [('readonly', True)]}, copy=True, auto_join=True)
 
-    invoice_count = fields.Integer(string='# of Invoices', compute='_get_invoiced', readonly=True)
+    invoice_count = fields.Integer(string='Invoice Count', compute='_get_invoiced', readonly=True)
     invoice_ids = fields.Many2many("account.invoice", string='Invoices', compute="_get_invoiced", readonly=True, copy=False)
     invoice_status = fields.Selection([
         ('upselling', 'Upselling Opportunity'),
@@ -253,7 +253,7 @@ class SaleOrder(models.Model):
         if partner.sale_warn == 'no-message' and partner.parent_id:
             partner = partner.parent_id
 
-        if partner.sale_warn != 'no-message':
+        if partner.sale_warn and partner.sale_warn != 'no-message':
             # Block if partner only has warning but parent company is blocked
             if partner.sale_warn != 'block' and partner.parent_id and partner.parent_id.sale_warn == 'block':
                 partner = partner.parent_id
