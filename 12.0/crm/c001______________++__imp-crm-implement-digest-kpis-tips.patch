PR: https://github.com/odoo/odoo/pull/

From: 707bd1bfb41e991adbde195a330196b48c0b31b2
From: Mitali Patel
Date: 2018-07-19 09:26:46

Structural Changes: 5
Total Changes: 47

[IMP] crm: implement digest KPIs / tips

Purpose of this commit is send lead / opportunity creation as well as
won opportunities KPIs in digest emails. Those are added in the default
digest template.

A tip to remind to use the mailgateway is also integrated.

This commit is linked to task ID 30655 and PR #18318.

================================= pseudo patch: =================================

--- a/addons/crm/models/__init__.py
+++ b/addons/crm/models/__init__.py
@@ -8,3 +8,4 @@ from . import crm_stage
 from . import crm_team
 from . import res_config_settings
 from . import res_partner
+from . import digest

--- a/None
+++ b/addons/crm/models/digest.py
@@ -0,0 +1,46 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import api, fields, models, _
+from odoo.exceptions import AccessError
+
+
+class Digest(models.Model):
+    _inherit = 'digest.digest'
+
+    kpi_crm_lead_created = fields.Boolean('New Leads/Opportunities')
+    kpi_crm_lead_created_value = fields.Integer(compute='_compute_kpi_crm_lead_created_value')
+    kpi_crm_opportunities_won = fields.Boolean('Opportunities Won')
+    kpi_crm_opportunities_won_value = fields.Integer(compute='_compute_kpi_crm_opportunities_won_value')
+
+    def _compute_kpi_crm_lead_created_value(self):
+        if not self.env.user.has_group('sales_team.group_sale_salesman'):
+            raise AccessError(_("Do not have access, skip this data for user's digest email"))
+        for record in self:
+            start, end, company = record._get_kpi_compute_parameters()
+            record.kpi_crm_lead_created_value = self.env['crm.lead'].search_count([
+                ('create_date', '>=', start),
+                ('create_date', '<', end),
+                ('company_id', '=', company.id)
+            ])
+
+    def _compute_kpi_crm_opportunities_won_value(self):
+        if not self.env.user.has_group('sales_team.group_sale_salesman'):
+            raise AccessError(_("Do not have access, skip this data for user's digest email"))
+        for record in self:
+            start, end, company = record._get_kpi_compute_parameters()
+            record.kpi_crm_opportunities_won_value = self.env['crm.lead'].search_count([
+                ('type', '=', 'opportunity'),
+                ('probability', '=', '100'),
+                ('date_closed', '>=', start),
+                ('date_closed', '<', end),
+                ('company_id', '=', company.id)
+            ])
+
+    def compute_kpis_actions(self, company, user):
+        res = super(Digest, self).compute_kpis_actions(company, user)
+        res['kpi_crm_lead_created'] = 'crm.crm_lead_opportunities_tree_view&menu_id=%s' % self.env.ref('crm.crm_menu_root').id
+        res['kpi_crm_opportunities_won'] = 'crm.crm_lead_opportunities_tree_view&menu_id=%s' % self.env.ref('crm.crm_menu_root').id
+        if user.has_group('crm.group_use_lead'):
+            res['kpi_crm_lead_created'] = 'crm.crm_lead_all_leads&menu_id=%s' % self.env.ref('crm.crm_menu_root').id
+        return res
