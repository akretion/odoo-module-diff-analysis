PR: https://github.com/odoo/odoo/pull/78449

From: 3732aea4b884eb3fadec344c877ebc5763bdbb40
From: Camille Spiritus
Date: 2021-12-14 14:47:25

Breaking data model changes scores: del:2 + add:0, change matches:
-    partner_shipping_id = fields.Many2one(
-    group_sale_delivery_address = fields.Boolean("Customer Addresses", implied_group='sale.group_delivery_invoice_address')

Total Changes: 30

[IMP] account,sale: move partner_shipping_id field from sale to account

The computation of 'partner_shipping_id' is now done using a 'compute' instead of 'onchange'.

task-2601934

closes odoo/odoo#78449

Related: odoo/enterprise#22098
Related: odoo/upgrade#3000
Signed-off-by: Laurent Smet <las@odoo.com>

================================= pseudo patch: =================================

--- a/addons/sale/models/account_move.py
+++ b/addons/sale/models/account_move.py
@@ -18,13 +18,6 @@ class AccountMove(models.Model):
         compute='_compute_team_id', store=True, readonly=False,
         ondelete="set null", tracking=True,
         domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]")
-    partner_shipping_id = fields.Many2one(
-        'res.partner',
-        string='Delivery Address',
-        readonly=True,
-        states={'draft': [('readonly', False)]},
-        domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]",
-        help="Delivery address for current invoice.")
 
     # UTMs - enforcing the fact that we want to 'set null' when relation is unlinked
     campaign_id = fields.Many2one(ondelete='set null')
@@ -39,9 +32,9 @@ class AccountMove(models.Model):
     def _compute_fiscal_position_id(self):
         # Trigger the change of fiscal position when the shipping address is modified.
         for move in self:
-            delivery_partner = self.env['res.partner'].browse(move._get_invoice_delivery_partner_id())
-            fiscal_position = self.env['account.fiscal.position'].with_company(
-                move.company_id)._get_fiscal_position(move.partner_id, delivery=delivery_partner)
+            fiscal_position = self.env['account.fiscal.position']\
+                .with_company(move.company_id)\
+                ._get_fiscal_position(move.partner_id, delivery=move.partner_shipping_id)
             if fiscal_position:
                 move.fiscal_position_id = fiscal_position
 
@@ -52,17 +45,6 @@ class AccountMove(models.Model):
             downpayment_lines.unlink()
         return res
 
-    @api.onchange('partner_id')
-    def _onchange_partner_id(self):
-        # OVERRIDE
-        # Recompute 'partner_shipping_id' based on 'partner_id'.
-        addr = self.partner_id.address_get(['delivery'])
-        self.partner_shipping_id = addr and addr.get('delivery')
-
-        res = super(AccountMove, self)._onchange_partner_id()
-
-        return res
-
     @api.depends('invoice_user_id')
     def _compute_team_id(self):
         for move in self:
@@ -127,8 +109,3 @@ class AccountMove(models.Model):
         for (order, name) in todo:
             order.message_post(body=_("Invoice %s paid", name))
         return res
-
-    def _get_invoice_delivery_partner_id(self):
-        # OVERRIDE
-        self.ensure_one()
-        return self.partner_shipping_id.id or super(AccountMove, self)._get_invoice_delivery_partner_id()

--- a/addons/sale/models/res_config_settings.py
+++ b/addons/sale/models/res_config_settings.py
@@ -14,7 +14,6 @@ class ResConfigSettings(models.TransientModel):
     group_warning_sale = fields.Boolean("Sale Order Warnings", implied_group='sale.group_warning_sale')
     portal_confirmation_sign = fields.Boolean(related='company_id.portal_confirmation_sign', string='Online Signature', readonly=False)
     portal_confirmation_pay = fields.Boolean(related='company_id.portal_confirmation_pay', string='Online Payment', readonly=False)
-    group_sale_delivery_address = fields.Boolean("Customer Addresses", implied_group='sale.group_delivery_invoice_address')
     group_proforma_sales = fields.Boolean(string="Pro-Forma Invoice", implied_group='sale.group_proforma_sales',
         help="Allows you to send pro-forma invoice.")
     default_invoice_policy = fields.Selection([
