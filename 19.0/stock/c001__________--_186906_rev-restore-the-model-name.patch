PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:11 + add:0, change matches:
-    _inherit = ['barcode.rule']
-    _inherit = ['ir.actions.report']
-    _inherit = ["product.product"]
-    _inherit = ['product.template']
-    _inherit = ['product.category']
-    _inherit = ["product.packaging"]
-    _inherit = ['uom.uom']
-    _inherit = ["res.company"]
-    _inherit = ['res.config.settings']
-    _inherit = ['res.partner']
-    _inherit = ['res.users']

Total Changes: 40

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/stock/models/barcode.py
+++ b/addons/stock/models/barcode.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class BarcodeRule(models.Model):
-    _inherit = ['barcode.rule']
+    _inherit = 'barcode.rule'
 
     type = fields.Selection(selection_add=[
         ('weight', 'Weighted Product'),

--- a/addons/stock/models/ir_actions_report.py
+++ b/addons/stock/models/ir_actions_report.py
@@ -2,7 +2,7 @@ from odoo import models
 
 
 class IrActionsReport(models.Model):
-    _inherit = ['ir.actions.report']
+    _inherit = 'ir.actions.report'
 
     def _get_rendering_context(self, report, docids, data):
         data = super()._get_rendering_context(report, docids, data)

--- a/addons/stock/models/product.py
+++ b/addons/stock/models/product.py
@@ -24,7 +24,7 @@ OPERATORS = {
 
 
 class ProductProduct(models.Model):
-    _inherit = ["product.product"]
+    _inherit = "product.product"
 
     stock_quant_ids = fields.One2many('stock.quant', 'product_id') # used to compute quantities
     stock_move_ids = fields.One2many('stock.move', 'product_id') # used to compute quantities
@@ -660,7 +660,7 @@ class ProductProduct(models.Model):
 
 
 class ProductTemplate(models.Model):
-    _inherit = ['product.template']
+    _inherit = 'product.template'
     _check_company_auto = True
 
     is_storable = fields.Boolean(
@@ -1024,7 +1024,7 @@ class ProductTemplate(models.Model):
 
 
 class ProductCategory(models.Model):
-    _inherit = ['product.category']
+    _inherit = 'product.category'
 
     route_ids = fields.Many2many(
         'stock.route', 'stock_route_categ', 'categ_id', 'route_id', 'Routes',
@@ -1082,7 +1082,7 @@ class ProductCategory(models.Model):
 
 
 class ProductPackaging(models.Model):
-    _inherit = ["product.packaging"]
+    _inherit = "product.packaging"
 
     package_type_id = fields.Many2one('stock.package.type', 'Package Type')
     route_ids = fields.Many2many(
@@ -1092,7 +1092,7 @@ class ProductPackaging(models.Model):
 
 
 class UomUom(models.Model):
-    _inherit = ['uom.uom']
+    _inherit = 'uom.uom'
 
     def write(self, values):
         # Users can not update the factor if open stock moves are based on it

--- a/addons/stock/models/product_strategy.py
+++ b/addons/stock/models/product_strategy.py
@@ -8,6 +8,7 @@ from odoo.tools.float_utils import float_compare
 
 
 class ProductRemoval(models.Model):
+    _name = 'product.removal'
     _description = 'Removal Strategy'
 
     name = fields.Char('Name', required=True, translate=True)
@@ -15,6 +16,7 @@ class ProductRemoval(models.Model):
 
 
 class StockPutawayRule(models.Model):
+    _name = 'stock.putaway.rule'
     _order = 'sequence,product_id'
     _description = 'Putaway Rule'
     _check_company_auto = True

--- a/addons/stock/models/res_company.py
+++ b/addons/stock/models/res_company.py
@@ -6,7 +6,7 @@ from odoo import _, api, fields, models
 
 
 class ResCompany(models.Model):
-    _inherit = ["res.company"]
+    _inherit = "res.company"
     _check_company_auto = True
 
     def _default_confirmation_mail_template(self):

--- a/addons/stock/models/res_config_settings.py
+++ b/addons/stock/models/res_config_settings.py
@@ -6,7 +6,7 @@ from odoo.exceptions import UserError
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = ['res.config.settings']
+    _inherit = 'res.config.settings'
 
     module_product_expiry = fields.Boolean("Expiration Dates",
         help="Track following dates on lots & serial numbers: best before, removal, end of life, alert. \n Such dates are set automatically at lot/serial number creation based on values set on the product (in days).")

--- a/addons/stock/models/res_partner.py
+++ b/addons/stock/models/res_partner.py
@@ -6,7 +6,7 @@ from odoo.addons.base.models.res_partner import WARNING_HELP, WARNING_MESSAGE
 
 
 class ResPartner(models.Model):
-    _inherit = ['res.partner']
+    _inherit = 'res.partner'
     _check_company_auto = True
 
     property_stock_customer = fields.Many2one(

--- a/addons/stock/models/res_users.py
+++ b/addons/stock/models/res_users.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class ResUsers(models.Model):
-    _inherit = ['res.users']
+    _inherit = 'res.users'
 
     def _get_default_warehouse_id(self):
         # !!! Any change to the following search domain should probably

--- a/addons/stock/models/stock_location.py
+++ b/addons/stock/models/stock_location.py
@@ -13,6 +13,7 @@ from odoo.tools.float_utils import float_compare
 
 
 class StockLocation(models.Model):
+    _name = 'stock.location'
     _description = "Inventory Locations"
     _parent_name = "location_id"
     _parent_store = True
@@ -512,6 +513,7 @@ class StockLocation(models.Model):
 
 
 class StockRoute(models.Model):
+    _name = 'stock.route'
     _description = "Inventory Routes"
     _order = 'sequence'
     _check_company_auto = True

--- a/addons/stock/models/stock_lot.py
+++ b/addons/stock/models/stock_lot.py
@@ -20,6 +20,7 @@ OPERATORS = {
 
 
 class StockLot(models.Model):
+    _name = 'stock.lot'
     _inherit = ['mail.thread', 'mail.activity.mixin']
     _description = 'Lot/Serial'
     _check_company_auto = True

--- a/addons/stock/models/stock_move.py
+++ b/addons/stock/models/stock_move.py
@@ -17,6 +17,7 @@ PROCUREMENT_PRIORITIES = [('0', 'Normal'), ('1', 'Urgent')]
 
 
 class StockMove(models.Model):
+    _name = 'stock.move'
     _description = "Stock Move"
     _order = 'sequence, id'
 

--- a/addons/stock/models/stock_move_line.py
+++ b/addons/stock/models/stock_move_line.py
@@ -10,6 +10,7 @@ from odoo.tools.float_utils import float_compare, float_is_zero, float_round
 
 
 class StockMoveLine(models.Model):
+    _name = 'stock.move.line'
     _description = "Product Moves (Stock Move Line)"
     _rec_name = "product_id"
     _order = "result_package_id desc, id"

--- a/addons/stock/models/stock_package_level.py
+++ b/addons/stock/models/stock_package_level.py
@@ -8,6 +8,7 @@ from odoo.tools.float_utils import float_is_zero
 
 
 class StockPackage_Level(models.Model):
+    _name = 'stock.package_level'
     _description = 'Stock Package Level'
     _check_company_auto = True
 

--- a/addons/stock/models/stock_package_type.py
+++ b/addons/stock/models/stock_package_type.py
@@ -5,6 +5,7 @@ from odoo import fields, models
 
 
 class StockPackageType(models.Model):
+    _name = 'stock.package.type'
     _description = "Stock package type"
 
     def _get_default_length_uom(self):

--- a/addons/stock/models/stock_picking.py
+++ b/addons/stock/models/stock_picking.py
@@ -17,6 +17,7 @@ from odoo.tools.float_utils import float_compare, float_is_zero
 
 
 class StockPickingType(models.Model):
+    _name = 'stock.picking.type'
     _description = "Picking Type"
     _order = 'is_favorite desc, sequence, id'
     _rec_names_search = ['name', 'warehouse_id.name']
@@ -525,6 +526,7 @@ class StockPickingType(models.Model):
 
 
 class StockPicking(models.Model):
+    _name = 'stock.picking'
     _inherit = ['mail.thread', 'mail.activity.mixin']
     _description = "Transfer"
     _order = "priority desc, scheduled_date asc, id desc"

--- a/addons/stock/models/stock_quant.py
+++ b/addons/stock/models/stock_quant.py
@@ -17,6 +17,7 @@ _logger = logging.getLogger(__name__)
 
 
 class StockQuant(models.Model):
+    _name = 'stock.quant'
     _description = 'Quants'
     _rec_name = 'product_id'
     _rec_names_search = ['location_id', 'lot_id', 'package_id', 'owner_id']

--- a/addons/stock/models/stock_replenish_mixin.py
+++ b/addons/stock/models/stock_replenish_mixin.py
@@ -4,6 +4,7 @@ from odoo import api, fields, models
 
 
 class StockReplenishMixin(models.AbstractModel):
+    _name = 'stock.replenish.mixin'
     _description = 'Product Replenish Mixin'
 
     route_id = fields.Many2one(

--- a/addons/stock/models/stock_scrap.py
+++ b/addons/stock/models/stock_scrap.py
@@ -8,6 +8,7 @@ from odoo.tools.misc import clean_context
 
 
 class StockScrap(models.Model):
+    _name = 'stock.scrap'
     _inherit = ['mail.thread']
     _order = 'id desc'
     _description = 'Scrap'
@@ -227,6 +228,7 @@ class StockScrap(models.Model):
 
 
 class StockScrapReasonTag(models.Model):
+    _name = 'stock.scrap.reason.tag'
     _description = 'Scrap Reason Tag'
     _order = 'sequence, id'
 

--- a/addons/stock/models/stock_storage_category.py
+++ b/addons/stock/models/stock_storage_category.py
@@ -5,6 +5,7 @@ from odoo import api, fields, models
 
 
 class StockStorageCategory(models.Model):
+    _name = 'stock.storage.category'
     _description = "Storage Category"
     _order = "name"
 
@@ -45,6 +46,7 @@ class StockStorageCategory(models.Model):
 
 
 class StockStorageCategoryCapacity(models.Model):
+    _name = 'stock.storage.category.capacity'
     _description = "Storage Category Capacity"
     _check_company_auto = True
     _order = "storage_category_id"

--- a/addons/stock/models/stock_warehouse.py
+++ b/addons/stock/models/stock_warehouse.py
@@ -23,6 +23,7 @@ ROUTE_NAMES = {
 
 
 class StockWarehouse(models.Model):
+    _name = 'stock.warehouse'
     _description = "Warehouse"
     _order = 'sequence,id'
     _check_company_auto = True
