PR: https://github.com/odoo/odoo/pull/

From: c75f3a007c89ec16d7cca4d9f80659eec9e4e772
From: Laurent Smet
Date: 2018-07-26 00:18:37

Structural Changes: 6
Total Changes: 29

[REF] account,stock,account_intrastat: Intrastat report moved in interprise

This will allow to use the same core for all intrastat reports and benefit from the dynamic financial reports engine.
Incoterms have been move to account, as we want to provide a light intrastat report for people not having the stock app installed

Was task: 35850
Was PR #23805

================================= pseudo patch: =================================

--- a/addons/account/models/__init__.py
+++ b/addons/account/models/__init__.py
@@ -17,3 +17,4 @@ from . import account_cash_rounding
 from . import reconciliation_widget
 from . import res_users
 from . import res_company
+from . import account_incoterms

--- a/None
+++ b/addons/account/models/account_incoterms.py
@@ -0,0 +1,19 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import fields, models
+
+
+class AccountIncoterms(models.Model):
+    _name = 'account.incoterms'
+    _description = 'Incoterms'
+
+    name = fields.Char(
+        'Name', required=True, translate=True,
+        help="Incoterms are series of sales terms. They are used to divide transaction costs and responsibilities between buyer and seller and reflect state-of-the-art transportation practices.")
+    code = fields.Char(
+        'Code', size=3, required=True,
+        help="Incoterm Standard Code")
+    active = fields.Boolean(
+        'Active', default=True,
+        help="By unchecking the active field, you may hide an INCOTERM you will not use.")

--- a/addons/account/models/account_invoice.py
+++ b/addons/account/models/account_invoice.py
@@ -48,6 +48,9 @@ class AccountInvoice(models.Model):
     def _get_default_access_token(self):
         return str(uuid.uuid4())
 
+    def _get_default_incoterm(self):
+        return self.env.user.company_id.incoterm_id
+
     @api.one
     @api.depends('invoice_line_ids.price_subtotal', 'tax_line_ids.amount', 'tax_line_ids.amount_rounding',
                  'currency_id', 'company_id', 'date_invoice', 'type')
@@ -369,6 +372,9 @@ class AccountInvoice(models.Model):
     #fields use to set the sequence, on the first invoice of the journal
     sequence_number_next = fields.Char(string='Next Number', compute="_get_sequence_number_next", inverse="_set_sequence_next")
     sequence_number_next_prefix = fields.Char(string='Next Number Prefix', compute="_get_sequence_prefix")
+    incoterm_id = fields.Many2one('account.incoterms', string='Incoterm',
+        default=_get_default_incoterm,
+        help='International Commercial Terms are a series of predefined commercial terms used in international transactions.')
 
     #fields related to vendor bills automated creation by email
     source_email = fields.Char(string='Source Email', track_visibility='onchange')

--- a/addons/account/models/company.py
+++ b/addons/account/models/company.py
@@ -66,6 +66,8 @@ Best Regards,'''))
     account_setup_fy_data_done = fields.Boolean('Financial Year Setup Marked As Done', help="Technical field holding the status of the financial year setup step.")
     account_setup_coa_done = fields.Boolean(string='Chart of Account Checked', help="Technical field holding the status of the chart of account setup step.")
     account_setup_bar_closed = fields.Boolean(string='Setup Bar Closed', help="Technical field set to True when setup bar has been closed by the user.")
+    incoterm_id = fields.Many2one('account.incoterms', string='Default incoterm',
+        help='International Commercial Terms are a series of predefined commercial terms used in international transactions.')
 
     # account invoice onboarding
     account_invoice_onboarding_closed = fields.Boolean(

--- a/addons/account/models/res_config_settings.py
+++ b/addons/account/models/res_config_settings.py
@@ -68,6 +68,7 @@ class ResConfigSettings(models.TransientModel):
     module_account_bank_statement_import_camt = fields.Boolean("Import in CAMT.053 format")
     module_currency_rate_live = fields.Boolean(string="Automatic Currency Rates")
     module_print_docsaway = fields.Boolean(string="Docsaway")
+    module_account_intrastat = fields.Boolean(string='Intrastat')
     module_product_margin = fields.Boolean(string="Allow Product Margin")
     module_l10n_eu_service = fields.Boolean(string="EU Digital Goods VAT")
     module_account_taxcloud = fields.Boolean(string="Account TaxCloud")
