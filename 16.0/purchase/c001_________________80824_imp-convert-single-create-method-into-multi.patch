PR: https://github.com/odoo/odoo/pull/80824

From: 18952cdc76070f2a70789f2fa25e4fa0d546d470
From: Yannick Tivisse
Date: 2021-12-14 19:13:18

Structural Changes: 2
Total Changes: 35

[IMP] *: Convert single create method into multi

Taskid: 2703085
Part-of: odoo/odoo#80824
Co-authored-by: Victor Feyens <vfe@odoo.com>

================================= pseudo patch: =================================

--- a/addons/purchase/models/purchase.py
+++ b/addons/purchase/models/purchase.py
@@ -231,21 +231,26 @@ class PurchaseOrder(models.Model):
             self.partner_id.sudo().write(partner_vals)  # Because the purchase user doesn't have write on `res.partner`
         return res
 
-    @api.model
-    def create(self, vals):
-        company_id = vals.get('company_id', self.default_get(['company_id'])['company_id'])
-        # Ensures default picking type and currency are taken from the right company.
-        self_comp = self.with_company(company_id)
-        if vals.get('name', 'New') == 'New':
-            seq_date = None
-            if 'date_order' in vals:
-                seq_date = fields.Datetime.context_timestamp(self, fields.Datetime.to_datetime(vals['date_order']))
-            vals['name'] = self_comp.env['ir.sequence'].next_by_code('purchase.order', sequence_date=seq_date) or '/'
-        vals, partner_vals = self._write_partner_values(vals)
-        res = super(PurchaseOrder, self_comp).create(vals)
-        if partner_vals:
-            res.sudo().write(partner_vals)  # Because the purchase user doesn't have write on `res.partner`
-        return res
+    @api.model_create_multi
+    def create(self, vals_list):
+        orders = self.browse()
+        partner_vals_list = []
+        for vals in vals_list:
+            company_id = vals.get('company_id', self.default_get(['company_id'])['company_id'])
+            # Ensures default picking type and currency are taken from the right company.
+            self_comp = self.with_company(company_id)
+            if vals.get('name', 'New') == 'New':
+                seq_date = None
+                if 'date_order' in vals:
+                    seq_date = fields.Datetime.context_timestamp(self, fields.Datetime.to_datetime(vals['date_order']))
+                vals['name'] = self_comp.env['ir.sequence'].next_by_code('purchase.order', sequence_date=seq_date) or '/'
+            vals, partner_vals = self._write_partner_values(vals)
+            partner_vals_list.append(partner_vals)
+            orders |= super(PurchaseOrder, self_comp).create(vals)
+        for order, partner_vals in zip(orders, partner_vals_list):
+            if partner_vals:
+                order.sudo().write(partner_vals)  # Because the purchase user doesn't have write on `res.partner`
+        return orders
 
     @api.ondelete(at_uninstall=False)
     def _unlink_if_cancelled(self):
