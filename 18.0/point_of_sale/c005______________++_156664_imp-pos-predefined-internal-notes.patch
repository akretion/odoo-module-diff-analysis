PR: https://github.com/odoo/odoo/pull/156664

From: f47b9a27e50266899e73b43a71c31621e57e8c6c
From: Nesma Harraz
Date: 2024-03-14 06:58:56

Structural Changes: 4
Total Changes: 19

[IMP] pos: Predefined Internal Notes

- Added a predefined note model
- Added these notes on toggle buttons on the internal note popup window
- Instead of having all notes on one line we now have them as seperated pills

closes odoo/odoo#156664

Task-id: 3764484
Related: odoo/enterprise#58287
Related: odoo/upgrade#5810
Signed-off-by: Joseph Caburnay (jcb) <jcb@odoo.com>

================================= pseudo patch: =================================

--- a/addons/point_of_sale/models/__init__.py
+++ b/addons/point_of_sale/models/__init__.py
@@ -28,3 +28,4 @@ from . import pos_payment_method
 from . import pos_bill
 from . import report_sale_details
 from . import pos_printer
+from . import pos_note

--- a/addons/point_of_sale/models/pos_config.py
+++ b/addons/point_of_sale/models/pos_config.py
@@ -187,6 +187,7 @@ class PosConfig(models.Model):
     access_token = fields.Char("Access Token", default=lambda self: uuid4().hex[:16])
     show_product_images = fields.Boolean(string="Show Product Images", help="Show product images in the Point of Sale interface.", default=True)
     show_category_images = fields.Boolean(string="Show Category Images", help="Show category images in the Point of Sale interface.", default=True)
+    note_ids = fields.Many2many('pos.note', string='Note Models', help='The predefined notes of this point of sale.')
 
     @api.depends('payment_method_ids')
     def _compute_cash_control(self):

--- a/None
+++ b/addons/point_of_sale/models/pos_note.py
@@ -0,0 +1,12 @@
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import fields, models
+
+class PosNote(models.Model):
+    _name = 'pos.note'
+    _description = 'PoS Note'
+
+    name = fields.Char(required=True)
+    sequence = fields.Integer('Sequence', default=1)
+
+    _sql_constraints = [('name_unique', 'unique (name)', "A note with this name already exists")]

--- a/addons/point_of_sale/models/pos_session.py
+++ b/addons/point_of_sale/models/pos_session.py
@@ -256,6 +256,10 @@ class PosSession(models.Model):
                 'domain': [('id', '=', config_id.currency_id.id)],
                 'fields': ['id', 'name', 'symbol', 'position', 'rounding', 'rate', 'decimal_places'],
             },
+            'pos.note': {
+                'domain': [('id', '=', config_id.note_ids.ids)] if config_id.note_ids else [],
+                'fields': ['name'],
+            },
         }
 
         return params

--- a/addons/point_of_sale/models/res_config_settings.py
+++ b/addons/point_of_sale/models/res_config_settings.py
@@ -110,6 +110,7 @@ class ResConfigSettings(models.TransientModel):
     point_of_sale_ticket_unique_code = fields.Boolean(related='company_id.point_of_sale_ticket_unique_code', readonly=False)
     pos_show_product_images = fields.Boolean(related='pos_config_id.show_product_images', readonly=False)
     pos_show_category_images = fields.Boolean(related='pos_config_id.show_category_images', readonly=False)
+    pos_note_ids = fields.Many2many(related='pos_config_id.note_ids', readonly=False)
 
     @api.model_create_multi
     def create(self, vals_list):
