PR: https://github.com/odoo/odoo/pull/

From: 9f844c570f209877563d724e79fa9e8224653c23
From: Thibault Delavall√©e
Date: 2015-08-06 08:06:18

Structural Changes: 1
Total Changes: 39

[REM] mail, calendar: removed dead code (unused method and its
override, unused variables; duplicated code; commented code)

================================= pseudo patch: =================================

--- a/addons/mail/models/mail_message.py
+++ b/addons/mail/models/mail_message.py
@@ -32,10 +32,6 @@ class Message(models.Model):
     _rec_name = 'record_name'
 
     _message_read_limit = 30
-    _message_read_fields = ['id', 'parent_id', 'model', 'res_id', 'body', 'subject', 'date', 'to_read', 'email_from',
-        'message_type', 'vote_user_ids', 'attachment_ids', 'tracking_value_ids' ,'author_id', 'partner_ids', 'record_name']
-    _message_record_name_length = 18
-    _message_read_more_limit = 1024
 
     @api.model
     def _get_default_from(self):

--- a/addons/mail/models/mail_thread.py
+++ b/addons/mail/models/mail_thread.py
@@ -1589,12 +1589,6 @@ class MailThread(models.AbstractModel):
     # Followers API
     # ------------------------------------------------------
 
-    @api.multi
-    def message_get_subscription_data(self, user_pid=None):
-        # TDE CLEANME: is that method usefull ?
-        """ Wrapper to get subtypes data. """
-        return self._get_subscription_data(user_pid=user_pid)
-
     @api.multi
     def message_subscribe_users(self, user_ids=None, subtype_ids=None):
         """ Wrapper on message_subscribe, using users. If user_ids is not

--- a/addons/mail/models/res_users.py
+++ b/addons/mail/models/res_users.py
@@ -56,6 +56,16 @@ class Users(models.Model):
         user._create_welcome_message()
         return user
 
+    @api.multi
+    def write(self, vals):
+        write_res = super(Users, self).write(vals)
+        if vals.get('groups_id'):
+            # form: {'group_ids': [(3, 10), (3, 3), (4, 10), (4, 3)]} or {'group_ids': [(6, 0, [ids]}
+            user_group_ids = [command[1] for command in vals['groups_id'] if command[0] == 4]
+            user_group_ids += [id for command in vals['groups_id'] if command[0] == 6 for id in command[2]]
+            self.env['mail.channel'].search([('group_ids', 'in', user_group_ids)]).message_subscribe_users(self._ids)
+        return write_res
+
     def copy_data(self, *args, **kwargs):
         data = super(Users, self).copy_data(*args, **kwargs)
         if data and data.get('alias_name'):
@@ -123,25 +133,6 @@ class Users(models.Model):
         return dict((res_id, list()) for res_id in self._ids)
 
 
-class res_users_mail_channel(models.Model):
-    """ Update of res.users class
-        - if adding groups to an user, check mail.channels linked to this user
-          group, and the user. This is done by overriding the write method.
-    """
-    _name = 'res.users'
-    _inherit = ['res.users']
-
-    @api.multi
-    def write(self, vals):
-        write_res = super(res_users_mail_channel, self).write(vals)
-        if vals.get('groups_id'):
-            # form: {'group_ids': [(3, 10), (3, 3), (4, 10), (4, 3)]} or {'group_ids': [(6, 0, [ids]}
-            user_group_ids = [command[1] for command in vals['groups_id'] if command[0] == 4]
-            user_group_ids += [id for command in vals['groups_id'] if command[0] == 6 for id in command[2]]
-            self.env['mail.channel'].search([('group_ids', 'in', user_group_ids)]).message_subscribe_users(self._ids)
-        return write_res
-
-
 class res_groups_mail_channel(models.Model):
     """ Update of res.groups class
         - if adding users from a group, check mail.channels linked to this user
