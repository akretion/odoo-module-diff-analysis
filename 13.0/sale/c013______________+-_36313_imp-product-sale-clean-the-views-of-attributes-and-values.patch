PR: https://github.com/odoo/odoo/pull/36313

From: 60f03666ab41e8930172b6f5ba79b99447dc5710
From: Arnaud Joset
Date: 2019-09-20 14:59:05

Structural Changes: 5
Total Changes: 13

[IMP] product, sale, *: clean the views of attributes and values

* = point_of_sale, sale_management, sale_product_configurator, stock,
    website_sale, website_sale_comparison, website_sale_wishlist

- Remove Attribute Values menu to ease onboarding because everything can be done
  more cleanly through Attributes menu.
- Remove unwanted new lines from help texts.
- Hide color fields when attribute type is not color.
- Move Attribute "Related Products" into a tab because it is less important than
  the rest of fields.

The opportunity is also taken to rename the `type` field of `product.attribute`
to `display_type` to better convey its meaning.

task-2058142

closes odoo/odoo#36313

Signed-off-by: SÃ©bastien Theys (seb) <seb@odoo.com>

================================= pseudo patch: =================================

--- a/addons/sale/models/product_product.py
+++ b/addons/sale/models/product_product.py
@@ -59,11 +59,10 @@ class ProductProduct(models.Model):
 class ProductAttribute(models.Model):
     _inherit = "product.attribute"
 
-    # YTI FIX ME: PLEASE RENAME ME INTO attribute_type
-    type = fields.Selection([
+    display_type = fields.Selection([
         ('radio', 'Radio'),
         ('select', 'Select'),
-        ('color', 'Color')], default='radio', required=True)
+        ('color', 'Color')], default='radio', required=True, help="The display type used in the Product Configurator.")
 
 
 class ProductAttributeValue(models.Model):
@@ -71,10 +70,9 @@ class ProductAttributeValue(models.Model):
 
     is_custom = fields.Boolean('Is custom value', help="Allow users to input custom values for this attribute value")
     html_color = fields.Char(
-        string='HTML Color Index',
-        help="""Here you can set a
-        specific HTML color index (e.g. #ff0000) to display the color if the
-        attribute type is 'Color'.""")
+        string='Color',
+        help="Here you can set a specific HTML color index (e.g. #ff0000) to display the color if the attribute type is 'Color'.")
+    display_type = fields.Selection(related='attribute_id.display_type', readonly=True)
 
 
 class ProductTemplateAttributeValue(models.Model):
@@ -82,6 +80,7 @@ class ProductTemplateAttributeValue(models.Model):
 
     html_color = fields.Char('HTML Color Index', related="product_attribute_value_id.html_color")
     is_custom = fields.Boolean('Is custom value', related="product_attribute_value_id.is_custom")
+    display_type = fields.Selection(related='product_attribute_value_id.display_type', readonly=True)
 
 
 class ProductAttributeCustomValue(models.Model):
