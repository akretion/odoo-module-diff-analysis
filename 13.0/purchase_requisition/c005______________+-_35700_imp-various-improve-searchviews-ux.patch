PR: https://github.com/odoo/odoo/pull/35700

From: 9a0fedfc657a71cd79aad03b562d6bc1b762422d
From: lbs-odoo
Date: 2019-08-16 13:35:21

Structural Changes: 5
Total Changes: 5

[IMP] various: improve searchviews UX

Improve searchviews UX in all the modules

TaskID: 2029731

closes odoo/odoo#35700

Signed-off-by: Yannick Tivisse (yti) <yti@odoo.com>

================================= pseudo patch: =================================

--- a/addons/purchase_requisition/models/purchase_requisition.py
+++ b/addons/purchase_requisition/models/purchase_requisition.py
@@ -45,7 +45,7 @@ class PurchaseRequisition(models.Model):
     def _get_type_id(self):
         return self.env['purchase.requisition.type'].search([], limit=1)
 
-    name = fields.Char(string='Agreement Reference', required=True, copy=False, default='New', readonly=True)
+    name = fields.Char(string='Reference', required=True, copy=False, default='New', readonly=True)
     origin = fields.Char(string='Source Document')
     order_count = fields.Integer(compute='_compute_orders_number', string='Number of Orders')
     vendor_id = fields.Many2one('res.partner', string="Vendor", domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]")
@@ -53,11 +53,12 @@ class PurchaseRequisition(models.Model):
     ordering_date = fields.Date(string="Ordering Date", tracking=True)
     date_end = fields.Datetime(string='Agreement Deadline', tracking=True)
     schedule_date = fields.Date(string='Delivery Date', index=True, help="The expected and scheduled delivery date where all the products are received", tracking=True)
-    user_id = fields.Many2one('res.users', string='Purchase Representative', default= lambda self: self.env.user)
+    user_id = fields.Many2one('res.users', string='Purchase Representative', default=lambda self: self.env.user)
     description = fields.Text()
     company_id = fields.Many2one('res.company', string='Company', required=True, default=lambda self: self.env.company)
     purchase_ids = fields.One2many('purchase.order', 'requisition_id', string='Purchase Orders', states={'done': [('readonly', True)]})
     line_ids = fields.One2many('purchase.requisition.line', 'requisition_id', string='Products to Purchase', states={'done': [('readonly', True)]}, copy=True)
+    product_id = fields.Many2one('product.product', related='line_ids.product_id', string='Product', readonly=False)
     state = fields.Selection(PURCHASE_REQUISITION_STATES,
                               'Status', tracking=True, required=True,
                               copy=False, default='draft')
