PR: https://github.com/odoo/odoo/pull/34180

From: e9d989827686d1089c1ea1c9a6b47b62a09e2de4
From: Kevin Baptiste
Date: 2019-07-18 10:27:50

Structural Changes: 5
Total Changes: 10

[IMP] hr: Review the UX for 'My Profile' view

1/ web: adapt formatDate to handle NaN values
DashboardRenderer might return NaN for `Date` or `DateTime` fields if
their original value is null or incorrect.

2/ hr: add job_title in demo data

3/ hr_recruitment: link employee in the chatter for new recruits

4/ hr: remove employee documents in the model

5/ hr_attendance: improve resiliency of relative_time

6/ hr: display manager on res_users

7/ hr: change Address Book to Employee Directory

TaskID: 2009111

closes odoo/odoo#34180

Signed-off-by: Yannick Tivisse (yti) <yti@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr_holidays/models/hr_employee.py
+++ b/addons/hr_holidays/models/hr_employee.py
@@ -15,7 +15,7 @@ class HrEmployeeBase(models.AbstractModel):
         return [('groups_id', 'in', group.ids)] if group else []
 
     leave_manager_id = fields.Many2one(
-        'res.users', string='Time Off Responsible',
+        'res.users', string='Time Off',
         domain=_group_hr_user_domain,
         help="User responsible of leaves approval. Should be Team Leader or Department Manager.")
     remaining_leaves = fields.Float(
@@ -39,6 +39,8 @@ class HrEmployeeBase(models.AbstractModel):
     allocation_used_count = fields.Float('Total number of days off used', compute='_compute_total_allocation_used')
     show_leaves = fields.Boolean('Able to see Remaining Time Off', compute='_compute_show_leaves')
     is_absent = fields.Boolean('Absent Today', compute='_compute_leave_status', search='_search_absent_employee')
+    allocation_display = fields.Char(compute='_compute_allocation_count')
+    allocation_used_display = fields.Char(compute='_compute_total_allocation_used')
 
     def _get_date_start_work(self):
         return self.create_date
@@ -86,10 +88,12 @@ class HrEmployeeBase(models.AbstractModel):
                     ('date_to', '>=', datetime.date.today()),
             ])
             employee.allocation_count = sum(allocations.mapped('number_of_days'))
+            employee.allocation_display = "%g" % employee.allocation_count
 
     def _compute_total_allocation_used(self):
         for employee in self:
             employee.allocation_used_count = employee.allocation_count - employee.remaining_leaves
+            employee.allocation_used_display = "%g" % employee.allocation_used_count
 
     def _compute_presence_state(self):
         super()._compute_presence_state()

--- a/addons/hr_holidays/models/res_users.py
+++ b/addons/hr_holidays/models/res_users.py
@@ -13,6 +13,8 @@ class User(models.Model):
     allocation_count = fields.Float(related='employee_id.allocation_count')
     leave_date_to = fields.Date(related='employee_id.leave_date_to')
     is_absent = fields.Boolean(related='employee_id.is_absent')
+    allocation_used_display = fields.Char(related='employee_id.allocation_used_display')
+    allocation_display = fields.Char(related='employee_id.allocation_display')
 
     def __init__(self, pool, cr):
         """ Override of __init__ to add access rights.
@@ -27,6 +29,8 @@ class User(models.Model):
             'allocation_count',
             'leave_date_to',
             'is_absent',
+            'allocation_used_display',
+            'allocation_display',
         ]
         init_res = super(User, self).__init__(pool, cr)
         # duplicate list to avoid modifying the original reference
