PR: https://github.com/odoo/odoo/pull/

From: 3912beff314c8d55f48a44c946e6a625f78a6a8d
From: Kinjal Mehta
Date: 2016-08-22 10:48:56

Structural Changes: 4
Total Changes: 35

[MOVE] hr_recruitment_survey: Make a bridge module with survey related code

==============
Specifications
==============

Add an option in the settings to use the surveys or not
By default : do not use interview forms.
If the option is false : on the job application, hide the Interview form field

================================= pseudo patch: =================================

--- a/addons/hr_recruitment/models/hr_job.py
+++ b/addons/hr_recruitment/models/hr_job.py
@@ -22,9 +22,6 @@ class Job(models.Model):
     user_id = fields.Many2one('res.users', "Recruitment Responsible", track_visibility='onchange')
     document_ids = fields.One2many('ir.attachment', compute='_compute_document_ids', string="Applications")
     documents_count = fields.Integer(compute='_compute_document_ids', string="Documents")
-    survey_id = fields.Many2one(
-        'survey.survey', "Interview Form",
-        help="Choose an interview form for this job position and you will be able to print/answer this interview from all applicants who apply for this job")
     alias_id = fields.Many2one(
         'mail.alias', "Alias", ondelete="restrict", required=True,
         help="Email alias for this job position. New emails will automatically create new applicants for this job position.")
@@ -73,10 +70,6 @@ class Job(models.Model):
             return 'hr_recruitment.mt_job_new'
         return super(Job, self)._track_subtype(init_values)
 
-    @api.multi
-    def action_print_survey(self):
-        return self.survey_id.action_print_survey()
-
     @api.multi
     def action_get_attachment_tree_view(self):
         action = self.env.ref('base.action_attachment').read()[0]

--- a/addons/hr_recruitment/models/hr_recruitment.py
+++ b/addons/hr_recruitment/models/hr_recruitment.py
@@ -148,8 +148,6 @@ class Applicant(models.Model):
     partner_mobile = fields.Char("Mobile", size=32)
     type_id = fields.Many2one('hr.recruitment.degree', "Degree")
     department_id = fields.Many2one('hr.department', "Department")
-    survey = fields.Many2one('survey.survey', related='job_id.survey_id', string="Survey")  # TDE FIXME: rename to survey_id
-    response_id = fields.Many2one('survey.user_input', "Response", ondelete="set null", oldname="response")
     reference = fields.Char("Referred By")
     day_open = fields.Float(compute='_compute_day', string="Days to Open")
     day_close = fields.Float(compute='_compute_day', string="Days to Close")
@@ -323,27 +321,6 @@ class Applicant(models.Model):
         }
         return res
 
-    @api.multi
-    def action_start_survey(self):
-        self.ensure_one()
-        # create a response and link it to this applicant
-        if not self.response_id:
-            response = self.env['survey.user_input'].create({'survey_id': self.survey.id, 'partner_id': self.partner_id.id})
-            self.response_id = response.id
-        else:
-            response = self.response_id
-        # grab the token of the response and start surveying
-        return self.survey.with_context(survey_token=response.token).action_start_survey()
-
-    @api.multi
-    def action_print_survey(self):
-        """ If response is available then print this response otherwise print survey form (print template of the survey) """
-        self.ensure_one()
-        if not self.response_id:
-            return self.survey.action_print_survey()
-        else:
-            response = self.response_id
-            return self.survey.with_context(survey_token=response.token).action_print_survey()
 
     @api.multi
     def action_get_attachment_tree_view(self):

--- a/addons/hr_recruitment/models/hr_recruitment_config_settings.py
+++ b/addons/hr_recruitment/models/hr_recruitment_config_settings.py
@@ -12,3 +12,8 @@ class RecruitmentSettings(models.TransientModel):
         (0, "Do not manage CVs and motivation letter"),
         (1, 'Allow the automatic indexation of resumes')
         ], string='Resumes')
+
+    module_hr_recruitment_survey = fields.Selection(selection=[
+        (0, "Do not use interview forms"),
+        (1, "Use interview forms during the recruitment process")
+        ], string='Interview Form')
