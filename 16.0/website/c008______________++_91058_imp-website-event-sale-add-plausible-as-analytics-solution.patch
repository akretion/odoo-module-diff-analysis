PR: https://github.com/odoo/odoo/pull/91058

From: cccd6eb01dfca898c75e82550e1960065852bf6e
From: Jeremy Kersten
Date: 2022-05-18 18:33:34

Structural Changes: 5
Total Changes: 58

[IMP] website[_event,_sale]: add plausible as Analytics solution

This commit add the way to specify the Plausible shared key auth token and
the plausible domain on your website to have the Plausible Dashboard integrated
in your Website > Dashboard > Analytics menu.

Some custom event are already pre-configured as:

Push an event 'Shop' on confirmation on ecommerce (with amount bucket +/- 50)
Push an event 'Lead Generation' on:
    'Thank you' page of contactus
    Confirmation of subscription for an event

From this way, the end user can just add a goal 'Lead Generation'
or 'Shop' on Plausible to have the Goal values visible.

closes odoo/odoo#91058

Related: odoo/documentation#2007
Signed-off-by: Romain Derie (rde) <rde@odoo.com>

================================= pseudo patch: =================================

--- a/addons/website/models/res_config_settings.py
+++ b/addons/website/models/res_config_settings.py
@@ -6,6 +6,8 @@ from odoo import api, fields, models
 from odoo.exceptions import UserError
 from odoo.tools.translate import _
 
+from werkzeug import urls
+
 
 class ResConfigSettings(models.TransientModel):
     _inherit = 'res.config.settings'
@@ -74,7 +76,14 @@ class ResConfigSettings(models.TransientModel):
         'Google Search Console',
         related='website_id.google_search_console',
         readonly=False)
-
+    plausible_shared_key = fields.Char(
+        'Plausible auth Key',
+        related='website_id.plausible_shared_key',
+        readonly=False)
+    plausible_site = fields.Char(
+        'Plausible Site (e.g. domain.com)',
+        related='website_id.plausible_site',
+        readonly=False)
     cdn_activated = fields.Boolean(
         related='website_id.cdn_activated',
         readonly=False)
@@ -118,6 +127,10 @@ class ResConfigSettings(models.TransientModel):
         "Use a image by default for sharing",
         compute='_compute_has_default_share_image',
         inverse='_inverse_has_default_share_image')
+    has_plausible_shared_key = fields.Boolean(
+        "Plausible Analytics",
+        compute='_compute_has_plausible_shared_key',
+        inverse='_inverse_has_plausible_shared_key')
     module_website_livechat = fields.Boolean()
     module_marketing_automation = fields.Boolean()
 
@@ -126,6 +139,18 @@ class ResConfigSettings(models.TransientModel):
         for config in self:
             config.shared_user_account = not config.website_id.specific_user_account
 
+    @api.onchange('plausible_shared_key')
+    def _onchange_shared_key(self):
+        for config in self:
+            value = config.plausible_shared_key
+            if value and value.startswith('http'):
+                try:
+                    url = urls.url_parse(value)
+                    config.plausible_shared_key = urls.url_decode(url.query).get('auth', '')
+                    config.plausible_site = url.path.split('/')[-1]
+                except Exception:  # noqa
+                    pass
+
     def _inverse_shared_user_account(self):
         for config in self:
             config.website_id.specific_user_account = not config.shared_user_account
@@ -141,6 +166,18 @@ class ResConfigSettings(models.TransientModel):
         for config in self:
             config.website_id.auth_signup_uninvited = config.auth_signup_uninvited
 
+    @api.depends('website_id')
+    def _compute_has_plausible_shared_key(self):
+        for config in self:
+            config.has_plausible_shared_key = bool(config.plausible_shared_key)
+
+    def _inverse_has_plausible_shared_key(self):
+        for config in self:
+            if config.has_plausible_shared_key:
+                continue
+            config.plausible_shared_key = False
+            config.plausible_site = False
+
     @api.depends('website_id')
     def _compute_has_google_analytics(self):
         for config in self:

--- a/addons/website/models/website.py
+++ b/addons/website/models/website.py
@@ -113,6 +113,9 @@ class Website(models.Model):
 
     google_maps_api_key = fields.Char('Google Maps API Key')
 
+    plausible_shared_key = fields.Char()
+    plausible_site = fields.Char()
+
     user_id = fields.Many2one('res.users', string='Public User', required=True)
     cdn_activated = fields.Boolean('Content Delivery Network (CDN)')
     cdn_url = fields.Char('CDN Base URL', default='')
@@ -731,6 +734,22 @@ class Website(models.Model):
             page_temp = page_url + (inc and "-%s" % inc or "")
         return page_temp
 
+    def _get_plausible_script_url(self):
+        return self.env['ir.config_parameter'].sudo().get_param(
+            'website.plausible_script',
+            'https://plausible.io/js/plausible.js'
+        )
+
+    def _get_plausible_server(self):
+        return self.env['ir.config_parameter'].sudo().get_param(
+            'website.plausible_server',
+            'https://plausible.io'
+        )
+
+    def _get_plausible_share_url(self):
+        embed_url = f'/share/{self.plausible_site}?auth={self.plausible_shared_key}&embed=true&theme=system'
+        return self.plausible_shared_key and urls.url_join(self._get_plausible_server(), embed_url) or ''
+
     def get_unique_key(self, string, template_module=False):
         """ Given a string, return an unique key including module prefix.
             It will be suffixed by a counter if it already exists to garantee uniqueness.
