PR: https://github.com/odoo/odoo/pull/103097

From: b8dca3b174e27dada6d15dcbe4dfe76c829109c7
From: gawa-odoo
Date: 2022-10-17 08:11:09

Structural Changes: 3
Total Changes: 34

[IMP] analytic, *: Json field for analytic distribution

The `analytic_distribution` field is a Json.
It was stored temporarily as a char.

Search is not available yet, so we do queries by hand when we need to search on keys.

Also added a constraint on account_analytic_distribution_model,
so we don't have models with accounts specific to a company when the model has no company or another company.
It would cause an issue when looking at the models from another company.

X-original-commit: 7064c95aa04e5138bb12ae97acfee04ebb67cc0e
Part-of: odoo/odoo#103097

================================= pseudo patch: =================================

--- a/addons/account/models/account_analytic_account.py
+++ b/addons/account/models/account_analytic_account.py
@@ -41,10 +41,16 @@ class AccountAnalyticAccount(models.Model):
 
     def action_view_invoice(self):
         self.ensure_one()
+        query = self.env['account.move.line']._search([('move_id.move_type', 'in', self.env['account.move'].get_sale_types())])
+        query.order = None
+        query.add_where('analytic_distribution ? %s', [str(self.id)])
+        query_string, query_param = query.select('DISTINCT move_id')
+        self._cr.execute(query_string, query_param)
+        move_ids = [line.get('move_id') for line in self._cr.dictfetchall()]
         result = {
             "type": "ir.actions.act_window",
             "res_model": "account.move",
-            "domain": [('line_ids.analytic_distribution_stored_char', '=ilike', f'%"{self.id}":%'), ('move_type', 'in', self.env['account.move'].get_sale_types())],
+            "domain": [('id', 'in', move_ids)],
             "context": {"create": False},
             "name": "Customer Invoices",
             'view_mode': 'tree,form',
@@ -53,10 +59,16 @@ class AccountAnalyticAccount(models.Model):
 
     def action_view_vendor_bill(self):
         self.ensure_one()
+        query = self.env['account.move.line']._search([('move_id.move_type', 'in', self.env['account.move'].get_purchase_types())])
+        query.order = None
+        query.add_where('analytic_distribution ? %s', [str(self.id)])
+        query_string, query_param = query.select('DISTINCT move_id')
+        self._cr.execute(query_string, query_param)
+        move_ids = [line.get('move_id') for line in self._cr.dictfetchall()]
         result = {
             "type": "ir.actions.act_window",
             "res_model": "account.move",
-            "domain": [('line_ids.analytic_distribution_stored_char', '=ilike', f'%"{self.id}":%'), ('move_type', 'in', self.env['account.move'].get_purchase_types())],
+            "domain": [('id', 'in', move_ids)],
             "context": {"create": False},
             "name": "Vendor Bills",
             'view_mode': 'tree,form',

--- a/addons/account/models/account_move_line.py
+++ b/addons/account/models/account_move_line.py
@@ -15,7 +15,7 @@ INTEGRITY_HASH_LINE_FIELDS = ('debit', 'credit', 'account_id', 'partner_id')
 
 class AccountMoveLine(models.Model):
     _name = "account.move.line"
-    _inherit = 'analytic.mixin'
+    _inherit = "analytic.mixin"
     _description = "Journal Item"
     _order = "date desc, move_name desc, sequence, id"
     _check_company_auto = True
@@ -352,6 +352,9 @@ class AccountMoveLine(models.Model):
         comodel_name='account.analytic.line', inverse_name='move_line_id',
         string='Analytic lines',
     )
+    analytic_distribution = fields.Json(
+        inverse="_inverse_analytic_distribution",
+    ) # add the inverse function used to trigger the creation/update of the analytic lines accordingly (field originally defined in the analytic mixin)
 
     # === Early Pay fields === #
     discount_date = fields.Date(
@@ -1071,10 +1074,10 @@ class AccountMoveLine(models.Model):
                 line.term_key = False
 
     @api.depends('account_id', 'partner_id', 'product_id')
-    def _compute_analytic_distribution_stored_char(self):
+    def _compute_analytic_distribution(self):
         for line in self:
             if line.display_type == 'product' or not line.move_id.is_invoice(include_receipts=True):
-                distribution = self.env['account.analytic.distribution.model']._get_distributionjson({
+                distribution = self.env['account.analytic.distribution.model']._get_distribution({
                     "product_id": line.product_id.id,
                     "product_categ_id": line.product_id.categ_id.id,
                     "partner_id": line.partner_id.id,
@@ -1082,8 +1085,7 @@ class AccountMoveLine(models.Model):
                     "account_prefix": line.account_id.code,
                     "company_id": line.company_id.id,
                 })
-                line.analytic_distribution_stored_char = distribution or line.analytic_distribution_stored_char
-            line._compute_analytic_distribution()
+                line.analytic_distribution = distribution or line.analytic_distribution
 
     # -------------------------------------------------------------------------
     # INVERSE METHODS
@@ -1125,7 +1127,6 @@ class AccountMoveLine(models.Model):
     @api.onchange('analytic_distribution')
     def _inverse_analytic_distribution(self):
         """ Unlink and recreate analytic_lines when modifying the distribution."""
-        super()._inverse_analytic_distribution()
         lines_to_modify = self.env['account.move.line'].browse([
             line.id for line in self if line.parent_state == "posted"
         ])
@@ -2365,7 +2366,6 @@ class AccountMoveLine(models.Model):
     def _prepare_analytic_lines(self):
         self.ensure_one()
         analytic_line_vals = []
-        self._compute_analytic_distribution()
         if self.analytic_distribution:
             # distribution_on_each_plan corresponds to the proportion that is distributed to each plan to be able to
             # give the real amount when we achieve a 100% distribution

--- a/addons/account/models/account_move_line_tax_details.py
+++ b/addons/account/models/account_move_line_tax_details.py
@@ -182,8 +182,8 @@ class AccountMoveLine(models.Model):
                     )
                     AND (
                         NOT tax.analytic
-                        OR (base_line.analytic_distribution_stored_char IS NULL AND account_move_line.analytic_distribution_stored_char IS NULL)
-                        OR base_line.analytic_distribution_stored_char = account_move_line.analytic_distribution_stored_char
+                        OR (base_line.analytic_distribution IS NULL AND account_move_line.analytic_distribution IS NULL)
+                        OR base_line.analytic_distribution = account_move_line.analytic_distribution
                     )
                 LEFT JOIN affecting_base_tax_ids tax_line_tax_ids ON tax_line_tax_ids.id = account_move_line.id
                 JOIN affecting_base_tax_ids base_line_tax_ids ON base_line_tax_ids.id = base_line.id
