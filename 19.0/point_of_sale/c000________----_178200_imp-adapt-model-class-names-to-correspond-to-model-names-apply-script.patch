PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:16 + add:0, change matches:
-    _inherit = 'account.bank.statement.line'
-    _inherit = 'account.journal'
-    _inherit = 'account.move'
-    _inherit = 'account.move.line'
-    _inherit = 'account.payment'
-    _inherit = 'barcode.rule'
-    _inherit = 'digest.digest'
-    _inherit = 'mail.compose.message'
-    _inherit = 'procurement.group'
-    _inherit = 'product.template'
-    _inherit = 'res.config.settings'
-    _inherit = 'res.users'
-    _inherit = 'procurement.group'
-    _inherit = 'stock.move'
-    _inherit = 'stock.rule'
-    _inherit = "stock.warehouse"

Total Changes: 126

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/point_of_sale/models/account_bank_statement.py
+++ b/addons/point_of_sale/models/account_bank_statement.py
@@ -6,6 +6,6 @@ from odoo.exceptions import UserError
 
 
 class AccountBankStatementLine(models.Model):
-    _inherit = 'account.bank.statement.line'
+    _inherit = ['account.bank.statement.line']
 
     pos_session_id = fields.Many2one('pos.session', string="Session", copy=False)

--- a/addons/point_of_sale/models/account_fiscal_position.py
+++ b/addons/point_of_sale/models/account_fiscal_position.py
@@ -2,7 +2,6 @@ from odoo import models, api
 
 
 class AccountFiscalPosition(models.Model):
-    _name = 'account.fiscal.position'
     _inherit = ['account.fiscal.position', 'pos.load.mixin']
 
     @api.model

--- a/addons/point_of_sale/models/account_fiscal_position_tax.py
+++ b/addons/point_of_sale/models/account_fiscal_position_tax.py
@@ -2,7 +2,6 @@ from odoo import models, api
 
 
 class AccountFiscalPositionTax(models.Model):
-    _name = 'account.fiscal.position.tax'
     _inherit = ['account.fiscal.position.tax', 'pos.load.mixin']
 
     @api.model

--- a/addons/point_of_sale/models/account_journal.py
+++ b/addons/point_of_sale/models/account_journal.py
@@ -4,8 +4,9 @@
 from odoo import fields, models, api, _
 from odoo.exceptions import ValidationError
 
+
 class AccountJournal(models.Model):
-    _inherit = 'account.journal'
+    _inherit = ['account.journal']
 
     pos_payment_method_ids = fields.One2many('pos.payment.method', 'journal_id', string='Point of Sale Payment Methods')
 

--- a/addons/point_of_sale/models/account_move.py
+++ b/addons/point_of_sale/models/account_move.py
@@ -5,7 +5,7 @@ from odoo import fields, models, api
 
 
 class AccountMove(models.Model):
-    _inherit = 'account.move'
+    _inherit = ['account.move']
 
     pos_order_ids = fields.One2many('pos.order', 'account_move')
     pos_payment_ids = fields.One2many('pos.payment', 'account_move_id')
@@ -70,7 +70,7 @@ class AccountMove(models.Model):
 
 
 class AccountMoveLine(models.Model):
-    _inherit = 'account.move.line'
+    _inherit = ['account.move.line']
 
     def _stock_account_get_anglo_saxon_price_unit(self):
         self.ensure_one()

--- a/addons/point_of_sale/models/account_payment.py
+++ b/addons/point_of_sale/models/account_payment.py
@@ -5,7 +5,7 @@ from odoo import models, fields, api
 
 
 class AccountPayment(models.Model):
-    _inherit = 'account.payment'
+    _inherit = ['account.payment']
 
     pos_payment_method_id = fields.Many2one('pos.payment.method', "POS Payment Method")
     force_outstanding_account_id = fields.Many2one("account.account", "Forced Outstanding Account", check_company=True)

--- a/addons/point_of_sale/models/account_tax.py
+++ b/addons/point_of_sale/models/account_tax.py
@@ -6,7 +6,6 @@ from odoo.tools import split_every
 
 
 class AccountTax(models.Model):
-    _name = 'account.tax'
     _inherit = ['account.tax', 'pos.load.mixin']
 
     def write(self, vals):

--- a/addons/point_of_sale/models/account_tax_group.py
+++ b/addons/point_of_sale/models/account_tax_group.py
@@ -2,7 +2,6 @@ from odoo import api, models
 
 
 class AccountTaxGroup(models.Model):
-    _name = 'account.tax.group'
     _inherit = ['account.tax.group', 'pos.load.mixin']
 
     @api.model

--- a/addons/point_of_sale/models/barcode_rule.py
+++ b/addons/point_of_sale/models/barcode_rule.py
@@ -6,7 +6,7 @@ from odoo.tools.translate import _
 
 
 class BarcodeRule(models.Model):
-    _inherit = 'barcode.rule'
+    _inherit = ['barcode.rule']
 
     type = fields.Selection(selection_add=[
         ('weight', 'Weighted Product'),

--- a/addons/point_of_sale/models/decimal_precision.py
+++ b/addons/point_of_sale/models/decimal_precision.py
@@ -2,7 +2,6 @@ from odoo import models, api
 
 
 class DecimalPrecision(models.Model):
-    _name = 'decimal.precision'
     _inherit = ['decimal.precision', 'pos.load.mixin']
 
     @api.model

--- a/addons/point_of_sale/models/digest.py
+++ b/addons/point_of_sale/models/digest.py
@@ -5,8 +5,8 @@ from odoo import fields, models, _
 from odoo.exceptions import AccessError
 
 
-class Digest(models.Model):
-    _inherit = 'digest.digest'
+class DigestDigest(models.Model):
+    _inherit = ['digest.digest']
 
     kpi_pos_total = fields.Boolean('POS Sales')
     kpi_pos_total_value = fields.Monetary(compute='_compute_kpi_pos_total_value')
@@ -24,6 +24,6 @@ class Digest(models.Model):
         )
 
     def _compute_kpis_actions(self, company, user):
-        res = super(Digest, self)._compute_kpis_actions(company, user)
+        res = super()._compute_kpis_actions(company, user)
         res['kpi_pos_total'] = 'point_of_sale.action_pos_sale_graph&menu_id=%s' % self.env.ref('point_of_sale.menu_point_root').id
         return res

--- a/addons/point_of_sale/models/ir_binary.py
+++ b/addons/point_of_sale/models/ir_binary.py
@@ -2,7 +2,7 @@ from odoo import models
 
 
 class IrBinary(models.AbstractModel):
-    _inherit = "ir.binary"
+    _inherit = ["ir.binary"]
 
     def _find_record_check_access(self, record, access_token, field):
         if record._name == "product.product" and field == "image_128":

--- a/addons/point_of_sale/models/ir_ui_view.py
+++ b/addons/point_of_sale/models/ir_ui_view.py
@@ -2,7 +2,6 @@ from odoo import models, api
 
 
 class IrUiView(models.Model):
-    _name = 'ir.ui.view'
     _inherit = ['ir.ui.view', 'pos.load.mixin']
 
     @api.model

--- a/addons/point_of_sale/models/mail_compose_message.py
+++ b/addons/point_of_sale/models/mail_compose_message.py
@@ -1,8 +1,8 @@
 from odoo import models, _
 
 
-class MailComposer(models.TransientModel):
-    _inherit = 'mail.compose.message'
+class MailComposeMessage(models.TransientModel):
+    _inherit = ['mail.compose.message']
 
     def action_send_mail(self):
         res = super().action_send_mail()

--- a/addons/point_of_sale/models/pos_bill.py
+++ b/addons/point_of_sale/models/pos_bill.py
@@ -3,8 +3,7 @@ from odoo.exceptions import UserError
 from odoo.osv.expression import OR
 
 
-class Bill(models.Model):
-    _name = "pos.bill"
+class PosBill(models.Model):
     _order = "value"
     _description = "Coins/Bills"
     _inherit = ["pos.load.mixin"]

--- a/addons/point_of_sale/models/pos_bus_mixin.py
+++ b/addons/point_of_sale/models/pos_bus_mixin.py
@@ -3,8 +3,8 @@
 import uuid
 from odoo import fields, models, api
 
+
 class PosBusMixin(models.AbstractModel):
-    _name = "pos.bus.mixin"
     _description = "Bus Mixin"
 
     access_token = fields.Char('Security Token', copy=False)

--- a/addons/point_of_sale/models/pos_category.py
+++ b/addons/point_of_sale/models/pos_category.py
@@ -9,7 +9,6 @@ from odoo.exceptions import ValidationError, UserError
 
 
 class PosCategory(models.Model):
-    _name = "pos.category"
     _description = "Point of Sale Category"
     _inherit = ['pos.load.mixin']
     _order = "sequence, name"

--- a/addons/point_of_sale/models/pos_config.py
+++ b/addons/point_of_sale/models/pos_config.py
@@ -13,7 +13,6 @@ from odoo.tools import convert, SQL
 
 
 class PosConfig(models.Model):
-    _name = 'pos.config'
     _inherit = ['pos.bus.mixin', 'pos.load.mixin']
     _description = 'Point of Sale Configuration'
     _check_company_auto = True

--- a/addons/point_of_sale/models/pos_load_mixin.py
+++ b/addons/point_of_sale/models/pos_load_mixin.py
@@ -3,7 +3,6 @@ from odoo import models, api
 
 
 class PosLoadMixin(models.AbstractModel):
-    _name = "pos.load.mixin"
     _description = "PoS data loading mixin"
 
     @api.model

--- a/addons/point_of_sale/models/pos_note.py
+++ b/addons/point_of_sale/models/pos_note.py
@@ -4,7 +4,6 @@ from odoo import fields, models, api
 
 
 class PosNote(models.Model):
-    _name = 'pos.note'
     _description = 'PoS Note'
     _inherit = ['pos.load.mixin']
 

--- a/addons/point_of_sale/models/pos_order.py
+++ b/addons/point_of_sale/models/pos_order.py
@@ -20,7 +20,6 @@ _logger = logging.getLogger(__name__)
 
 
 class PosOrder(models.Model):
-    _name = "pos.order"
     _inherit = ["portal.mixin", "pos.bus.mixin", "pos.load.mixin", "mail.thread"]
     _description = "Point of Sale Orders"
     _order = "date_order desc, name desc, id desc"
@@ -1143,10 +1142,10 @@ class PosOrder(models.Model):
                 order._prepare_refund_values(current_session)
             )
             for line in order.lines:
-                PosOrderLineLot = self.env['pos.pack.operation.lot']
+                PosPackOperationLot = self.env['pos.pack.operation.lot']
                 for pack_lot in line.pack_lot_ids:
-                    PosOrderLineLot += pack_lot.copy()
-                line.copy(line._prepare_refund_data(refund_order, PosOrderLineLot))
+                    PosPackOperationLot += pack_lot.copy()
+                line.copy(line._prepare_refund_data(refund_order, PosPackOperationLot))
             refund_orders |= refund_order
         return refund_orders
 
@@ -1270,8 +1269,8 @@ class PosOrder(models.Model):
     def _post_chatter_message(self, body):
         self.message_post(body=body)
 
+
 class PosOrderLine(models.Model):
-    _name = "pos.order.line"
     _description = "Point of Sale Order Lines"
     _rec_name = "product_id"
     _inherit = ['pos.load.mixin']
@@ -1343,15 +1342,15 @@ class PosOrderLine(models.Model):
         for orderline in self:
             orderline.refunded_qty = -sum(orderline.mapped('refund_orderline_ids.qty'))
 
-    def _prepare_refund_data(self, refund_order, PosOrderLineLot):
+    def _prepare_refund_data(self, refund_order, PosPackOperationLot):
         """
         This prepares data for refund order line. Inheritance may inject more data here
 
         @param refund_order: the pre-created refund order
         @type refund_order: pos.order
 
-        @param PosOrderLineLot: the pre-created Pack operation Lot
-        @type PosOrderLineLot: pos.pack.operation.lot
+        @param PosPackOperationLot: the pre-created Pack operation Lot
+        @type PosPackOperationLot: pos.pack.operation.lot
 
         @return: dictionary of data which is for creating a refund order line from the original line
         @rtype: dict
@@ -1363,7 +1362,7 @@ class PosOrderLine(models.Model):
             'order_id': refund_order.id,
             'price_subtotal': -self.price_subtotal,
             'price_subtotal_incl': -self.price_subtotal_incl,
-            'pack_lot_ids': PosOrderLineLot,
+            'pack_lot_ids': PosPackOperationLot,
             'is_total_cost_computed': False,
             'refunded_orderline_id': self.id,
         }
@@ -1637,8 +1636,7 @@ class PosOrderLine(models.Model):
         return original_price - self.price_subtotal_incl
 
 
-class PosOrderLineLot(models.Model):
-    _name = "pos.pack.operation.lot"
+class PosPackOperationLot(models.Model):
     _description = "Specify product lot/serial number in pos order line"
     _rec_name = "lot_name"
     _inherit = ['pos.load.mixin']
@@ -1656,8 +1654,8 @@ class PosOrderLineLot(models.Model):
     def _load_pos_data_fields(self, config_id):
         return ['lot_name', 'pos_order_line_id']
 
+
 class AccountCashRounding(models.Model):
-    _name = 'account.cash.rounding'
     _inherit = ['account.cash.rounding', 'pos.load.mixin']
 
     @api.constrains('rounding', 'rounding_method', 'strategy')

--- a/addons/point_of_sale/models/pos_payment.py
+++ b/addons/point_of_sale/models/pos_payment.py
@@ -12,7 +12,6 @@ class PosPayment(models.Model):
     `payment_method_id`.
     """
 
-    _name = "pos.payment"
     _description = "Point of Sale Payments"
     _order = "id desc"
     _inherit = ['pos.load.mixin']

--- a/addons/point_of_sale/models/pos_payment_method.py
+++ b/addons/point_of_sale/models/pos_payment_method.py
@@ -3,7 +3,6 @@ from odoo.exceptions import UserError, ValidationError
 
 
 class PosPaymentMethod(models.Model):
-    _name = "pos.payment.method"
     _description = "Point of Sale Payment Methods"
     _order = "sequence, id"
     _inherit = ['pos.load.mixin']

--- a/addons/point_of_sale/models/pos_printer.py
+++ b/addons/point_of_sale/models/pos_printer.py
@@ -3,9 +3,9 @@
 
 from odoo import fields, models, api
 
+
 class PosPrinter(models.Model):
 
-    _name = 'pos.printer'
     _description = 'Point of Sale Printer'
     _inherit = ['pos.load.mixin']
 

--- a/addons/point_of_sale/models/pos_session.py
+++ b/addons/point_of_sale/models/pos_session.py
@@ -13,7 +13,6 @@ from odoo.osv.expression import AND
 
 
 class PosSession(models.Model):
-    _name = 'pos.session'
     _order = 'id desc'
     _description = 'Point of Sale Session'
     _inherit = ['mail.thread', 'mail.activity.mixin', "pos.bus.mixin", 'pos.load.mixin']
@@ -1872,8 +1871,9 @@ class PosSession(models.Model):
     def _get_closed_orders(self):
         return self.order_ids.filtered(lambda o: o.state not in ['draft', 'cancel'])
 
+
 class ProcurementGroup(models.Model):
-    _inherit = 'procurement.group'
+    _inherit = ['procurement.group']
 
     @api.model
     def _run_scheduler_tasks(self, use_new_cursor=False, company_id=False):

--- a/addons/point_of_sale/models/product.py
+++ b/addons/point_of_sale/models/product.py
@@ -9,7 +9,7 @@ from odoo.osv.expression import AND
 
 
 class ProductTemplate(models.Model):
-    _inherit = 'product.template'
+    _inherit = ['product.template']
 
     available_in_pos = fields.Boolean(string='Available in POS', help='Check if you want this product to appear in the Point of Sale.', default=False)
     to_weight = fields.Boolean(string='To Weigh With Scale', help="Check if the product should be weighted using the hardware scale integration.")
@@ -50,7 +50,6 @@ class ProductTemplate(models.Model):
 
 
 class ProductProduct(models.Model):
-    _name = 'product.product'
     _inherit = ['product.product', 'pos.load.mixin']
 
     @api.model
@@ -234,7 +233,6 @@ class ProductProduct(models.Model):
 
 
 class ProductAttribute(models.Model):
-    _name = 'product.attribute'
     _inherit = ['product.attribute', 'pos.load.mixin']
 
     @api.model
@@ -243,7 +241,6 @@ class ProductAttribute(models.Model):
 
 
 class ProductAttributeCustomValue(models.Model):
-    _name = 'product.attribute.custom.value'
     _inherit = ["product.attribute.custom.value", "pos.load.mixin"]
 
     pos_order_line_id = fields.Many2one('pos.order.line', string="PoS Order Line", ondelete='cascade')
@@ -258,7 +255,6 @@ class ProductAttributeCustomValue(models.Model):
 
 
 class ProductTemplateAttributeLine(models.Model):
-    _name = 'product.template.attribute.line'
     _inherit = ['product.template.attribute.line', 'pos.load.mixin']
 
     @api.model
@@ -272,7 +268,6 @@ class ProductTemplateAttributeLine(models.Model):
 
 
 class ProductTemplateAttributeValue(models.Model):
-    _name = 'product.template.attribute.value'
     _inherit = ['product.template.attribute.value', 'pos.load.mixin']
 
     @api.model
@@ -290,7 +285,6 @@ class ProductTemplateAttributeValue(models.Model):
 
 
 class ProductPackaging(models.Model):
-    _name = 'product.packaging'
     _inherit = ['product.packaging', 'pos.load.mixin']
 
     @api.model
@@ -302,8 +296,7 @@ class ProductPackaging(models.Model):
         return ['id', 'name', 'barcode', 'product_id', 'qty']
 
 
-class UomCateg(models.Model):
-    _name = 'uom.category'
+class UomCategory(models.Model):
     _inherit = ['uom.category', 'pos.load.mixin']
 
     is_pos_groupable = fields.Boolean(string='Group Products in POS',
@@ -318,8 +311,7 @@ class UomCateg(models.Model):
         return ['id', 'name', 'uom_ids']
 
 
-class Uom(models.Model):
-    _name = 'uom.uom'
+class UomUom(models.Model):
     _inherit = ['uom.uom', 'pos.load.mixin']
 
     is_pos_groupable = fields.Boolean(related='category_id.is_pos_groupable', readonly=False)
@@ -338,7 +330,6 @@ class Uom(models.Model):
 
 
 class ProductPricelist(models.Model):
-    _name = 'product.pricelist'
     _inherit = ['product.pricelist', 'pos.load.mixin']
 
     @api.model
@@ -352,7 +343,6 @@ class ProductPricelist(models.Model):
 
 
 class ProductPricelistItem(models.Model):
-    _name = 'product.pricelist.item'
     _inherit = ['product.pricelist.item', 'pos.load.mixin']
 
     @api.model
@@ -374,7 +364,6 @@ class ProductPricelistItem(models.Model):
 
 
 class ProductCategory(models.Model):
-    _name = 'product.category'
     _inherit = ['product.category', 'pos.load.mixin']
 
     @api.model

--- a/addons/point_of_sale/models/product_combo.py
+++ b/addons/point_of_sale/models/product_combo.py
@@ -4,7 +4,6 @@ from odoo import api, models
 
 
 class ProductCombo(models.Model):
-    _name = 'product.combo'
     _inherit = ['product.combo', 'pos.load.mixin']
 
     @api.model

--- a/addons/point_of_sale/models/product_combo_item.py
+++ b/addons/point_of_sale/models/product_combo_item.py
@@ -4,7 +4,6 @@ from odoo import api, models
 
 
 class ProductComboItem(models.Model):
-    _name = 'product.combo.item'
     _inherit = ['product.combo.item', 'pos.load.mixin']
 
     @api.model

--- a/addons/point_of_sale/models/report_sale_details.py
+++ b/addons/point_of_sale/models/report_sale_details.py
@@ -9,9 +9,8 @@ from odoo.osv.expression import AND
 from odoo.tools import SQL
 
 
-class ReportSaleDetails(models.AbstractModel):
+class ReportPoint_Of_SaleReport_Saledetails(models.AbstractModel):
 
-    _name = 'report.point_of_sale.report_saledetails'
     _description = 'Point of Sale Details'
 
     def _get_date_start_and_date_stop(self, date_start, date_stop):

--- a/addons/point_of_sale/models/res_company.py
+++ b/addons/point_of_sale/models/res_company.py
@@ -4,8 +4,8 @@ from odoo import api, models, fields, _
 from odoo.exceptions import ValidationError
 from odoo.osv import expression
 
+
 class ResCompany(models.Model):
-    _name = 'res.company'
     _inherit = ['res.company', 'pos.load.mixin']
 
     point_of_sale_update_stock_quantities = fields.Selection([

--- a/addons/point_of_sale/models/res_config_settings.py
+++ b/addons/point_of_sale/models/res_config_settings.py
@@ -20,7 +20,7 @@ class ResConfigSettings(models.TransientModel):
        call, not before `create` is called. Because of this, vals contains a lot of field before
        super call, then the number of fields is reduced after.
     """
-    _inherit = 'res.config.settings'
+    _inherit = ['res.config.settings']
 
     def _default_pos_config(self):
         # Default to the last modified pos.config.

--- a/addons/point_of_sale/models/res_country.py
+++ b/addons/point_of_sale/models/res_country.py
@@ -2,7 +2,6 @@ from odoo import models, api
 
 
 class ResCountry(models.Model):
-    _name = 'res.country'
     _inherit = ['res.country', 'pos.load.mixin']
 
     @api.model

--- a/addons/point_of_sale/models/res_country_state.py
+++ b/addons/point_of_sale/models/res_country_state.py
@@ -2,7 +2,6 @@ from odoo import models, api
 
 
 class ResCountryState(models.Model):
-    _name = 'res.country.state'
     _inherit = ['res.country.state', 'pos.load.mixin']
 
     @api.model

--- a/addons/point_of_sale/models/res_currency.py
+++ b/addons/point_of_sale/models/res_currency.py
@@ -2,7 +2,6 @@ from odoo import models, api
 
 
 class ResCurrency(models.Model):
-    _name = 'res.currency'
     _inherit = ['res.currency', 'pos.load.mixin']
 
     @api.model

--- a/addons/point_of_sale/models/res_lang.py
+++ b/addons/point_of_sale/models/res_lang.py
@@ -2,7 +2,6 @@ from odoo import models, api
 
 
 class ResLang(models.Model):
-    _name = 'res.lang'
     _inherit = ['res.lang', 'pos.load.mixin']
 
     @api.model

--- a/addons/point_of_sale/models/res_partner.py
+++ b/addons/point_of_sale/models/res_partner.py
@@ -3,7 +3,6 @@ from odoo import api, fields, models
 
 
 class ResPartner(models.Model):
-    _name = 'res.partner'
     _inherit = ['res.partner', 'pos.load.mixin']
 
     pos_order_count = fields.Integer(

--- a/addons/point_of_sale/models/res_users.py
+++ b/addons/point_of_sale/models/res_users.py
@@ -2,7 +2,7 @@ from odoo import models, api
 
 
 class ResUsers(models.Model):
-    _inherit = 'res.users'
+    _inherit = ['res.users']
 
     @api.model
     def _load_pos_data_domain(self, data):

--- a/addons/point_of_sale/models/stock_picking.py
+++ b/addons/point_of_sale/models/stock_picking.py
@@ -8,8 +8,9 @@ from odoo.tools import float_is_zero, float_compare
 from itertools import groupby
 from collections import defaultdict
 
+
 class StockPicking(models.Model):
-    _inherit='stock.picking'
+    _inherit = ['stock.picking']
 
     pos_session_id = fields.Many2one('pos.session', index=True)
     pos_order_id = fields.Many2one('pos.order', index=True)
@@ -157,8 +158,8 @@ class StockPicking(models.Model):
                 move.action_post()
         return res
 
+
 class StockPickingType(models.Model):
-    _name = 'stock.picking.type'
     _inherit = ['stock.picking.type', 'pos.load.mixin']
 
     @api.depends('warehouse_id')
@@ -185,13 +186,15 @@ class StockPickingType(models.Model):
     def _load_pos_data_fields(self, config_id):
         return ['id', 'use_create_lots', 'use_existing_lots']
 
+
 class ProcurementGroup(models.Model):
-    _inherit = 'procurement.group'
+    _inherit = ['procurement.group']
 
     pos_order_id = fields.Many2one('pos.order', 'POS Order')
 
+
 class StockMove(models.Model):
-    _inherit = 'stock.move'
+    _inherit = ['stock.move']
 
     def _get_new_picking_values(self):
         vals = super(StockMove, self)._get_new_picking_values()

--- a/addons/point_of_sale/models/stock_rule.py
+++ b/addons/point_of_sale/models/stock_rule.py
@@ -6,7 +6,7 @@ from odoo import models
 
 
 class StockRule(models.Model):
-    _inherit = 'stock.rule'
+    _inherit = ['stock.rule']
 
     def _get_stock_move_values(self, product_id, product_qty, product_uom, location_id, name, origin, company_id, values):
         move_values = super()._get_stock_move_values(product_id, product_qty, product_uom, location_id, name, origin, company_id, values)

--- a/addons/point_of_sale/models/stock_warehouse.py
+++ b/addons/point_of_sale/models/stock_warehouse.py
@@ -3,13 +3,13 @@
 from odoo import models, fields, api, _
 
 
-class Warehouse(models.Model):
-    _inherit = "stock.warehouse"
+class StockWarehouse(models.Model):
+    _inherit = ["stock.warehouse"]
 
     pos_type_id = fields.Many2one('stock.picking.type', string="Point of Sale Operation Type")
 
     def _get_sequence_values(self, name=False, code=False):
-        sequence_values = super(Warehouse, self)._get_sequence_values(name=name, code=code)
+        sequence_values = super()._get_sequence_values(name=name, code=code)
         sequence_values.update({
             'pos_type_id': {
                 'name': _('%(name)s Picking POS', name=self.name),
@@ -21,14 +21,14 @@ class Warehouse(models.Model):
         return sequence_values
 
     def _get_picking_type_update_values(self):
-        picking_type_update_values = super(Warehouse, self)._get_picking_type_update_values()
+        picking_type_update_values = super()._get_picking_type_update_values()
         picking_type_update_values.update({
             'pos_type_id': {'default_location_src_id': self.lot_stock_id.id}
         })
         return picking_type_update_values
 
     def _get_picking_type_create_values(self, max_sequence):
-        picking_type_create_values, max_sequence = super(Warehouse, self)._get_picking_type_create_values(max_sequence)
+        picking_type_create_values, max_sequence = super()._get_picking_type_create_values(max_sequence)
         picking_type_create_values.update({
             'pos_type_id': {
                 'name': _('PoS Orders'),
