PR: https://github.com/odoo/odoo/pull/54626

From: 7354da69232bcd03d50cb1232e0bec802bd1ef7e
From: Nicolas (vin)
Date: 2020-08-13 08:56:53

Structural Changes: 6
Total Changes: 21

[IMP] account: Accounts m2o behavior

There are inconsistencies in the m2o accounts create & edit behavior.
New off-balance account type was not correctly filtered

This change correct those two issues

Task ID: #2288757

closes odoo/odoo#54626

Related: odoo/enterprise#11920
Signed-off-by: Cedric Snauwaert (csn) <csn@openerp.com>

================================= pseudo patch: =================================

--- a/addons/account/models/account_account.py
+++ b/addons/account/models/account_account.py
@@ -35,7 +35,7 @@ class AccountAccountType(models.Model):
 class AccountAccount(models.Model):
     _name = "account.account"
     _description = "Account"
-    _order = "code, company_id"
+    _order = "is_off_balance, code, company_id"
     _check_company_auto = True
 
     @api.constrains('internal_type', 'reconcile')
@@ -84,6 +84,8 @@ class AccountAccount(models.Model):
     opening_credit = fields.Monetary(string="Opening Credit", compute='_compute_opening_debit_credit', inverse='_set_opening_credit', help="Opening credit value for this account.")
     opening_balance = fields.Monetary(string="Opening Balance", compute='_compute_opening_debit_credit', help="Opening balance value for this account.")
 
+    is_off_balance = fields.Boolean(compute='_compute_is_off_balance', default=False, store=True, readonly=True)
+
     _sql_constraints = [
         ('code_company_uniq', 'unique (code,company_id)', 'The code of the account must be unique per company !')
     ]
@@ -242,6 +244,11 @@ class AccountAccount(models.Model):
             record.opening_credit = res['credit']
             record.opening_balance = res['balance']
 
+    @api.depends('internal_group')
+    def _compute_is_off_balance(self):
+        for account in self:
+            account.is_off_balance = account.internal_group == "off_balance"
+
     def _set_opening_debit(self):
         self._set_opening_debit_credit(self.opening_debit, 'debit')
 

--- a/addons/account/models/account_journal.py
+++ b/addons/account/models/account_journal.py
@@ -53,10 +53,10 @@ class AccountJournal(models.Model):
         "Select 'Purchase' for vendor bills journals.\n"\
         "Select 'Cash' or 'Bank' for journals that are used in customer or vendor payments.\n"\
         "Select 'General' for miscellaneous operations journals.")
-    type_control_ids = fields.Many2many('account.account.type', 'journal_account_type_control_rel', 'journal_id', 'type_id', string='Account Types Allowed')
-    account_control_ids = fields.Many2many('account.account', 'journal_account_control_rel', 'journal_id', 'account_id', string='Accounts Allowed',
+    type_control_ids = fields.Many2many('account.account.type', 'journal_account_type_control_rel', 'journal_id', 'type_id', string='Allowed account types')
+    account_control_ids = fields.Many2many('account.account', 'journal_account_control_rel', 'journal_id', 'account_id', string='Allowed accounts',
         check_company=True,
-        domain="[('deprecated', '=', False), ('company_id', '=', company_id)]")
+        domain="[('deprecated', '=', False), ('company_id', '=', company_id), ('is_off_balance', '=', False)]")
     default_account_type = fields.Many2one('account.account.type', compute="_compute_default_account_type")
     default_account_id = fields.Many2one(
         comodel_name='account.account', check_company=True, copy=False, ondelete='restrict',

--- a/addons/account/models/account_move.py
+++ b/addons/account/models/account_move.py
@@ -2699,7 +2699,7 @@ class AccountMoveLine(models.Model):
     country_id = fields.Many2one(comodel_name='res.country', related='move_id.company_id.country_id')
     account_id = fields.Many2one('account.account', string='Account',
         index=True, ondelete="cascade",
-        domain="[('deprecated', '=', False), ('company_id', '=', company_id)]",
+        domain="[('deprecated', '=', False), ('company_id', '=', 'company_id'),('is_off_balance', '=', False)]",
         check_company=True,
         tracking=True)
     account_internal_type = fields.Selection(related='account_id.user_type_id.type', string="Internal Type", readonly=True)

--- a/addons/account/models/account_reconcile_model.py
+++ b/addons/account/models/account_reconcile_model.py
@@ -38,7 +38,7 @@ class AccountReconcileModelLine(models.Model):
     company_id = fields.Many2one(related='model_id.company_id', store=True, default=lambda self: self.env.company)
     sequence = fields.Integer(required=True, default=10)
     account_id = fields.Many2one('account.account', string='Account', ondelete='cascade',
-        domain="[('deprecated', '=', False), ('company_id', '=', company_id)]",
+        domain="[('deprecated', '=', False), ('company_id', '=', company_id), ('is_off_balance', '=', False)]",
         required=True, check_company=True)
     journal_id = fields.Many2one('account.journal', string='Journal', ondelete='cascade',
         domain="[('type', '=', 'general'), ('company_id', '=', company_id)]",

--- a/addons/account/models/product.py
+++ b/addons/account/models/product.py
@@ -2,7 +2,7 @@
 
 from odoo import api, fields, models, _
 
-ACCOUNT_DOMAIN = "['&', '&', ('deprecated', '=', False), ('internal_type','=','other'), ('company_id', '=', current_company_id)]"
+ACCOUNT_DOMAIN = "['&', '&', '&', ('deprecated', '=', False), ('internal_type','=','other'), ('company_id', '=', current_company_id), ('is_off_balance', '=', False)]"
 
 class ProductCategory(models.Model):
     _inherit = "product.category"
