PR: https://github.com/odoo/odoo/pull/98543

From: 35e107bcbdfeca99f7394d3a6a8490bcb0dfae4f
From: Nicolas (vin)
Date: 2022-08-24 23:54:01

Structural Changes: 2
Total Changes: 53

[FIX] account: fix accounting dates

Fix the accounting date in a few scenarios, such as exchange difference
or CABA moves reversal.
Also avoid updating the currency rate when reversing exchange difference
moves.

closes odoo/odoo#98543

X-original-commit: 2b8df0c111a785a9e51dc2f528ac5b00cb0eadb9
Signed-off-by: Laurent Smet <las@odoo.com>
Signed-off-by: Nicolas Viseur <vin@odoo.com>

================================= pseudo patch: =================================

--- a/addons/account/models/account_full_reconcile.py
+++ b/addons/account/models/account_full_reconcile.py
@@ -27,11 +27,11 @@ class AccountFullReconcile(models.Model):
         res = super().unlink()
 
         # Reverse all exchange moves at once.
-        today = fields.Date.context_today(self)
-        default_values_list = [{
-            'date': today,
-            'ref': _('Reversal of: %s') % move.name,
-        } for move in moves_to_reverse]
-        moves_to_reverse._reverse_moves(default_values_list, cancel=True)
+        if moves_to_reverse:
+            default_values_list = [{
+                'date': move._get_accounting_date(move.date, move._affect_tax_report()),
+                'ref': _('Reversal of: %s') % move.name,
+            } for move in moves_to_reverse]
+            moves_to_reverse._reverse_moves(default_values_list, cancel=True)
 
         return res

--- a/addons/account/models/account_move.py
+++ b/addons/account/models/account_move.py
@@ -2008,13 +2008,14 @@ class AccountMove(models.Model):
 
     def copy_data(self, default=None):
         data_list = super().copy_data(default)
-        for data in data_list:
-            data['line_ids'] = [
-                (command, _id, line_vals)
-                for command, _id, line_vals in data['line_ids']
-                if command == 0
-                and line_vals.get('display_type') not in ('payment_term', 'tax', 'rounding')
-            ]
+        for move, data in zip(self, data_list):
+            if move.move_type in ('out_invoice', 'in_invoice'):
+                data['line_ids'] = [
+                    (command, _id, line_vals)
+                    for command, _id, line_vals in data['line_ids']
+                    if command == Command.CREATE
+                    and line_vals.get('display_type') not in ('payment_term', 'tax', 'rounding')
+                ]
         if not self.journal_id.active and 'journal_id' in data_list:
             del default['journal_id']
         return data_list
@@ -3112,10 +3113,12 @@ class AccountMove(models.Model):
         return action
 
     def action_post(self):
-        if self.payment_id:
-            self.payment_id.action_post()
-        else:
-            self._post(soft=False)
+        moves_with_payments = self.filtered('payment_id')
+        other_moves = self - moves_with_payments
+        if moves_with_payments:
+            moves_with_payments.payment_id.action_post()
+        if other_moves:
+            other_moves._post(soft=False)
         return False
 
     def js_assign_outstanding_line(self, line_id):

--- a/addons/account/models/account_move_line.py
+++ b/addons/account/models/account_move_line.py
@@ -1,7 +1,7 @@
 import ast
 from collections import defaultdict
 from contextlib import contextmanager
-from datetime import date
+from datetime import date, timedelta
 from functools import lru_cache
 
 from odoo import api, fields, models, Command, _
@@ -1828,7 +1828,7 @@ class AccountMoveLine(models.Model):
 
         move_vals = {
             'move_type': 'entry',
-            'date': max(exchange_date or date.min, company._get_user_fiscal_lock_date()),
+            'date': max(exchange_date or date.min, company._get_user_fiscal_lock_date() + timedelta(days=1)),
             'journal_id': journal.id,
             'line_ids': [],
         }

--- a/addons/account/models/account_partial_reconcile.py
+++ b/addons/account/models/account_partial_reconcile.py
@@ -110,12 +110,12 @@ class AccountPartialReconcile(models.Model):
         full_to_unlink.unlink()
 
         # Reverse CABA entries.
-        today = fields.Date.context_today(self)
-        default_values_list = [{
-            'date': move.date if move.date > (move.company_id.period_lock_date or date.min) else today,
-            'ref': _('Reversal of: %s') % move.name,
-        } for move in moves_to_reverse]
-        moves_to_reverse._reverse_moves(default_values_list, cancel=True)
+        if moves_to_reverse:
+            default_values_list = [{
+                'date': move._get_accounting_date(move.date, move._affect_tax_report()),
+                'ref': _('Reversal of: %s') % move.name,
+            } for move in moves_to_reverse]
+            moves_to_reverse._reverse_moves(default_values_list, cancel=True)
 
         return res
 
