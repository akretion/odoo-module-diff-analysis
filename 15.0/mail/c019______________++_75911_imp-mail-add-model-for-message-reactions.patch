PR: https://github.com/odoo/odoo/pull/75911

From: 19c364ea2dbda0f84d07d8b231f7fc389eaa7ee5
From: Julien Giannone
Date: 2021-09-04 13:01:02

Structural Changes: 4
Total Changes: 25

[IMP] mail: add model for message reactions

Add the model in the freeze for next version, the interface is not fully ready
to merge yet but it will be added in https://github.com/odoo/odoo/pull/75630

Part of task-2361194

closes odoo/odoo#75911

Signed-off-by: Samuel Degueldre <sdegueldre@users.noreply.github.com>

================================= pseudo patch: =================================

--- a/addons/mail/models/__init__.py
+++ b/addons/mail/models/__init__.py
@@ -20,6 +20,7 @@ from . import mail_activity_type
 from . import mail_activity
 from . import mail_blacklist
 from . import mail_followers
+from . import mail_message_reaction
 from . import mail_message_subtype
 from . import mail_message
 from . import mail_mail

--- a/None
+++ b/addons/mail/models/mail_message_reaction.py
@@ -0,0 +1,24 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import models, fields
+
+
+class MailMessageReaction(models.Model):
+    _name = 'mail.message.reaction'
+    _description = 'Message Reaction'
+    _order = 'id desc'
+    _log_access = False
+
+    message_id = fields.Many2one(string="Message", comodel_name='mail.message', ondelete='cascade', required=True, readonly=True)
+    content = fields.Char(string="Content", required=True, readonly=True)
+    partner_id = fields.Many2one(string="Reacting Partner", comodel_name='res.partner', ondelete='cascade', readonly=True)
+    guest_id = fields.Many2one(string="Reacting Guest", comodel_name='mail.guest', ondelete='cascade', readonly=True)
+
+    def init(self):
+        self.env.cr.execute("CREATE UNIQUE INDEX IF NOT EXISTS mail_message_reaction_partner_unique ON %s (message_id, content, partner_id) WHERE partner_id IS NOT NULL" % self._table)
+        self.env.cr.execute("CREATE UNIQUE INDEX IF NOT EXISTS mail_message_reaction_guest_unique ON %s (message_id, content, guest_id) WHERE guest_id IS NOT NULL" % self._table)
+
+    _sql_constraints = [
+        ("partner_or_guest_exists", "CHECK((partner_id IS NOT NULL AND guest_id IS NULL) OR (partner_id IS NULL AND guest_id IS NOT NULL))", "A message reaction must be from a partner or from a guest."),
+    ]
