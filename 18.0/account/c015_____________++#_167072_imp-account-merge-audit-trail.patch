PR: https://github.com/odoo/odoo/pull/167072

From: dd5d5d510131146cd16fc29b6176b47f76cb1122
From: Yosua Nicolaus
Date: 2024-06-24 11:36:50

Structural Changes: 7
Total Changes: 152

[IMP] account,*: merge audit trail

*: account_audit_trail, l10n_dk, l10n_dk_audit_trail, l10n_in, base

This commit merges account_audit_trail to account and adds improvements
on top of it:

- improved the empty screen of audit trail menu message
- added some additional filters in search for audit trail view

closes odoo/odoo#167072

Task-id: 3952457
Related: odoo/enterprise#64984
Related: odoo/upgrade#6084
Signed-off-by: William Andr√© (wan) <wan@odoo.com>

================================= pseudo patch: =================================

--- a/addons/account/models/__init__.py
+++ b/addons/account/models/__init__.py
@@ -36,6 +36,8 @@ from . import res_users
 from . import ir_attachment
 from . import ir_actions_report
 from . import ir_module
+from . import ir_ui_menu
+from . import mail_message
 from . import res_currency
 from . import account_report
 from . import onboarding_onboarding_step

--- a/addons/account/models/account_move.py
+++ b/addons/account/models/account_move.py
@@ -2838,6 +2838,30 @@ class AccountMove(models.Model):
     def check_move_sequence_chain(self):
         return self.filtered(lambda move: move.name != '/')._is_end_of_seq_chain()
 
+    def _get_unlink_logger_message(self):
+        """ Before unlink, get a log message for audit trail if it's enabled.
+        Logger is added here because in api ondelete, account.move.line is deleted, and we can't get total amount """
+        if not self._context.get('force_delete'):
+            pass
+
+        moves_details = []
+        for move in self.filtered(lambda m: m.posted_before and m.company_id.check_account_audit_trail):
+            entry_details = f"{move.name} ({move.id}) amount {move.amount_total} {move.currency_id.name} and partner {move.partner_id.display_name}"
+            account_balances_per_account = defaultdict(float)
+            for line in move.line_ids:
+                account_balances_per_account[line.account_id] += line.balance
+            account_details = "\n".join(
+                f"- {account.name} ({account.id}) with balance {balance} {move.currency_id.name}"
+                for account, balance in account_balances_per_account.items()
+            )
+            moves_details.append(f"{entry_details}\n{account_details}")
+
+        return "\nForce deleted Journal Entries by {user_name} ({user_id})\nEntries\n{moves_details}".format(
+            user_name=self.env.user.name,
+            user_id=self.env.user.id,
+            moves_details="\n".join(moves_details),
+        )
+
     @api.ondelete(at_uninstall=False)
     def _unlink_forbid_parts_of_chain(self):
         """ For a user with Billing/Bookkeeper rights, when the fidu mode is deactivated,
@@ -2859,10 +2883,25 @@ class AccountMove(models.Model):
                     "You should probably revert it instead."
                 ))
 
+    @api.ondelete(at_uninstall=False)
+    def _unlink_account_audit_trail_except_once_post(self):
+        if not self._context.get('force_delete') and any(
+                move.posted_before and move.company_id.check_account_audit_trail
+                for move in self
+        ):
+            raise UserError(_(
+                "To keep the audit trail, you can not delete journal entries once they have been posted.\n"
+                "Instead, you can cancel the journal entry."
+            ))
+
     def unlink(self):
         self = self.with_context(skip_invoice_sync=True, dynamic_unlink=True)  # no need to sync to delete everything
+        logger_message = self._get_unlink_logger_message()
         self.line_ids.unlink()
-        return super().unlink()
+        res = super().unlink()
+        if logger_message:
+            _logger.info(logger_message)
+        return res
 
     @api.depends('partner_id', 'date', 'state', 'move_type')
     @api.depends_context('input_full_display_name')

--- a/addons/account/models/company.py
+++ b/addons/account/models/company.py
@@ -194,6 +194,9 @@ class ResCompany(models.Model):
     account_discount_income_allocation_id = fields.Many2one(comodel_name='account.account', string='Separate account for income discount')
     account_discount_expense_allocation_id = fields.Many2one(comodel_name='account.account', string='Separate account for expense discount')
 
+    # Audit trail
+    check_account_audit_trail = fields.Boolean(string='Audit Trail')
+
     def _get_company_root_delegated_field_names(self):
         return super()._get_company_root_delegated_field_names() + [
             'fiscalyear_last_day',
@@ -202,6 +205,12 @@ class ResCompany(models.Model):
             'tax_exigibility',
         ]
 
+    def cache_invalidation_fields(self):
+        # EXTENDS base
+        invalidation_fields = super().cache_invalidation_fields()
+        invalidation_fields.add('check_account_audit_trail')
+        return invalidation_fields
+
     @api.constrains('account_opening_move_id', 'fiscalyear_last_day', 'fiscalyear_last_month')
     def _check_fiscalyear_last_day(self):
         # if the user explicitly chooses the 29th of February we allow it:
@@ -219,6 +228,13 @@ class ResCompany(models.Model):
             if rec.fiscalyear_last_day > max_day:
                 raise ValidationError(_("Invalid fiscal year last day"))
 
+    @api.constrains('check_account_audit_trail')
+    def _check_audit_trail_records(self):
+        if not self.check_account_audit_trail:
+            move_count = self.env['account.move'].search_count([('company_id', '=', self.id)], limit=1)
+            if move_count:
+                raise UserError(_("Can't disable audit trail when there are existing records."))
+
     @api.depends('fiscal_position_ids.foreign_vat')
     def _compute_multi_vat_foreign_country(self):
         company_to_foreign_vat_country = {

--- a/None
+++ b/addons/account/models/ir_ui_menu.py
@@ -0,0 +1,11 @@
+from odoo import models
+
+
+class IrUiMenu(models.Model):
+    _inherit = 'ir.ui.menu'
+
+    def _load_menus_blacklist(self):
+        res = super()._load_menus_blacklist()
+        if not any(company.check_account_audit_trail for company in self.env.user.company_ids):
+            res.append(self.env.ref('account.account_audit_trail_menu').id)
+        return res

--- a/None
+++ b/addons/account/models/mail_message.py
@@ -0,0 +1,78 @@
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from markupsafe import Markup
+
+from odoo import api, fields, models, _
+from odoo.exceptions import UserError
+
+
+class Message(models.Model):
+    _inherit = 'mail.message'
+
+    account_audit_log_preview = fields.Html(string="Description", compute="_compute_account_audit_log_preview")
+    account_audit_log_move_id = fields.Many2one(
+        comodel_name='account.move',
+        string="Journal Entry",
+        compute="_compute_account_audit_log_move_id",
+        search="_search_account_audit_log_move_id",
+    )
+    account_audit_log_activated = fields.Boolean(
+        string="Audit Log Activated",
+        compute="_compute_account_audit_log_move_id",
+        search="_search_account_audit_log_activated")
+
+    @api.depends('tracking_value_ids')
+    def _compute_account_audit_log_preview(self):
+        move_messages = self.filtered(lambda m: m.model == 'account.move' and m.res_id)
+        (self - move_messages).account_audit_log_preview = False
+        for message in move_messages:
+            title = message.subject or message.preview
+            tracking_value_ids = message.sudo().tracking_value_ids._filter_has_field_access(self.env)
+            if not title and tracking_value_ids:
+                title = _("Updated")
+            if not title and message.subtype_id and not message.subtype_id.internal:
+                title = message.subtype_id.display_name
+            audit_log_preview = Markup("<div>%s</div>") % (title or '')
+            audit_log_preview += Markup("<br>").join(
+                Markup(
+                    "%(old_value)s <i class='o_TrackingValue_separator fa fa-long-arrow-right mx-1 text-600' title='%(title)s' role='img' aria-label='%(title)s'></i>%(new_value)s (%(field)s)"
+                ) % {
+                    'old_value': fmt_vals['oldValue']['value'],
+                    'new_value': fmt_vals['newValue']['value'],
+                    'title': _("Changed"),
+                    'field': fmt_vals['changedField'],
+                }
+                for fmt_vals in tracking_value_ids._tracking_value_format()
+            )
+            message.account_audit_log_preview = audit_log_preview
+
+    @api.depends('model', 'res_id')
+    def _compute_account_audit_log_move_id(self):
+        move_messages = self.filtered(lambda m: m.model == 'account.move' and m.res_id)
+        (self - move_messages).update({
+            "account_audit_log_activated": False,
+            "account_audit_log_move_id": False,
+        })
+        if move_messages:
+            moves = self.env['account.move'].sudo().search([
+                ('id', 'in', list(set(move_messages.mapped('res_id')))),
+                ('company_id.check_account_audit_trail', '=', True),
+            ])
+            for message in move_messages:
+                message.account_audit_log_activated = message.res_id in moves.ids
+                message.account_audit_log_move_id = message.res_id in moves.ids and message.res_id
+
+    def _search_account_audit_log_move_id(self, operator, value):
+        if operator in ['=', 'like', 'ilike', '!=', 'not ilike', 'not like'] and isinstance(value, str):
+            res_id_domain = [('res_id', 'in', self.env['account.move']._name_search(value, operator=operator))]
+        elif operator in ['in', '!=', 'not in']:
+            res_id_domain = [('res_id', operator, value)]
+        else:
+            raise UserError(_('Operation not supported'))
+        return [('model', '=', 'account.move')] + res_id_domain
+
+    def _search_account_audit_log_activated(self, operator, value):
+        if operator not in ['=', '!='] or not isinstance(value, bool):
+            raise UserError(_('Operation not supported'))
+        move_query = self.env['account.move']._search([('company_id.check_account_audit_trail', operator, value)])
+        return ['&', ('model', '=', 'account.move'), ('res_id', 'in', move_query)]

--- a/addons/account/models/res_config_settings.py
+++ b/addons/account/models/res_config_settings.py
@@ -2,7 +2,6 @@
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
 from odoo import _, api, fields, models
-
 from odoo.addons.account.models.company import PEPPOL_LIST
 
 
@@ -220,6 +219,9 @@ class ResConfigSettings(models.TransientModel):
         compute='_compute_is_account_peppol_eligible',
     ) # technical field used for showing the Peppol settings conditionally
 
+    # Audit trail
+    check_account_audit_trail = fields.Boolean(string='Audit Trail', related='company_id.check_account_audit_trail', readonly=False)
+
     @api.depends('country_code')
     def _compute_is_account_peppol_eligible(self):
         # we want to show Peppol settings only to customers that are eligible for Peppol,
