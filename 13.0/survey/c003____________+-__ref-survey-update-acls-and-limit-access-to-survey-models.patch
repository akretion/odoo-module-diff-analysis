PR: https://github.com/odoo/odoo/pull/

From: e3d2957f98597fa5028c6662d6bbb6c659c5ff57
From: Thibault DelavallÃ©e
Date: 2019-01-14 15:22:18

Structural Changes: 5
Total Changes: 6

[REF] survey: update ACLs and limit access to survey models

Purpose of this commit is to rewrite all access rights and rules of survey
models. Indeed this module is quite old and rules may give some strange
permissions to some people and does not enforce the use of real survey
user groups.

Specifications
 * survey manager: can CRUD everything;
 * survey users: can CRUD their own surveys, read all;
 * regular users: cannot access anything and will use dedicated controllers
   and routes;
 * portal, public: cannot access anything and will use dedicated controllers
   and routes;

This commit alone breaks some use of survey, notably its embedded portal.
Future commit will update code to use those new ACLs. It is done in several
commits in order to have smaller diff and avoid having too large diff in a
single commit.

This commit is linked to task ID 1911586 and PR #28986.

================================= pseudo patch: =================================

--- a/addons/survey/models/survey_question.py
+++ b/addons/survey/models/survey_question.py
@@ -82,7 +82,9 @@ class SurveyQuestion(models.Model):
     constr_mandatory = fields.Boolean('Mandatory Answer')
     constr_error_msg = fields.Char('Error message', translate=True, default=lambda self: _("This question requires an answer."))
     # Answer
-    user_input_line_ids = fields.One2many('survey.user_input_line', 'question_id', string='Answers', domain=[('skipped', '=', False)])
+    user_input_line_ids = fields.One2many(
+        'survey.user_input_line', 'question_id', string='Answers',
+        domain=[('skipped', '=', False)], groups='survey.group_survey_user')
 
     _sql_constraints = [
         ('positive_len_min', 'CHECK (validation_length_min >= 0)', 'A length must be positive!'),

--- a/addons/survey/models/survey_survey.py
+++ b/addons/survey/models/survey_survey.py
@@ -33,7 +33,7 @@ class Survey(models.Model):
     is_closed = fields.Boolean("Is closed", related='stage_id.closed', readonly=False)
     # content
     page_ids = fields.One2many('survey.page', 'survey_id', string='Pages', copy=True)
-    user_input_ids = fields.One2many('survey.user_input', 'survey_id', string='User responses', readonly=True)
+    user_input_ids = fields.One2many('survey.user_input', 'survey_id', string='User responses', readonly=True, groups='survey.group_survey_user')
     # security / access
     auth_required = fields.Boolean('Login required', help="Users with a public link will be requested to login before taking part to the survey")
     users_can_go_back = fields.Boolean('Users can go back', help="If checked, users can go back to previous pages.")
