PR: https://github.com/odoo/odoo/pull/97279

From: 3363e55cac2a121c29842a0b2463f940bdd866a4
From: Fabien Pinckaers
Date: 2022-08-01 22:26:53

Structural Changes: 6
Total Changes: 7

[IMP] cleanup of help messages in all modules

This commit aims at removing unuseful help message to:
1/ reduce translators work, to focus on more useful translations
2/ not sending unuseful information in load_views
3/ reduce help message to useful messages, so that we can mark
   fields having a tooltip in the future UI.
4/ some cleanup of existing messages too

The main use cases:
- REMOVED: help redundant with the field name, providing no extra info
- MOVED TO COMMENT: technical help messages, that should not be in UX

closes odoo/odoo#97279

Signed-off-by: Fabien Pinckaers <fp@odoo.com>

================================= pseudo patch: =================================

--- a/addons/rating/models/rating.py
+++ b/addons/rating/models/rating.py
@@ -23,11 +23,10 @@ class Rating(models.Model):
         return [(model.model, model.name) for model in self.env['ir.model'].sudo().search([])]
 
     create_date = fields.Datetime(string="Submitted on")
-    res_name = fields.Char(string='Resource name', compute='_compute_res_name', store=True, help="The name of the rated resource.")
+    res_name = fields.Char(string='Resource name', compute='_compute_res_name', store=True)
     res_model_id = fields.Many2one('ir.model', 'Related Document Model', index=True, ondelete='cascade', help='Model of the followed resource')
     res_model = fields.Char(string='Document Model', related='res_model_id.model', store=True, index=True, readonly=True)
-    res_id = fields.Many2oneReference(string='Document', model_field='res_model', help="Identifier of the rated object",
-                                      required=True, index=True)
+    res_id = fields.Many2oneReference(string='Document', model_field='res_model', required=True, index=True)
     resource_ref = fields.Reference(
         string='Resource Ref', selection='_selection_target_model',
         compute='_compute_resource_ref', readonly=True)
@@ -52,7 +51,7 @@ class Rating(models.Model):
         help="Associated message when posting a review. Mainly used in website addons.")
     is_internal = fields.Boolean('Visible Internally Only', readonly=False, related='message_id.is_internal', store=True)
     access_token = fields.Char('Security Token', default=_default_access_token, help="Access token to set the rating of the value")
-    consumed = fields.Boolean(string="Filled Rating", help="Enabled if the rating has been filled.")
+    consumed = fields.Boolean(string="Filled Rating")
 
     _sql_constraints = [
         ('rating_range', 'check(rating >= 0 and rating <= 5)', 'Rating should be between 0 and 5'),
