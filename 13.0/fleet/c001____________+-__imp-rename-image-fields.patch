PR: https://github.com/odoo/odoo/pull/

From: 58a2ffa26f1a3b0f9630ce16d11b758d18e20a21
From: SÃ©bastien Theys
Date: 2019-08-02 16:47:58

Structural Changes: 8
Total Changes: 20

[IMP] *: rename image fields

image_original => image_1920 (now resized to 1920)
image_big => image_1024
image_large => image_256
image_medium => image_128
image_small  => image_64
image replaced by image_1920 (when writing) or by image_1024 (when displaying
	what was previously the big size)

+ add new intermediate format:
image_512

PR: #34925

================================= pseudo patch: =================================

--- a/addons/fleet/models/fleet_vehicle.py
+++ b/addons/fleet/models/fleet_vehicle.py
@@ -73,8 +73,8 @@ class FleetVehicle(models.Model):
     power = fields.Integer('Power', help='Power in kW of the vehicle')
     co2 = fields.Float('CO2 Emissions', help='CO2 emissions of the vehicle')
     image = fields.Binary(related='model_id.image', string="Logo", readonly=False)
-    image_medium = fields.Binary(related='model_id.image_medium', string="Logo (medium)", readonly=False)
-    image_small = fields.Binary(related='model_id.image_small', string="Logo (small)", readonly=False)
+    image_128 = fields.Binary(related='model_id.image_128', string="Logo (medium)", readonly=False)
+    image_64 = fields.Binary(related='model_id.image_64', string="Logo (small)", readonly=False)
     contract_renewal_due_soon = fields.Boolean(compute='_compute_contract_reminder', search='_search_contract_renewal_due_soon',
         string='Has Contracts to renew', multi='contract_info')
     contract_renewal_overdue = fields.Boolean(compute='_compute_contract_reminder', search='_search_get_overdue_contract_reminder',
@@ -206,9 +206,9 @@ class FleetVehicle(models.Model):
     @api.onchange('model_id')
     def _onchange_model(self):
         if self.model_id:
-            self.image_medium = self.model_id.image
+            self.image_128 = self.model_id.image
         else:
-            self.image_medium = False
+            self.image_128 = False
 
     @api.model
     def create(self, vals):

--- a/addons/fleet/models/fleet_vehicle_model.py
+++ b/addons/fleet/models/fleet_vehicle_model.py
@@ -15,8 +15,8 @@ class FleetVehicleModel(models.Model):
     manager_id = fields.Many2one('res.users', 'Fleet Manager', default=lambda self: self.env.uid,
                                  domain=lambda self: [('groups_id', 'in', self.env.ref('fleet.fleet_group_manager').id)])
     image = fields.Binary(related='brand_id.image', string="Logo", readonly=False)
-    image_medium = fields.Binary(related='brand_id.image_medium', string="Logo (medium)", readonly=False)
-    image_small = fields.Binary(related='brand_id.image_small', string="Logo (small)", readonly=False)
+    image_128 = fields.Binary(related='brand_id.image_128', string="Logo (medium)", readonly=False)
+    image_64 = fields.Binary(related='brand_id.image_64', string="Logo (small)", readonly=False)
 
     @api.depends('name', 'brand_id')
     def name_get(self):
@@ -31,9 +31,9 @@ class FleetVehicleModel(models.Model):
     @api.onchange('brand_id')
     def _onchange_brand(self):
         if self.brand_id:
-            self.image_medium = self.brand_id.image
+            self.image_128 = self.brand_id.image
         else:
-            self.image_medium = False
+            self.image_128 = False
 
 
 class FleetVehicleModelBrand(models.Model):
@@ -44,11 +44,11 @@ class FleetVehicleModelBrand(models.Model):
     name = fields.Char('Make', required=True)
     image = fields.Binary("Logo",
         help="This field holds the image used as logo for the brand, limited to 1024x1024px.")
-    image_medium = fields.Binary("Medium-sized image",
+    image_128 = fields.Binary("Medium-sized image",
         help="Medium-sized logo of the brand. It is automatically "
              "resized as a 128x128px image, with aspect ratio preserved. "
              "Use this field in form views or some kanban views.")
-    image_small = fields.Binary("Small-sized image",
+    image_64 = fields.Binary("Small-sized image",
         help="Small-sized logo of the brand. It is automatically "
              "resized as a 64x64px image, with aspect ratio preserved. "
              "Use this field anywhere a small image is required.")
