PR: https://github.com/odoo/odoo/pull/106682

From: 58fa3d1ece0196783ecd517430dab862d133fc5f
From: Patrick Hoste
Date: 2022-11-28 14:53:23

Structural Changes: 5
Total Changes: 40

[FIX] mass_mailing: fix unsubscription_date when opt_out on create

Before this commit when creating a mailing contact with a mailing
list opt_out at creation the unsubscription_date wasn't set.
Indeed, from the mailing contact view the mailing list uses an
editable list that passes all the values at create even when not set
contrary to when one update the contact only the changed values are
passed. This commit fix this issue.

Task-3070852

closes odoo/odoo#106682

X-original-commit: e7c22094068ce5cdff7f30178cea6d4f39f09137
Signed-off-by: Warnon Aur√©lien (awa) <awa@odoo.com>
Signed-off-by: Hoste Patrick (pko) <pko@odoo.com>

================================= pseudo patch: =================================

--- a/addons/mass_mailing/models/mailing_contact.py
+++ b/addons/mass_mailing/models/mailing_contact.py
@@ -6,6 +6,46 @@ from odoo.exceptions import UserError
 from odoo.osv import expression
 
 
+class MassMailingContactListRel(models.Model):
+    """ Intermediate model between mass mailing list and mass mailing contact
+        Indicates if a contact is opted out for a particular list
+    """
+    _name = 'mailing.contact.subscription'
+    _description = 'Mass Mailing Subscription Information'
+    _table = 'mailing_contact_list_rel'
+    _rec_name = 'contact_id'
+
+    contact_id = fields.Many2one('mailing.contact', string='Contact', ondelete='cascade', required=True)
+    list_id = fields.Many2one('mailing.list', string='Mailing List', ondelete='cascade', required=True)
+    opt_out = fields.Boolean(string='Opt Out',
+                             help='The contact has chosen not to receive mails anymore from this list', default=False)
+    unsubscription_date = fields.Datetime(string='Unsubscription Date')
+    message_bounce = fields.Integer(related='contact_id.message_bounce', store=False, readonly=False)
+    is_blacklisted = fields.Boolean(related='contact_id.is_blacklisted', store=False, readonly=False)
+
+    _sql_constraints = [
+        ('unique_contact_list', 'unique (contact_id, list_id)',
+         'A mailing contact cannot subscribe to the same mailing list multiple times.')
+    ]
+
+    @api.model_create_multi
+    def create(self, vals_list):
+        now = fields.Datetime.now()
+        for vals in vals_list:
+            if 'opt_out' in vals and not vals.get('unsubscription_date'):
+                vals['unsubscription_date'] = now if vals['opt_out'] else False
+            if vals.get('unsubscription_date'):
+                vals['opt_out'] = True
+        return super().create(vals_list)
+
+    def write(self, vals):
+        if 'opt_out' in vals and 'unsubscription_date' not in vals:
+            vals['unsubscription_date'] = fields.Datetime.now() if vals['opt_out'] else False
+        if vals.get('unsubscription_date'):
+            vals['opt_out'] = True
+        return super(MassMailingContactListRel, self).write(vals)
+
+
 class MassMailingContact(models.Model):
     """Model of a contact. This model is different from the partner model
     because it holds only some basic information: name, email. The purpose is to
