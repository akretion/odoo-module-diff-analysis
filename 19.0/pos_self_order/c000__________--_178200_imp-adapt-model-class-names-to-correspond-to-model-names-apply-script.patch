PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:13 + add:0, change matches:
-    _inherit = 'account.fiscal.position'
-    _inherit = "pos.category"
-    _inherit = "pos.config"
-    _inherit = "pos.order.line"
-    _inherit = "pos.order"
-    _inherit = "pos.payment.method"
-    _inherit = "restaurant.table"
-    _inherit = "restaurant.floor"
-    _inherit = "pos.load.mixin"
-    _inherit = 'pos.session'
-    _inherit = 'product.template'
-    _inherit = "product.product"
-    _inherit = "res.config.settings"

Total Changes: 37

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/pos_self_order/models/account_fiscal_position.py
+++ b/addons/pos_self_order/models/account_fiscal_position.py
@@ -2,7 +2,7 @@ from odoo import models
 
 
 class AccountFiscalPosition(models.Model):
-    _inherit = 'account.fiscal.position'
+    _inherit = ['account.fiscal.position']
 
     def _load_pos_self_data(self, data):
         return self._load_pos_data(data)

--- a/addons/pos_self_order/models/ir_binary.py
+++ b/addons/pos_self_order/models/ir_binary.py
@@ -2,7 +2,7 @@ from odoo import models
 
 
 class IrBinary(models.AbstractModel):
-    _inherit = "ir.binary"
+    _inherit = ["ir.binary"]
 
     def _find_record_check_access(self, record, access_token, field):
         if record._name in ["product.product", "pos.category"] and field in ["image_128", "image_512"]:

--- a/addons/pos_self_order/models/ir_http.py
+++ b/addons/pos_self_order/models/ir_http.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class IrHttp(models.AbstractModel):
-    _inherit = "ir.http"
+    _inherit = ["ir.http"]
 
     @classmethod
     def _get_translation_frontend_modules_name(cls):

--- a/addons/pos_self_order/models/pos_category.py
+++ b/addons/pos_self_order/models/pos_category.py
@@ -6,7 +6,7 @@ from odoo import models, fields, api, _
 
 
 class PosCategory(models.Model):
-    _inherit = "pos.category"
+    _inherit = ["pos.category"]
 
 
     hour_until = fields.Float(string='Availability Until', default=24.0, help="The product will be available until this hour.")

--- a/addons/pos_self_order/models/pos_config.py
+++ b/addons/pos_self_order/models/pos_config.py
@@ -11,7 +11,7 @@ from odoo.tools import file_open, split_every
 
 
 class PosConfig(models.Model):
-    _inherit = "pos.config"
+    _inherit = ["pos.config"]
 
     def _self_order_kiosk_default_languages(self):
         return self.env["res.lang"].get_installed()

--- a/addons/pos_self_order/models/pos_load_mixin.py
+++ b/addons/pos_self_order/models/pos_load_mixin.py
@@ -3,7 +3,7 @@ from odoo import models, api
 
 
 class PosLoadMixin(models.AbstractModel):
-    _inherit = "pos.load.mixin"
+    _inherit = ["pos.load.mixin"]
 
     @api.model
     def _load_pos_self_data_domain(self, data):

--- a/addons/pos_self_order/models/pos_order.py
+++ b/addons/pos_self_order/models/pos_order.py
@@ -7,7 +7,7 @@ from odoo import models, fields, api
 
 
 class PosOrderLine(models.Model):
-    _inherit = "pos.order.line"
+    _inherit = ["pos.order.line"]
 
     combo_id = fields.Many2one('product.combo', string='Combo reference')
 
@@ -31,8 +31,9 @@ class PosOrderLine(models.Model):
             del vals['combo_parent_uuid']
         return super().write(vals)
 
+
 class PosOrder(models.Model):
-    _inherit = "pos.order"
+    _inherit = ["pos.order"]
 
     table_stand_number = fields.Char(string="Table Stand Number")
 

--- a/addons/pos_self_order/models/pos_payment_method.py
+++ b/addons/pos_self_order/models/pos_payment_method.py
@@ -2,7 +2,7 @@ from odoo import models, api
 
 
 class PosPaymentMethod(models.Model):
-    _inherit = "pos.payment.method"
+    _inherit = ["pos.payment.method"]
 
     # will be overridden.
     def _payment_request_from_kiosk(self, order):

--- a/addons/pos_self_order/models/pos_restaurant.py
+++ b/addons/pos_self_order/models/pos_restaurant.py
@@ -8,7 +8,7 @@ from odoo import api, fields, models
 
 
 class RestaurantTable(models.Model):
-    _inherit = "restaurant.table"
+    _inherit = ["restaurant.table"]
 
     identifier = fields.Char(
         "Security Token",
@@ -37,7 +37,7 @@ class RestaurantTable(models.Model):
 
 
 class RestaurantFloor(models.Model):
-    _inherit = "restaurant.floor"
+    _inherit = ["restaurant.floor"]
 
     @api.model
     def _load_pos_self_data_fields(self, config_id):

--- a/addons/pos_self_order/models/pos_self_order_custom_link.py
+++ b/addons/pos_self_order/models/pos_self_order_custom_link.py
@@ -6,9 +6,8 @@ from odoo import fields, models, api
 from markupsafe import escape
 
 
-class PosSelfOrderCustomLink(models.Model):
-    _name = "pos_self_order.custom_link"
-    _inherit = "pos.load.mixin"
+class Pos_Self_OrderCustom_Link(models.Model):
+    _inherit = ["pos.load.mixin"]
     _description = (
         "Custom links that the restaurant can configure to be displayed on the self order screen"
     )

--- a/addons/pos_self_order/models/pos_session.py
+++ b/addons/pos_self_order/models/pos_session.py
@@ -5,7 +5,7 @@ from odoo import models, api, _, fields
 
 
 class PosSession(models.Model):
-    _inherit = 'pos.session'
+    _inherit = ['pos.session']
 
     @api.model_create_multi
     def create(self, vals_list):

--- a/addons/pos_self_order/models/product_product.py
+++ b/addons/pos_self_order/models/product_product.py
@@ -5,7 +5,7 @@ from odoo import api, models, fields
 
 
 class ProductTemplate(models.Model):
-    _inherit = 'product.template'
+    _inherit = ['product.template']
 
     self_order_available = fields.Boolean(
         string="Available in Self Order",
@@ -32,8 +32,9 @@ class ProductTemplate(models.Model):
                     product._send_availability_status()
         return res
 
+
 class ProductProduct(models.Model):
-    _inherit = "product.product"
+    _inherit = ["product.product"]
 
     @api.model
     def _load_pos_data_fields(self, config_id):

--- a/addons/pos_self_order/models/res_config_settings.py
+++ b/addons/pos_self_order/models/res_config_settings.py
@@ -12,7 +12,7 @@ from werkzeug.urls import url_unquote
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = "res.config.settings"
+    _inherit = ["res.config.settings"]
 
     pos_self_ordering_takeaway = fields.Boolean(related="pos_config_id.self_ordering_takeaway", readonly=False)
     pos_self_ordering_service_mode = fields.Selection(related="pos_config_id.self_ordering_service_mode", readonly=False, required=True)
