PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:9 + add:0, change matches:
-    _inherit = 'purchase.order'
-    _inherit = 'res.company'
-    _inherit = 'sale.order'
-    _inherit = 'sale.order.line'
-    _inherit = 'stock.rule'
-    _inherit = "procurement.group"
-    _inherit = 'stock.picking'
-    _inherit = 'stock.picking.type'
-    _inherit = 'stock.lot'

Total Changes: 24

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/stock_dropshipping/models/purchase.py
+++ b/addons/stock_dropshipping/models/purchase.py
@@ -5,7 +5,7 @@ from odoo import api, models, fields
 
 
 class PurchaseOrder(models.Model):
-    _inherit = 'purchase.order'
+    _inherit = ['purchase.order']
 
     dropship_picking_count = fields.Integer("Dropship Count", compute='_compute_incoming_picking_count')
 

--- a/addons/stock_dropshipping/models/res_company.py
+++ b/addons/stock_dropshipping/models/res_company.py
@@ -5,7 +5,7 @@ from odoo import api, models
 
 
 class ResCompany(models.Model):
-    _inherit = 'res.company'
+    _inherit = ['res.company']
 
     # -------------------------------------------------------------------------
     # Sequences

--- a/addons/stock_dropshipping/models/sale.py
+++ b/addons/stock_dropshipping/models/sale.py
@@ -5,7 +5,7 @@ from odoo import models, fields, api
 
 
 class SaleOrder(models.Model):
-    _inherit = 'sale.order'
+    _inherit = ['sale.order']
 
     dropship_picking_count = fields.Integer("Dropship Count", compute='_compute_picking_ids')
 
@@ -25,7 +25,7 @@ class SaleOrder(models.Model):
 
 
 class SaleOrderLine(models.Model):
-    _inherit = 'sale.order.line'
+    _inherit = ['sale.order.line']
 
     def _compute_is_mto(self):
         super(SaleOrderLine, self)._compute_is_mto()

--- a/addons/stock_dropshipping/models/stock.py
+++ b/addons/stock_dropshipping/models/stock.py
@@ -6,7 +6,7 @@ from odoo.osv import expression
 
 
 class StockRule(models.Model):
-    _inherit = 'stock.rule'
+    _inherit = ['stock.rule']
 
     @api.model
     def _get_procurements_to_merge_groupby(self, procurement):
@@ -23,7 +23,7 @@ class StockRule(models.Model):
 
 
 class ProcurementGroup(models.Model):
-    _inherit = "procurement.group"
+    _inherit = ["procurement.group"]
 
     @api.model
     def _get_rule_domain(self, location, values):
@@ -32,8 +32,9 @@ class ProcurementGroup(models.Model):
             domain = expression.AND([domain, [('company_id', '=', values['company_id'].id)]])
         return domain
 
+
 class StockPicking(models.Model):
-    _inherit = 'stock.picking'
+    _inherit = ['stock.picking']
 
     is_dropship = fields.Boolean("Is a Dropship", compute='_compute_is_dropship')
 
@@ -46,8 +47,9 @@ class StockPicking(models.Model):
         self.ensure_one()
         return super()._is_to_external_location() or self.is_dropship
 
+
 class StockPickingType(models.Model):
-    _inherit = 'stock.picking.type'
+    _inherit = ['stock.picking.type']
 
     code = fields.Selection(
         selection_add=[('dropship', 'Dropship')], ondelete={'dropship': lambda recs: recs.write({'code': 'outgoing', 'active': False})})
@@ -80,7 +82,7 @@ class StockPickingType(models.Model):
 
 
 class StockLot(models.Model):
-    _inherit = 'stock.lot'
+    _inherit = ['stock.lot']
 
     def _compute_last_delivery_partner_id(self):
         super()._compute_last_delivery_partner_id()

--- a/addons/stock_dropshipping/models/stock_replenish_mixin.py
+++ b/addons/stock_dropshipping/models/stock_replenish_mixin.py
@@ -4,8 +4,8 @@ from odoo import models
 from odoo.osv import expression
 
 
-class ProductReplenishMixin(models.AbstractModel):
-    _inherit = 'stock.replenish.mixin'
+class StockReplenishMixin(models.AbstractModel):
+    _inherit = ['stock.replenish.mixin']
 
     def _get_allowed_route_domain(self):
         domains = super()._get_allowed_route_domain()
