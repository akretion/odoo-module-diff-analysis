PR: https://github.com/odoo/odoo/pull/

From: a18bd499acf518f070318aeabd81f8eb94faad01
From: Richard Mathot
Date: 2018-01-16 12:34:29

Structural Changes: 4
Total Changes: 29

[REF] various: convert res.config.settings to use ir.config_parameter integration

This commit updates the various res config of Odoo addons to use the
newly-introduced config_parameter field attribute.

================================= pseudo patch: =================================

--- a/addons/website/models/res_config_settings.py
+++ b/addons/website/models/res_config_settings.py
@@ -33,14 +33,14 @@ class ResConfigSettings(models.TransientModel):
     favicon = fields.Binary('Favicon', related='website_id.favicon')
     # Set as global config parameter since methods using it are not website-aware. To be changed
     # when multi-website is implemented
-    google_maps_api_key = fields.Char(string='Google Maps API Key')
-    has_google_analytics = fields.Boolean("Google Analytics")
-    has_google_analytics_dashboard = fields.Boolean("Google Analytics in Dashboard")
-    has_google_maps = fields.Boolean("Google Maps")
+    google_maps_api_key = fields.Char(string='Google Maps API Key', config_parameter='google_maps_api_key', default='')
+    has_google_analytics = fields.Boolean("Google Analytics", config_parameter='website.has_google_analytics')
+    has_google_analytics_dashboard = fields.Boolean("Google Analytics in Dashboard", config_parameter='website.has_google_analytics_dashboard')
+    has_google_maps = fields.Boolean("Google Maps", config_parameter='website.has_google_maps')
     auth_signup_uninvited = fields.Selection([
         ('b2b', 'On invitation (B2B)'),
         ('b2c', 'Free sign up (B2C)'),
-    ], string='Customer Account')
+    ], string='Customer Account', default='b2b', config_parameter='auth_signup.invitation_scope')
 
     @api.onchange('has_google_analytics')
     def onchange_has_google_analytics(self):
@@ -67,29 +67,10 @@ class ResConfigSettings(models.TransientModel):
         for config in self:
             config.language_count = len(self.language_ids)
 
-    @api.model
-    def get_values(self):
-        res = super(ResConfigSettings, self).get_values()
-        get_param = self.env['ir.config_parameter'].sudo().get_param
-        res.update(
-            auth_signup_uninvited='b2c' if get_param('auth_signup.allow_uninvited', 'False').lower() == 'true' else 'b2b',
-            has_google_analytics=get_param('website.has_google_analytics'),
-            has_google_analytics_dashboard=get_param('website.has_google_analytics_dashboard'),
-            has_google_maps=get_param('website.has_google_maps'),
-            google_maps_api_key=get_param('google_maps_api_key', default=''),
-        )
-        return res
-
     def set_values(self):
         if not self.user_has_groups('website.group_website_designer'):
             raise AccessDenied()
         super(ResConfigSettings, self).set_values()
-        set_param = self.env['ir.config_parameter'].sudo().set_param
-        set_param('auth_signup.allow_uninvited', repr(self.auth_signup_uninvited == 'b2c'))
-        set_param('website.has_google_analytics', self.has_google_analytics)
-        set_param('website.has_google_analytics_dashboard', self.has_google_analytics_dashboard)
-        set_param('website.has_google_maps', self.has_google_maps)
-        set_param('google_maps_api_key', (self.google_maps_api_key or '').strip())
 
     @api.multi
     def open_template_user(self):
