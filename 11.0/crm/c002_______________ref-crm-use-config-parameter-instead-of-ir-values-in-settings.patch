PR: https://github.com/odoo/odoo/pull/

From: 4b5513cfd47c4692599a111db800d04ab5f6f62e
From: Thibault Delavall√©e
Date: 2017-06-19 15:37:38

Breaking data model changes score: 2, change matches:
-    generate_sales_team_alias = fields.Boolean("Automatically generate an email alias at the sales channel creation",
-    default_generate_lead_from_alias = fields.Boolean('Manual Assignation of Emails')

Total Changes: 56

[REF] crm: use config parameter instead of ir values in settings

Fields like `default_foo` still used ir.values although those are system-wide
parameters and should therefore be stored in ir.config_parameter
table.

When no default_model is set on a field, don't prefix it by `default_`.

Also, remove deprecated generation of alias on sales team.

According to usability experts configuring a sales team alias should
be done directly on the sales team view and not through an hidden
and strangely configured settings.

================================= pseudo patch: =================================

--- a/addons/crm/models/crm_team.py
+++ b/addons/crm/models/crm_team.py
@@ -120,13 +120,6 @@ class Team(models.Model):
         if not self.use_opportunities and self.dashboard_graph_model == 'crm.opportunity.report':
             raise ValidationError(_("Dashboard graph content cannot be Pipeline if the sales channel doesn't use it. (Pipeline is unchecked.)"))
 
-    @api.model
-    def create(self, vals):
-        generate_alias_name = self.env['ir.values'].get_default('sale.config.settings', 'generate_sales_team_alias')
-        if generate_alias_name and not vals.get('alias_name'):
-            vals['alias_name'] = vals.get('name')
-        return super(Team, self).create(vals)
-
     @api.multi
     def write(self, vals):
         result = super(Team, self).write(vals)

--- a/addons/crm/models/res_config.py
+++ b/addons/crm/models/res_config.py
@@ -7,12 +7,9 @@ from odoo import api, fields, models
 class CRMSettings(models.TransientModel):
     _inherit = 'sale.config.settings'
 
-    generate_sales_team_alias = fields.Boolean("Automatically generate an email alias at the sales channel creation",
-        help="Odoo will generate an email alias based on the sales channel name")
     alias_prefix = fields.Char('Default Alias Name for Leads')
     alias_domain = fields.Char('Alias Domain', default=lambda self: self.env["ir.config_parameter"].sudo().get_param("mail.catchall.domain"))
-    # TDE TODO: as it is not linked to ir.values anymore, it should be renamed, but not in stable
-    default_generate_lead_from_alias = fields.Boolean('Manual Assignation of Emails')
+    generate_lead_from_alias = fields.Boolean('Manual Assignation of Emails')
     group_use_lead = fields.Boolean(string="Leads", implied_group='crm.group_use_lead')
     module_crm_phone_validation = fields.Boolean("Phone Validation")
     module_crm_voip = fields.Boolean("Asterisk (VoIP)")
@@ -29,41 +26,15 @@ class CRMSettings(models.TransientModel):
             ], limit=1)
         return alias
 
-    @api.model
-    def get_default_generate_sales_team_alias(self, fields):
-        return {
-            'generate_sales_team_alias': self.env['ir.values'].get_default('sale.config.settings', 'generate_sales_team_alias')
-        }
-
-    @api.multi
-    def set_default_generate_sales_team_alias(self):
-        IrValues = self.env['ir.values']
-        if self.env['res.users'].has_group('base.group_erp_manager'):
-            IrValues = IrValues.sudo()
-        IrValues.set_default('sale.config.settings', 'generate_sales_team_alias', self.generate_sales_team_alias)
-
-    @api.model
-    def get_default_default_generate_lead_from_alias(self, fields):
-        return {
-            'default_generate_lead_from_alias': self.env['ir.config_parameter'].sudo().get_param('sale_config_settings.default_generate_lead_from_alias')
-        }
-
-    @api.multi
-    def set_default_default_generate_lead_from_alias(self):
-        self.env['ir.config_parameter'].sudo().set_param('sale_config_settings.default_generate_lead_from_alias', self.default_generate_lead_from_alias)
-
     @api.onchange('group_use_lead')
     def _onchange_group_use_lead(self):
         """ Reset alias / leads configuration if leads are not used """
         if not self.group_use_lead:
-            self.default_generate_lead_from_alias = False
+            self.generate_lead_from_alias = False
 
-    @api.onchange('default_generate_lead_from_alias')
-    def _onchange_default_generate_lead_from_alias(self):
-        if self.default_generate_lead_from_alias:
-            self.alias_prefix = self.alias_prefix or 'info'
-        else:
-            self.alias_prefix = False
+    @api.onchange('generate_lead_from_alias')
+    def _onchange_generate_lead_from_alias(self):
+        self.alias_prefix = 'info' if self.generate_lead_from_alias else False
 
     @api.model
     def get_default_alias_prefix(self, fields):
@@ -80,3 +51,13 @@ class CRMSettings(models.TransientModel):
                 self.env['mail.alias'].with_context(alias_model_name='crm.lead', alias_parent_model_name='crm.team').create({'alias_name': record.alias_prefix})
 
         return True
+
+    @api.model
+    def get_default_generate_lead_from_alias(self, fields):
+        return {
+            'generate_lead_from_alias': self.env['ir.config_parameter'].sudo().get_param('crm.generate_lead_from_alias')
+        }
+
+    @api.multi
+    def set_generate_lead_from_alias(self):
+        self.env['ir.config_parameter'].sudo().set_param('crm.generate_lead_from_alias', self.generate_lead_from_alias)
