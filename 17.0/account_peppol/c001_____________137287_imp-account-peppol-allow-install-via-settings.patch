PR: https://github.com/odoo/odoo/pull/137287

From: 5801ec664dd2fc618b2f6fbab508abda76952b78
From: Dylan Kiss (dyki)
Date: 2023-10-11 17:02:00

Breaking data model changes scores: del:1 + add:0, change matches:
-    is_account_peppol_eligible = fields.Boolean(

Total Changes: 37

[IMP] account{_peppol}: allow install via settings

Currently it is not easily discoverable that users can install the
PEPPOL module. They have to go to the Apps list and search for PEPPOL
there.

In order to make the installation easy and discoverable, we added a
checkbox to the Invoicing/Accounting settings to install the module and
afterwards show the checkbox to enable PEPPOL per company.

The install checkbox is only shown when editing the settings of a
company that is eligible for PEPPOL to avoid confusion. In order to do
that, we created a `PEPPOL_LIST` variable in `account` containing all
countries currently allowed to use PEPPOL. The code in `account_peppol`
formerly using the `EAS_MAPPING` variable of the `account_edi_ubl_cii`
module is now also using this new list.

task-3519564

closes odoo/odoo#137287

Signed-off-by: Laurent Smet (las) <las@odoo.com>

================================= pseudo patch: =================================

--- a/addons/account_peppol/models/res_company.py
+++ b/addons/account_peppol/models/res_company.py
@@ -6,15 +6,13 @@ from stdnum import get_cc_module, ean
 
 from odoo import _, api, fields, models
 from odoo.exceptions import ValidationError
-from odoo.addons.account_edi_ubl_cii.models.account_edi_common import EAS_MAPPING
+from odoo.addons.account.models.company import PEPPOL_LIST
 
 try:
     import phonenumbers
 except ImportError:
     phonenumbers = None
 
-# at the moment, only phone numbers in European countries are accepted
-PHONE_ALLOWED_COUNTRIES = set(EAS_MAPPING.keys()) - {'AU', 'SG', 'NZ'}
 
 PEPPOL_ENDPOINT_RULES = {
     '0007': ['se', 'orgnr'],
@@ -95,7 +93,7 @@ class ResCompany(models.Model):
             raise ValidationError(error_message)
 
         country_code = phonenumbers.phonenumberutil.region_code_for_number(phone_nbr)
-        if country_code not in PHONE_ALLOWED_COUNTRIES or not phonenumbers.is_valid_number(phone_nbr):
+        if country_code not in PEPPOL_LIST or not phonenumbers.is_valid_number(phone_nbr):
             raise ValidationError(error_message)
 
     def _check_peppol_endpoint_number(self, warning=False):

--- a/addons/account_peppol/models/res_config_settings.py
+++ b/addons/account_peppol/models/res_config_settings.py
@@ -5,10 +5,6 @@ from odoo import _, api, fields, models, modules, tools
 from odoo.exceptions import UserError, ValidationError
 
 from odoo.addons.account_edi_proxy_client.models.account_edi_proxy_user import AccountEdiProxyError
-from odoo.addons.account_edi_ubl_cii.models.account_edi_common import EAS_MAPPING
-
-# at the moment, only European countries are accepted
-ALLOWED_COUNTRIES = set(EAS_MAPPING.keys()) - {'AU', 'SG', 'NZ'}
 
 
 class ResConfigSettings(models.TransientModel):
@@ -32,15 +28,14 @@ class ResConfigSettings(models.TransientModel):
     account_peppol_proxy_state = fields.Selection(related='company_id.account_peppol_proxy_state', readonly=False)
     account_peppol_purchase_journal_id = fields.Many2one(related='company_id.peppol_purchase_journal_id', readonly=False)
     account_peppol_verification_code = fields.Char(related='account_peppol_edi_user.peppol_verification_code', readonly=False)
-    is_account_peppol_eligible = fields.Boolean(
-        string='PEPPOL eligible',
-        compute='_compute_is_account_peppol_eligible',
-    ) # technical field used for showing the Peppol settings conditionally
     is_account_peppol_participant = fields.Boolean(
         string='Use PEPPOL',
         related='company_id.is_account_peppol_participant', readonly=False,
         help='Register as a PEPPOL user',
     )
+    has_peppol_participant = fields.Boolean(
+        compute='_compute_has_peppol_participant'
+    )
 
     # -------------------------------------------------------------------------
     # HELPER METHODS
@@ -67,18 +62,6 @@ class ResConfigSettings(models.TransientModel):
     # COMPUTE METHODS
     # -------------------------------------------------------------------------
 
-    @api.depends("company_id.country_id")
-    def _compute_is_account_peppol_eligible(self):
-        # we want to show Peppol settings only to customers that are eligible for Peppol,
-        # except countries that are not in Europe
-        # but keeping an option to see them for testing purposes using a config param
-        for config in self:
-            peppol_param = config.env['ir.config_parameter'].sudo().get_param(
-                'account_peppol.edi.mode', False
-            )
-            config.is_account_peppol_eligible = config.company_id.country_id.code in ALLOWED_COUNTRIES \
-                or peppol_param == 'test'
-
     @api.depends("company_id.account_edi_proxy_client_ids")
     def _compute_account_peppol_edi_user(self):
         for config in self:
@@ -97,6 +80,14 @@ class ResConfigSettings(models.TransientModel):
                 config.account_peppol_endpoint_warning = _("The endpoint number might not be correct. "
                                                            "Please check if you entered the right identification number.")
 
+    @api.depends('company_id.is_account_peppol_participant')
+    def _compute_has_peppol_participant(self):
+        number_of_peppol_participants = len(self.env['res.company'].sudo().search([
+            ('is_account_peppol_participant', '=', True)
+        ]))
+        for config in self:
+            config.has_peppol_participant = number_of_peppol_participants > 0
+
     # -------------------------------------------------------------------------
     # BUSINESS ACTIONS
     # -------------------------------------------------------------------------
