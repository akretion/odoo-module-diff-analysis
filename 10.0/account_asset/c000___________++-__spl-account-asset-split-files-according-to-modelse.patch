PR: https://github.com/odoo/odoo/pull/

From: d43cdd696ccd8e6f2c477a2e756f9a300120cbce
From: Thibault Delavallée
Date: 2016-08-05 09:04:02

Structural Changes: 12
Total Changes: 82

[SPL] account_asset: split files according to modelsé

================================= pseudo patch: =================================

--- a/addons/account_asset/models/__init__.py
+++ b/addons/account_asset/models/__init__.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
+import account
 import account_asset
-import account_asset_invoice
+import account_invoice
+import product

--- a/None
+++ b/addons/account_asset/models/account.py
@@ -0,0 +1,23 @@
+# -*- coding: utf-8 -*-
+
+from openerp import api, fields, models
+
+
+class AccountMove(models.Model):
+    _inherit = 'account.move'
+
+    asset_depreciation_ids = fields.One2many('account.asset.depreciation.line', 'move_id', string='Assets Depreciation Lines', ondelete="restrict")
+
+    @api.multi
+    def button_cancel(self):
+        for move in self:
+            for line in move.asset_depreciation_ids:
+                line.move_posted_check = False
+        return super(AccountMove, self).button_cancel()
+
+    @api.multi
+    def post(self):
+        for move in self:
+            for depreciation_line in move.asset_depreciation_ids:
+                depreciation_line.post_lines_and_close_asset()
+        return super(AccountMove, self).post()

--- a/addons/account_asset/models/account_asset.py
+++ b/addons/account_asset/models/account_asset.py
@@ -573,23 +573,3 @@ class AccountAssetDepreciationLine(models.Model):
                     msg = _("You cannot delete posted installment lines.")
                 raise UserError(msg)
         return super(AccountAssetDepreciationLine, self).unlink()
-
-
-class AccountMove(models.Model):
-    _inherit = 'account.move'
-
-    asset_depreciation_ids = fields.One2many('account.asset.depreciation.line', 'move_id', string='Assets Depreciation Lines', ondelete="restrict")
-
-    @api.multi
-    def button_cancel(self):
-        for move in self:
-            for line in move.asset_depreciation_ids:
-                line.move_posted_check = False
-        return super(AccountMove, self).button_cancel()
-
-    @api.multi
-    def post(self):
-        for move in self:
-            for depreciation_line in move.asset_depreciation_ids:
-                depreciation_line.post_lines_and_close_asset()
-        return super(AccountMove, self).post()

--- a/addons/account_asset/models/account_invoice.py
+++ b/addons/account_asset/models/account_invoice.py
@@ -103,19 +103,3 @@ class AccountInvoiceLine(models.Model):
             elif invoice.type == 'in_invoice':
                 self.asset_category_id = self.product_id.product_tmpl_id.asset_category_id.id
         super(AccountInvoiceLine, self)._set_additional_fields(invoice)
-
-
-class ProductTemplate(models.Model):
-    _inherit = 'product.template'
-    asset_category_id = fields.Many2one('account.asset.category', string='Asset Type', company_dependent=True, ondelete="restrict")
-    deferred_revenue_category_id = fields.Many2one('account.asset.category', string='Deferred Revenue Type', company_dependent=True, ondelete="restrict")
-
-
-    @api.multi
-    def _get_asset_accounts(self):
-        res = super(ProductTemplate, self)._get_asset_accounts()
-        if self.asset_category_id:
-            res['stock_input'] = self.property_account_expense_id
-        if self.deferred_revenue_category_id:
-            res['stock_output'] = self.property_account_income_id
-        return res
\ No newline at end of file

--- a/None
+++ b/addons/account_asset/models/product.py
@@ -0,0 +1,19 @@
+# -*- coding: utf-8 -*-
+
+from openerp import api, fields, models
+
+
+class ProductTemplate(models.Model):
+    _inherit = 'product.template'
+
+    asset_category_id = fields.Many2one('account.asset.category', string='Asset Type', company_dependent=True, ondelete="restrict")
+    deferred_revenue_category_id = fields.Many2one('account.asset.category', string='Deferred Revenue Type', company_dependent=True, ondelete="restrict")
+
+    @api.multi
+    def _get_asset_accounts(self):
+        res = super(ProductTemplate, self)._get_asset_accounts()
+        if self.asset_category_id:
+            res['stock_input'] = self.property_account_expense_id
+        if self.deferred_revenue_category_id:
+            res['stock_output'] = self.property_account_income_id
+        return res
