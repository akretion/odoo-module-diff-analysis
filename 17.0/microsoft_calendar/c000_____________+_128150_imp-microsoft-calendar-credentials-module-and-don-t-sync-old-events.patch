PR: https://github.com/odoo/odoo/pull/128150

From: 69d23262f847a173bde8d2c2efd95c3f8c429a43
From: Gabriel de Paula Felix (gdpf)
Date: 2023-09-12 20:52:14

Structural Changes: 4
Total Changes: 72

[IMP] microsoft_calendar: Credentials module and don't sync old events

Before this commit, when the first synchronization with Outlook Calendar was done or when the synchronization was restarted, all events previously created in Odoo (before synchronizing) were being synced with Outlook, triggering lots of emails and notifications for attendees. Additionaly, all microsoft credentials information were concentrated within the res_users file, difficulting updates in this file.

After this commit, only events created or updated after the synchronization starts (or restarts) are synced with Outlook Calendar, with 5 minutes of time acceptance for avoiding network delay issues. Moreover, a Microsoft Credentials module was added for gathering microsoft credentials in one place.

closes odoo/odoo#128150

Task-id: 3410651
Related: odoo/upgrade#5047
Signed-off-by: Arnaud Joset (arj) <arj@odoo.com>

================================= pseudo patch: =================================

--- a/addons/microsoft_calendar/models/__init__.py
+++ b/addons/microsoft_calendar/models/__init__.py
@@ -7,3 +7,4 @@ from . import calendar
 from . import calendar_recurrence_rule
 from . import res_users
 from . import calendar_attendee
+from . import microsoft_credentials

--- a/addons/microsoft_calendar/models/calendar.py
+++ b/addons/microsoft_calendar/models/calendar.py
@@ -4,7 +4,7 @@
 import logging
 import pytz
 import re
-from datetime import datetime
+from datetime import datetime, timedelta
 from dateutil.parser import parse
 from dateutil.relativedelta import relativedelta
 
@@ -12,6 +12,7 @@ from odoo import api, fields, models, _
 from odoo.exceptions import UserError, ValidationError
 from odoo.tools import is_html_empty, email_normalize
 from odoo.addons.microsoft_calendar.utils.event_id_storage import combine_ids
+from odoo.osv import expression
 
 ATTENDEE_CONVERTER_O2M = {
     'needsAction': 'notresponded',
@@ -53,7 +54,14 @@ class Meeting(models.Model):
 
     @api.model
     def _restart_microsoft_sync(self):
-        self.env['calendar.event'].search(self._get_microsoft_sync_domain()).write({
+        domain = self._get_microsoft_sync_domain()
+
+        # Sync only events created/updated after last sync date (with 5 min of time acceptance).
+        if self.env.user.microsoft_last_sync_date:
+            time_offset = timedelta(minutes=5)
+            domain = expression.AND([domain, [('write_date', '>=', self.env.user.microsoft_last_sync_date - time_offset)]])
+
+        self.env['calendar.event'].search(domain).write({
             'need_sync_m': True,
         })
 

--- a/None
+++ b/addons/microsoft_calendar/models/microsoft_credentials.py
@@ -0,0 +1,16 @@
+import logging
+
+from odoo import fields, models
+
+_logger = logging.getLogger(__name__)
+
+class MicrosoftCredentials(models.Model):
+    """"Microsoft Account of res_users"""
+
+    _name = 'microsoft.calendar.credentials'
+    _description = 'Microsoft Calendar Account Data'
+
+    user_ids = fields.One2many('res.users', 'microsoft_calendar_account_id', required=True)
+    calendar_sync_token = fields.Char('Microsoft Next Sync Token', copy=False)
+    synchronization_stopped = fields.Boolean('Outlook Synchronization stopped', copy=False)
+    last_sync_date = fields.Datetime('Last Sync Date', copy=False, help='Last synchronization date with Outlook Calendar')

--- a/addons/microsoft_calendar/models/microsoft_sync.py
+++ b/addons/microsoft_calendar/models/microsoft_sync.py
@@ -6,6 +6,7 @@ from contextlib import contextmanager
 from functools import wraps
 import pytz
 from dateutil.parser import parse
+from datetime import timedelta
 
 from odoo import api, fields, models, registry
 from odoo.exceptions import UserError
@@ -519,4 +520,8 @@ class MicrosoftSync(models.AbstractModel):
                 '&', ('ms_universal_event_id', '=', False), is_active_clause,
                 ('need_sync_m', '=', True),
             ]])
+        # Sync only events created/updated after last sync date (with 5 min of time acceptance).
+        if self.env.user.microsoft_last_sync_date:
+            time_offset = timedelta(minutes=5)
+            domain = expression.AND([domain, [('write_date', '>=', self.env.user.microsoft_last_sync_date - time_offset)]])
         return domain

--- a/addons/microsoft_calendar/models/res_users.py
+++ b/addons/microsoft_calendar/models/res_users.py
@@ -6,7 +6,7 @@ import requests
 from odoo.addons.microsoft_calendar.models.microsoft_sync import microsoft_calendar_token
 from datetime import timedelta
 
-from odoo import api, fields, models, _
+from odoo import api, fields, models, _, Command
 from odoo.exceptions import UserError
 from odoo.loglevels import exception_to_unicode
 from odoo.addons.microsoft_account.models.microsoft_service import DEFAULT_MICROSOFT_TOKEN_ENDPOINT
@@ -19,16 +19,22 @@ _logger = logging.getLogger(__name__)
 class User(models.Model):
     _inherit = 'res.users'
 
-    microsoft_calendar_sync_token = fields.Char('Microsoft Next Sync Token', copy=False)
-    microsoft_synchronization_stopped = fields.Boolean('Outlook Synchronization stopped', copy=False)
+    microsoft_calendar_account_id = fields.Many2one('microsoft.calendar.credentials')
+    microsoft_calendar_sync_token = fields.Char(related='microsoft_calendar_account_id.calendar_sync_token')
+    microsoft_synchronization_stopped = fields.Boolean(related='microsoft_calendar_account_id.synchronization_stopped', readonly=False)
+    microsoft_last_sync_date = fields.Datetime(related='microsoft_calendar_account_id.last_sync_date', readonly=False)
+
+    _sql_constraints = [
+        ('microsoft_token_uniq', 'unique (microsoft_calendar_account_id)', "The user has already a microsoft account"),
+    ]
 
     @property
     def SELF_READABLE_FIELDS(self):
-        return super().SELF_READABLE_FIELDS + ['microsoft_synchronization_stopped']
+        return super().SELF_READABLE_FIELDS + ['microsoft_synchronization_stopped', 'microsoft_calendar_account_id', 'microsoft_last_sync_date']
 
     @property
     def SELF_WRITEABLE_FIELDS(self):
-        return super().SELF_WRITEABLE_FIELDS + ['microsoft_synchronization_stopped']
+        return super().SELF_WRITEABLE_FIELDS + ['microsoft_synchronization_stopped', 'microsoft_calendar_account_id', 'microsoft_last_sync_date']
 
     def _microsoft_calendar_authenticated(self):
         return bool(self.sudo().microsoft_calendar_rtoken)
@@ -79,7 +85,9 @@ class User(models.Model):
                     'microsoft_calendar_rtoken': False,
                     'microsoft_calendar_token': False,
                     'microsoft_calendar_token_validity': False,
-                    'microsoft_calendar_sync_token': False,
+                })
+                self.microsoft_calendar_account_id.write({
+                    'calendar_sync_token': False
                 })
                 self.env.cr.commit()
             error_key = error.response.json().get("error", "nc")
@@ -100,6 +108,10 @@ class User(models.Model):
 
     def _sync_microsoft_calendar(self):
         self.ensure_one()
+        # Create the Calendar Credentials if it is not defined yet and define the last sync date after creation.
+        if not self.microsoft_calendar_account_id and self._check_microsoft_calendar_credentials():
+            self.microsoft_last_sync_date = fields.datetime.now()
+
         if self._get_microsoft_sync_status() != "sync_active":
             return False
         calendar_service = self.env["calendar.event"]._get_microsoft_service()
@@ -110,7 +122,7 @@ class User(models.Model):
             except InvalidSyncToken:
                 events, next_sync_token = calendar_service.get_events(token=token)
                 full_sync = True
-        self.microsoft_calendar_sync_token = next_sync_token
+        self.microsoft_calendar_account_id.calendar_sync_token = next_sync_token
 
         # Microsoft -> Odoo
         synced_events, synced_recurrences = self.env['calendar.event']._sync_microsoft2odoo(events) if events else (self.env['calendar.event'], self.env['calendar.recurrence'])
@@ -123,6 +135,7 @@ class User(models.Model):
 
         events = self.env['calendar.event']._get_microsoft_records_to_sync(full_sync=full_sync)
         (events - synced_events)._sync_odoo2microsoft()
+        self.microsoft_last_sync_date = fields.datetime.now()
 
         return bool(events | synced_events) or bool(recurrences | synced_recurrences)
 
@@ -139,12 +152,23 @@ class User(models.Model):
                 _logger.exception("[%s] Calendar Synchro - Exception : %s!", user, exception_to_unicode(e))
                 self.env.cr.rollback()
 
+    def _check_microsoft_calendar_credentials(self):
+        # Create the Calendar Credentials for the current user if not already created.
+        self.ensure_one()
+        if not self.microsoft_calendar_account_id:
+            self.microsoft_calendar_account_id = self.env['microsoft.calendar.credentials'].sudo().create([{'user_ids': [Command.set(self.ids)]}])
+        return True
+
     def stop_microsoft_synchronization(self):
         self.ensure_one()
+        self._check_microsoft_calendar_credentials()
         self.microsoft_synchronization_stopped = True
+        self.microsoft_last_sync_date = None
 
     def restart_microsoft_synchronization(self):
         self.ensure_one()
+        self._check_microsoft_calendar_credentials()
+        self.microsoft_last_sync_date = fields.datetime.now()
         self.microsoft_synchronization_stopped = False
         self.env['calendar.recurrence']._restart_microsoft_sync()
         self.env['calendar.event']._restart_microsoft_sync()
