PR: https://github.com/odoo/odoo/pull/125642

From: 0479b2b59466ae1d6d74165345aa3a7dc5de24ed
From: william-andre
Date: 2023-07-20 09:49:06

Structural Changes: 19
Total Changes: 34

[IMP] account,*: manage subsidiary companies

Allow sharing records between company
* accounts
* taxes
* fiscal positions
* products
* ...and some related models

These records can be read and used in children companies.

This can be used to
* have different branding for different businesses
* allow more complex security rules
* consolidate branches differently
* manage different tax reports with different tax ids in the same
  country

task-3371677

closes odoo/odoo#125642

Related: odoo/enterprise#43215
Signed-off-by: Quentin De Paoli <qdp@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr/models/hr_department.py
+++ b/addons/hr/models/hr_department.py
@@ -17,9 +17,9 @@ class Department(models.Model):
     complete_name = fields.Char('Complete Name', compute='_compute_complete_name', recursive=True, store=True)
     active = fields.Boolean('Active', default=True)
     company_id = fields.Many2one('res.company', string='Company', index=True, default=lambda self: self.env.company)
-    parent_id = fields.Many2one('hr.department', string='Parent Department', index=True, domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]")
+    parent_id = fields.Many2one('hr.department', string='Parent Department', index=True, check_company=True)
     child_ids = fields.One2many('hr.department', 'parent_id', string='Child Departments')
-    manager_id = fields.Many2one('hr.employee', string='Manager', tracking=True, domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]")
+    manager_id = fields.Many2one('hr.employee', string='Manager', tracking=True, check_company=True)
     member_ids = fields.One2many('hr.employee', 'department_id', string='Members', readonly=True)
     total_employee = fields.Integer(compute='_compute_total_employee', string='Total Employee')
     jobs_ids = fields.One2many('hr.job', 'department_id', string='Jobs')

--- a/addons/hr/models/hr_employee.py
+++ b/addons/hr/models/hr_employee.py
@@ -404,7 +404,7 @@ class HrEmployeePrivate(models.Model):
             if vals['work_contact_id']:
                 self._message_subscribe([vals['work_contact_id']])
         if 'user_id' in vals:
-            # Update the profile pictures with user, except if provided 
+            # Update the profile pictures with user, except if provided
             vals.update(self._sync_user(self.env['res.users'].browse(vals['user_id']),
                                         (bool(self.image_1920))))
         if 'work_permit_expiration_date' in vals:

--- a/addons/hr/models/hr_employee_base.py
+++ b/addons/hr/models/hr_employee_base.py
@@ -19,28 +19,29 @@ class HrEmployeeBase(models.AbstractModel):
     name = fields.Char()
     active = fields.Boolean("Active")
     color = fields.Integer('Color Index', default=0)
-    department_id = fields.Many2one('hr.department', 'Department', domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]")
+    department_id = fields.Many2one('hr.department', 'Department', check_company=True)
     member_of_department = fields.Boolean("Member of department", compute='_compute_part_of_department', search='_search_part_of_department',
         help="Whether the employee is a member of the active user's department or one of it's child department.")
-    job_id = fields.Many2one('hr.job', 'Job Position', domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]")
+    job_id = fields.Many2one('hr.job', 'Job Position', check_company=True)
     job_title = fields.Char("Job Title", compute="_compute_job_title", store=True, readonly=False)
     company_id = fields.Many2one('res.company', 'Company')
     address_id = fields.Many2one('res.partner', 'Work Address', compute="_compute_address_id", store=True, readonly=False,
-        domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]")
+        check_company=True)
     work_phone = fields.Char('Work Phone', compute="_compute_phones", store=True, readonly=False)
     mobile_phone = fields.Char('Work Mobile', compute="_compute_work_contact_details", store=True, inverse='_inverse_work_contact_details')
     work_email = fields.Char('Work Email', compute="_compute_work_contact_details", store=True, inverse='_inverse_work_contact_details')
     work_contact_id = fields.Many2one('res.partner', 'Work Contact', copy=False)
     work_location_id = fields.Many2one('hr.work.location', 'Work Location', compute="_compute_work_location_id", store=True, readonly=False,
-    domain="[('address_id', '=', address_id), '|', ('company_id', '=', False), ('company_id', '=', company_id)]")
+        check_company=True,
+        domain="[('address_id', '=', address_id)]")
     user_id = fields.Many2one('res.users')
     resource_id = fields.Many2one('resource.resource')
-    resource_calendar_id = fields.Many2one('resource.calendar', domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]")
+    resource_calendar_id = fields.Many2one('resource.calendar', check_company=True)
     parent_id = fields.Many2one('hr.employee', 'Manager', compute="_compute_parent_id", store=True, readonly=False,
-        domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]")
+        check_company=True)
     coach_id = fields.Many2one(
         'hr.employee', 'Coach', compute='_compute_coach', store=True, readonly=False,
-        domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]",
+        check_company=True,
         help='Select the "Employee" who is the coach of this employee.\n'
              'The "Coach" has no specific rights or responsibilities by default.')
     tz = fields.Selection(

--- a/addons/hr/models/hr_job.py
+++ b/addons/hr/models/hr_job.py
@@ -26,7 +26,7 @@ class Job(models.Model):
     employee_ids = fields.One2many('hr.employee', 'job_id', string='Employees', groups='base.group_user')
     description = fields.Html(string='Job Description', sanitize_attributes=False)
     requirements = fields.Text('Requirements')
-    department_id = fields.Many2one('hr.department', string='Department', domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]")
+    department_id = fields.Many2one('hr.department', string='Department', check_company=True)
     company_id = fields.Many2one('res.company', string='Company', default=lambda self: self.env.company)
     contract_type_id = fields.Many2one('hr.contract.type', string='Employment Type')
 

--- a/addons/hr/models/hr_plan.py
+++ b/addons/hr/models/hr_plan.py
@@ -15,7 +15,7 @@ class HrPlan(models.Model):
     plan_activity_type_ids = fields.One2many(
         'hr.plan.activity.type', 'plan_id',
         string='Activities',
-        domain="[('company_id', '=', company_id)]")
+        check_company=True)
     active = fields.Boolean(default=True)
     steps_count = fields.Integer(compute='_compute_steps_count')
 

--- a/addons/hr/models/hr_work_location.py
+++ b/addons/hr/models/hr_work_location.py
@@ -12,5 +12,5 @@ class WorkLocation(models.Model):
     active = fields.Boolean(default=True)
     name = fields.Char(string="Work Location", required=True)
     company_id = fields.Many2one('res.company', required=True, default=lambda self: self.env.company)
-    address_id = fields.Many2one('res.partner', required=True, string="Work Address", domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]")
+    address_id = fields.Many2one('res.partner', required=True, string="Work Address", check_company=True)
     location_number = fields.Char()

--- a/addons/hr/models/res_users.py
+++ b/addons/hr/models/res_users.py
@@ -242,7 +242,10 @@ class User(models.Model):
             # Raise meaningful error message
             raise AccessError(_("You are only allowed to update your preferences. Please contact a HR officer to update other information."))
 
-        employee_domain = [('user_id', 'in', self.ids), ('company_id', '=', self.env.company.id)]
+        employee_domain = [
+            *self.env['hr.employee']._check_company_domain(self.env.company),
+            ('user_id', 'in', self.ids),
+        ]
         if hr_fields:
             employees = self.env['hr.employee'].sudo().search(employee_domain)
             get_field = self.env['ir.model.fields']._get

--- a/addons/hr/models/resource.py
+++ b/addons/hr/models/resource.py
@@ -8,4 +8,4 @@ class ResourceResource(models.Model):
     _inherit = "resource.resource"
 
     user_id = fields.Many2one(copy=False)
-    employee_id = fields.One2many('hr.employee', 'resource_id', domain="[('company_id', '=', company_id)]")
+    employee_id = fields.One2many('hr.employee', 'resource_id', check_company=True)
