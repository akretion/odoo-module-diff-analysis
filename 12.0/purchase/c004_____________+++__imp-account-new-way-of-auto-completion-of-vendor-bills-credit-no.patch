PR: https://github.com/odoo/odoo/pull/

From: 051dfea35e21ad2e249acc08c91a553a7ef6a4aa
From: Fabien Pinckaers
Date: 2018-04-25 15:12:15

Structural Changes: 12
Total Changes: 86

[IMP] account: new way of auto-completion of vendor bills/credit notes

This adds the possibilty to select another account.invoice object in a vendor bill or credit note, to automatically copy its lines.

When the purchase app is installed, the same field can be used for auto-completion and users can choose between vendor bills or purchase orders (preferably PO)

Co-authored-by: dat@openerp.com

================================= pseudo patch: =================================

--- a/addons/purchase/models/__init__.py
+++ b/addons/purchase/models/__init__.py
@@ -3,6 +3,7 @@
 
 from . import account_invoice
 from . import purchase
+from . import purchase_bill
 from . import res_company
 from . import res_config_settings
 from . import res_partner

--- a/addons/purchase/models/account_invoice.py
+++ b/addons/purchase/models/account_invoice.py
@@ -4,16 +4,14 @@
 from odoo import api, fields, models, _
 from odoo.tools.float_utils import float_compare
 
-from odoo.exceptions import UserError
 
 class AccountInvoice(models.Model):
     _inherit = 'account.invoice'
-
     purchase_id = fields.Many2one(
         comodel_name='purchase.order',
         string='Add Purchase Order',
         readonly=True, states={'draft': [('readonly', False)]},
-        help='Encoding help. When selected, the associated purchase order lines are added to the vendor bill. Several PO can be selected.'
+        help='Load the vendor bill based on selected purchase order. Several PO can be selected.'
     )
 
     @api.onchange('state', 'partner_id', 'invoice_line_ids')
@@ -29,7 +27,7 @@ class AccountInvoice(models.Model):
         purchase_ids = self.invoice_line_ids.mapped('purchase_id').filtered(lambda r: r.order_line <= purchase_line_ids)
 
         result['domain'] = {'purchase_id': [
-            ('invoice_status', '=', 'to invoice'),
+            ('invoice_status', 'in', ['to invoice', 'no']),
             ('partner_id', 'child_of', self.partner_id.id),
             ('id', 'not in', purchase_ids.ids),
             ]}
@@ -48,7 +46,7 @@ class AccountInvoice(models.Model):
         date = self.date_invoice
         data = {
             'purchase_line_id': line.id,
-            'name': line.order_id.name+': '+line.name,
+            'name': line.order_id.name + ': ' + line.name,
             'origin': line.order_id.origin,
             'uom_id': line.product_uom.id,
             'product_id': line.product_id.id,
@@ -243,7 +241,7 @@ class AccountInvoice(models.Model):
         invoice = super(AccountInvoice, self).create(vals)
         purchase = invoice.invoice_line_ids.mapped('purchase_line_id.order_id')
         if purchase and not invoice.refund_invoice_id:
-            message = _("This vendor bill has been created from: %s") % (",".join(["<a href=# data-oe-model=purchase.order data-oe-id="+str(order.id)+">"+order.name+"</a>" for order in purchase]))
+            message = _("This vendor bill has been created from: %s") % (",".join(["<a href=# data-oe-model=purchase.order data-oe-id=" + str(order.id) + ">" + order.name + "</a>" for order in purchase]))
             invoice.message_post(body=message)
         return invoice
 
@@ -257,7 +255,7 @@ class AccountInvoice(models.Model):
             #To get all po reference when updating invoice line or adding purchase order reference from vendor bill.
             purchase = (purchase_old | purchase_new) - (purchase_old & purchase_new)
             if purchase:
-                message = _("This vendor bill has been modified from: %s") % (",".join(["<a href=# data-oe-model=purchase.order data-oe-id="+str(order.id)+">"+order.name+"</a>" for order in purchase]))
+                message = _("This vendor bill has been modified from: %s") % (",".join(["<a href=# data-oe-model=purchase.order data-oe-id=" + str(order.id) + ">" + order.name + "</a>" for order in purchase]))
                 invoice.message_post(body=message)
         return result
 

--- a/None
+++ b/addons/purchase/models/purchase_bill.py
@@ -0,0 +1,73 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import api, fields, models, tools
+from odoo.tools import formatLang
+
+class PurchaseBillUnion(models.Model):
+    _name = 'purchase.bill.union'
+    _auto = False
+    _description = 'Bills & Purchases'
+    _order = "purchase_order_id desc, vendor_bill_id desc"
+
+    name = fields.Char(string='Reference', readonly=True)
+    reference = fields.Char(string='Source', readonly=True)
+    partner_id = fields.Many2one('res.partner', string='Vendor', readonly=True)
+    date = fields.Date(string='Date', readonly=True)
+    amount = fields.Float(string='Amount', readonly=True)
+    currency_id = fields.Many2one('res.currency', string='Currency', readonly=True)
+    company_id = fields.Many2one('res.company', 'Company', readonly=True)
+    vendor_bill_id = fields.Many2one('account.invoice', string='Vendor Bill', readonly=True)
+    purchase_order_id = fields.Many2one('purchase.order', string='Purchase Order', readonly=True)
+
+    @api.model_cr
+    def init(self):
+        tools.drop_view_if_exists(self.env.cr, 'purchase_bill_union')
+        self.env.cr.execute("""
+            CREATE OR REPLACE VIEW purchase_bill_union AS (
+                SELECT
+                    id, number as name, reference, partner_id, date, amount_untaxed as amount, currency_id, company_id,
+                    id as vendor_bill_id, NULL as purchase_order_id
+                FROM account_invoice
+                WHERE
+                    type='in_invoice' and state in ('open','paid','cancel')
+            UNION
+                SELECT
+                    -id, name, partner_ref, partner_id, date_order as date, amount_untaxed as amount, currency_id, company_id,
+                    NULL as vendor_bill_id, id as purchase_order_id
+                FROM purchase_order
+                WHERE
+                    state = 'purchase' AND
+                    invoice_status in ('to invoice', 'no')
+            )""")
+
+    def name_get(self):
+        result = []
+        for doc in self:
+            name = doc.name or ''
+            if doc.reference:
+                name += ' - ' + doc.reference
+            amount = doc.amount
+            if doc.purchase_order_id and doc.purchase_order_id.invoice_status == 'no':
+                amount = 0.0
+            name += ': ' + formatLang(self.env, amount, monetary=True, currency_obj=doc.currency_id)
+            result.append((doc.id, name))
+        return result
+
+
+class AccountInvoice(models.Model):
+    _inherit = 'account.invoice'
+
+    vendor_bill_purchase_id = fields.Many2one(
+        comodel_name='purchase.bill.union',
+        string='Auto-Complete'
+    )
+
+    @api.onchange('vendor_bill_purchase_id')
+    def _onchange_bill_purchase_order(self):
+        if not self.vendor_bill_purchase_id:
+            return {}
+        self.purchase_id = self.vendor_bill_purchase_id.purchase_order_id
+        self.vendor_bill_id = self.vendor_bill_purchase_id.vendor_bill_id
+        self.vendor_bill_purchase_id = False
+        return {}
