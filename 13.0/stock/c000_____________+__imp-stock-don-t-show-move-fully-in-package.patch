PR: https://github.com/odoo/odoo/pull/

From: 07bef887af5d982b6b007e790c625d5289926953
From: Pierre Masereel
Date: 2018-11-05 14:42:07

Structural Changes: 4
Total Changes: 39

[IMP] stock: don't show move fully in package

When the move lines in a move are all linked to a package level,
we don't want to see the move anymore. We cannot keep only a domain on
moves their-selves as it depends on the move lines linked to it.

So we use a compute field to filter the moves to show, and the inverse
function just appends the new/modified moves to the move_lines.

TASK-ID: 1865671

================================= pseudo patch: =================================

--- a/addons/stock/models/stock_package_level.py
+++ b/addons/stock/models/stock_package_level.py
@@ -28,6 +28,7 @@ class StockPackageLevel(models.Model):
     is_fresh_package = fields.Boolean(compute='_compute_fresh_pack')
 
     picking_source_location = fields.Many2one('stock.location', related='picking_id.location_id', readonly=False)
+    picking_type_code = fields.Selection(related='picking_id.picking_type_code')
     show_lots_m2o = fields.Boolean(compute='_compute_show_lot')
     show_lots_text = fields.Boolean(compute='_compute_show_lot')
 
@@ -182,3 +183,20 @@ class StockPackageLevel(models.Model):
                 pl.location_id = pl.move_line_ids[0].location_id
             else:
                 pl.location_id = pl.picking_id.location_id
+
+    def action_show_package_details(self):
+        self.ensure_one()
+        view = self.env.ref('stock.package_level_form_view')
+
+        return {
+            'name': _('Package Content'),
+            'type': 'ir.actions.act_window',
+            'view_type': 'form',
+            'view_mode': 'form',
+            'res_model': 'stock.package_level',
+            'views': [(view.id, 'form')],
+            'view_id': view.id,
+            'target': 'new',
+            'res_id': self.id,
+            'flags': {'mode': 'readonly'},
+        }

--- a/addons/stock/models/stock_picking.py
+++ b/addons/stock/models/stock_picking.py
@@ -239,7 +239,7 @@ class Picking(models.Model):
         readonly=True, required=True,
         states={'draft': [('readonly', False)]})
     move_lines = fields.One2many('stock.move', 'picking_id', string="Stock Moves", copy=True)
-    move_ids_without_package = fields.One2many('stock.move', 'picking_id', string="Stock moves not in package", domain=['|',('package_level_id', '=', False), ('picking_type_entire_packs', '=', False)])
+    move_ids_without_package = fields.One2many('stock.move', 'picking_id', string="Stock moves not in package", compute='_compute_move_without_package', inverse='_set_move_without_package')
     has_scrap_move = fields.Boolean(
         'Has Scrap Moves', compute='_has_scrap_move')
     picking_type_id = fields.Many2one(
@@ -626,6 +626,25 @@ class Picking(models.Model):
         self.write({'date_done': fields.Datetime.now()})
         return True
 
+    @api.depends('state', 'move_lines', 'move_lines.state', 'move_lines.package_level_id')
+    def _compute_move_without_package(self):
+        for picking in self:
+            move_ids_without_package = self.env['stock.move']
+            if picking.picking_type_entire_packs == False:
+                move_ids_without_package = picking.move_lines
+            else:
+                for move in picking.move_lines:
+                    if not move.package_level_id:
+                        if move.state in ('assigned', 'done'):
+                            if any(not ml.package_level_id for ml in move.move_line_ids):
+                                move_ids_without_package |= move
+                        else:
+                            move_ids_without_package |= move
+            self.move_ids_without_package = move_ids_without_package
+
+    def _set_move_without_package(self):
+        self.move_lines |= self.move_ids_without_package
+
     def _check_move_lines_map_quant_package(self, package):
         """ This method checks that all product of the package (quant) are well present in the move_line_ids of the picking. """
         all_in = True
