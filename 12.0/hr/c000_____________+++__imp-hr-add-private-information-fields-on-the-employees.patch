PR: https://github.com/odoo/odoo/pull/

From: a696f84f1fa5bda33f3db028111a908818396421
From: Yannick Tivisse
Date: 2018-05-04 07:59:24

Structural Changes: 14
Total Changes: 23

[IMP] hr: Add private information fields on the employees

Add some private information on the employees like:
- Certificate: Bachelor, Master, Other
- Place/Date of birth
- KM Home/Work
- Emergency Number/Contact
- ...

Also move some already existing private information from hr_contract to hr.

================================= pseudo patch: =================================

--- a/addons/hr/models/hr.py
+++ b/addons/hr/models/hr.py
@@ -132,6 +132,11 @@ class Employee(models.Model):
         ('widower', 'Widower'),
         ('divorced', 'Divorced')
     ], string='Marital Status', groups="hr.group_hr_user", default='single')
+    spouse_complete_name = fields.Char(string="Spouse Complete Name", groups="hr.group_hr_user")
+    spouse_birthdate = fields.Date(string="Spouse Birthdate", groups="hr.group_hr_user")
+    children = fields.Integer(string='Number of Children', groups="hr.group_hr_user")
+    place_of_birth = fields.Char('Place of Birth', groups="hr.group_hr_user")
+    country_of_birth = fields.Many2one('res.country', string="Country of Birth", groups="hr.group_hr_user")
     birthday = fields.Date('Date of Birth', groups="hr.group_hr_user")
     ssnid = fields.Char('SSN No', help='Social Security Number', groups="hr.group_hr_user")
     sinid = fields.Char('SIN No', help='Social Insurance Number', groups="hr.group_hr_user")
@@ -145,6 +150,19 @@ class Employee(models.Model):
     permit_no = fields.Char('Work Permit No', groups="hr.group_hr_user")
     visa_no = fields.Char('Visa No', groups="hr.group_hr_user")
     visa_expire = fields.Date('Visa Expire Date', groups="hr.group_hr_user")
+    additional_note = fields.Text(string='Additional Note')
+    certificate = fields.Selection([
+        ('bachelor', 'Bachelor'),
+        ('master', 'Master'),
+        ('other', 'Other'),
+    ], 'Certificate Level', default='master')
+    study_field = fields.Char("Field of Study", placeholder='Computer Science')
+    study_school = fields.Char("School")
+    emergency_contact = fields.Char("Emergency Contact")
+    emergency_phone = fields.Char("Emergency Phone")
+    km_home_work = fields.Integer(string="Km home-work", groups="hr.group_hr_user")
+    google_drive_link = fields.Char(string="Employee Documents", groups="hr.group_hr_user")
+    job_title = fields.Char("Job Title")
 
     # image: all image fields are base64 encoded and PIL-supported
     image = fields.Binary(
@@ -187,6 +205,11 @@ class Employee(models.Model):
             if not employee._check_recursion():
                 raise ValidationError(_('Error! You cannot create recursive hierarchy of Employee(s).'))
 
+    @api.onchange('job_id')
+    def _onchange_job_id(self):
+        if self.job_id:
+            self.job_title = self.job_id.name
+
     @api.onchange('address_id')
     def _onchange_address(self):
         self.work_phone = self.address_id.phone
