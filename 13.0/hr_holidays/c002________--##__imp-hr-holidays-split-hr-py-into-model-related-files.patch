PR: https://github.com/odoo/odoo/pull/

From: 7362c6040cd22a0f98277de8fcc004b6ab724a48
From: Yannick Tivisse
Date: 2019-05-31 08:21:21

Breaking data model changes scores: del:5 + add:0, change matches:
-    _inherit = 'hr.department'
-    absence_of_today = fields.Integer(
-    leave_to_approve_count = fields.Integer(
-    allocation_to_approve_count = fields.Integer(
-    total_employee = fields.Integer(

Total Changes: 434

[IMP] hr_holidays: Split hr.py into model related files

================================= pseudo patch: =================================

--- a/addons/hr_holidays/models/__init__.py
+++ b/addons/hr_holidays/models/__init__.py
@@ -2,7 +2,8 @@
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
 from . import resource
-from . import hr
+from . import hr_employee
+from . import hr_department
 from . import hr_leave
 from . import hr_leave_allocation
 from . import hr_leave_type

--- a/None
+++ b/addons/hr_holidays/models/hr_department.py
@@ -0,0 +1,58 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+import datetime
+from dateutil.relativedelta import relativedelta
+
+from odoo import api, fields, models
+
+
+class Department(models.Model):
+
+    _inherit = 'hr.department'
+
+    absence_of_today = fields.Integer(
+        compute='_compute_leave_count', string='Absence by Today')
+    leave_to_approve_count = fields.Integer(
+        compute='_compute_leave_count', string='Time Off to Approve')
+    allocation_to_approve_count = fields.Integer(
+        compute='_compute_leave_count', string='Allocation to Approve')
+    total_employee = fields.Integer(
+        compute='_compute_total_employee', string='Total Employee')
+
+    @api.multi
+    def _compute_leave_count(self):
+        Requests = self.env['hr.leave']
+        Allocations = self.env['hr.leave.allocation']
+        today_date = datetime.datetime.utcnow().date()
+        today_start = fields.Datetime.to_string(today_date)  # get the midnight of the current utc day
+        today_end = fields.Datetime.to_string(today_date + relativedelta(hours=23, minutes=59, seconds=59))
+
+        leave_data = Requests.read_group(
+            [('department_id', 'in', self.ids),
+             ('state', '=', 'confirm')],
+            ['department_id'], ['department_id'])
+        allocation_data = Allocations.read_group(
+            [('department_id', 'in', self.ids),
+             ('state', '=', 'confirm')],
+            ['department_id'], ['department_id'])
+        absence_data = Requests.read_group(
+            [('department_id', 'in', self.ids), ('state', 'not in', ['cancel', 'refuse']),
+             ('date_from', '<=', today_end), ('date_to', '>=', today_start)],
+            ['department_id'], ['department_id'])
+
+        res_leave = dict((data['department_id'][0], data['department_id_count']) for data in leave_data)
+        res_allocation = dict((data['department_id'][0], data['department_id_count']) for data in allocation_data)
+        res_absence = dict((data['department_id'][0], data['department_id_count']) for data in absence_data)
+
+        for department in self:
+            department.leave_to_approve_count = res_leave.get(department.id, 0)
+            department.allocation_to_approve_count = res_allocation.get(department.id, 0)
+            department.absence_of_today = res_absence.get(department.id, 0)
+
+    @api.multi
+    def _compute_total_employee(self):
+        emp_data = self.env['hr.employee'].read_group([('department_id', 'in', self.ids)], ['department_id'], ['department_id'])
+        result = dict((data['department_id'][0], data['department_id_count']) for data in emp_data)
+        for department in self:
+            department.total_employee = result.get(department.id, 0)

--- a/addons/hr_holidays/models/hr.py
+++ b/addons/hr_holidays/models/hr_employee.py
@@ -2,64 +2,11 @@
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
 import datetime
-from dateutil.relativedelta import relativedelta
 
 from odoo import api, fields, models
 from odoo.tools.float_utils import float_round
 
 
-# YTI TODO: Split into 2 files
-class Department(models.Model):
-
-    _inherit = 'hr.department'
-
-    absence_of_today = fields.Integer(
-        compute='_compute_leave_count', string='Absence by Today')
-    leave_to_approve_count = fields.Integer(
-        compute='_compute_leave_count', string='Time Off to Approve')
-    allocation_to_approve_count = fields.Integer(
-        compute='_compute_leave_count', string='Allocation to Approve')
-    total_employee = fields.Integer(
-        compute='_compute_total_employee', string='Total Employee')
-
-    @api.multi
-    def _compute_leave_count(self):
-        Requests = self.env['hr.leave']
-        Allocations = self.env['hr.leave.allocation']
-        today_date = datetime.datetime.utcnow().date()
-        today_start = fields.Datetime.to_string(today_date)  # get the midnight of the current utc day
-        today_end = fields.Datetime.to_string(today_date + relativedelta(hours=23, minutes=59, seconds=59))
-
-        leave_data = Requests.read_group(
-            [('department_id', 'in', self.ids),
-             ('state', '=', 'confirm')],
-            ['department_id'], ['department_id'])
-        allocation_data = Allocations.read_group(
-            [('department_id', 'in', self.ids),
-             ('state', '=', 'confirm')],
-            ['department_id'], ['department_id'])
-        absence_data = Requests.read_group(
-            [('department_id', 'in', self.ids), ('state', 'not in', ['cancel', 'refuse']),
-             ('date_from', '<=', today_end), ('date_to', '>=', today_start)],
-            ['department_id'], ['department_id'])
-
-        res_leave = dict((data['department_id'][0], data['department_id_count']) for data in leave_data)
-        res_allocation = dict((data['department_id'][0], data['department_id_count']) for data in allocation_data)
-        res_absence = dict((data['department_id'][0], data['department_id_count']) for data in absence_data)
-
-        for department in self:
-            department.leave_to_approve_count = res_leave.get(department.id, 0)
-            department.allocation_to_approve_count = res_allocation.get(department.id, 0)
-            department.absence_of_today = res_absence.get(department.id, 0)
-
-    @api.multi
-    def _compute_total_employee(self):
-        emp_data = self.env['hr.employee'].read_group([('department_id', 'in', self.ids)], ['department_id'], ['department_id'])
-        result = dict((data['department_id'][0], data['department_id_count']) for data in emp_data)
-        for department in self:
-            department.total_employee = result.get(department.id, 0)
-
-
 class HrEmployeeBase(models.AbstractModel):
     _inherit = "hr.employee.base"
 
