PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:15 + add:0, change matches:
-    _inherit = ['account.move']
-    _inherit = ['account.move.line']
-    _inherit = ['account.analytic.plan']
-    _inherit = ['account.analytic.account']
-    _inherit = ['product.template']
-    _inherit = ['product.product']
-    _inherit = ['product.category']
-    _inherit = ["res.company"]
-    _inherit = ['res.config.settings']
-    _inherit = ["stock.location"]
-    _inherit = ['stock.lot']
-    _inherit = ["stock.move"]
-    _inherit = ['stock.move.line']
-    _inherit = ['stock.picking']
-    _inherit = ['stock.quant']

Total Changes: 34

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/stock_account/models/account_chart_template.py
+++ b/addons/stock_account/models/account_chart_template.py
@@ -6,7 +6,7 @@ from odoo.addons.account.models.chart_template import template
 
 
 class AccountChartTemplate(models.AbstractModel):
-    _inherit = ["account.chart.template"]
+    _inherit = "account.chart.template"
 
     def _post_load_data(self, template_code, company, template_data):
         super()._post_load_data(template_code, company, template_data)

--- a/addons/stock_account/models/account_move.py
+++ b/addons/stock_account/models/account_move.py
@@ -5,7 +5,7 @@ from odoo.tools import float_is_zero
 
 
 class AccountMove(models.Model):
-    _inherit = ['account.move']
+    _inherit = 'account.move'
 
     stock_move_id = fields.Many2one('stock.move', string='Stock Move', index='btree_not_null')
     stock_valuation_layer_ids = fields.One2many('stock.valuation.layer', 'account_move_id', string='Stock Valuation Layer')
@@ -246,7 +246,7 @@ class AccountMove(models.Model):
 
 
 class AccountMoveLine(models.Model):
-    _inherit = ['account.move.line']
+    _inherit = 'account.move.line'
 
     stock_valuation_layer_ids = fields.One2many('stock.valuation.layer', 'account_move_line_id', string='Stock Valuation Layer')
     cogs_origin_id = fields.Many2one(  # technical field used to keep track in the originating line of the anglo-saxon lines

--- a/addons/stock_account/models/analytic_account.py
+++ b/addons/stock_account/models/analytic_account.py
@@ -6,7 +6,7 @@ from odoo.tools import float_compare, float_is_zero, float_round
 
 
 class AccountAnalyticPlan(models.Model):
-    _inherit = ['account.analytic.plan']
+    _inherit = 'account.analytic.plan'
 
     def _calculate_distribution_amount(self, amount, percentage, total_percentage, distribution_on_each_plan):
         """
@@ -31,7 +31,7 @@ class AccountAnalyticPlan(models.Model):
 
 
 class AccountAnalyticAccount(models.Model):
-    _inherit = ['account.analytic.account']
+    _inherit = 'account.analytic.account'
 
     def _perform_analytic_distribution(self, distribution, amount, unit_amount, lines, obj, additive=False):
         """

--- a/addons/stock_account/models/product.py
+++ b/addons/stock_account/models/product.py
@@ -10,7 +10,7 @@ from datetime import datetime
 
 
 class ProductTemplate(models.Model):
-    _inherit = ['product.template']
+    _inherit = 'product.template'
 
     cost_method = fields.Selection(related="categ_id.property_cost_method", readonly=True)
     valuation = fields.Selection(related="categ_id.property_valuation", readonly=True)
@@ -124,7 +124,7 @@ will update the cost of every lot/serial number in stock."),
 
 
 class ProductProduct(models.Model):
-    _inherit = ['product.product']
+    _inherit = 'product.product'
 
     value_svl = fields.Float(compute='_compute_value_svl', compute_sudo=True)
     quantity_svl = fields.Float(compute='_compute_value_svl', compute_sudo=True)
@@ -870,7 +870,7 @@ will update the cost of every lot/serial number in stock."),
 
 
 class ProductCategory(models.Model):
-    _inherit = ['product.category']
+    _inherit = 'product.category'
 
     property_valuation = fields.Selection([
         ('manual_periodic', 'Manual'),

--- a/addons/stock_account/models/res_company.py
+++ b/addons/stock_account/models/res_company.py
@@ -2,7 +2,7 @@ from odoo import models, fields
 
 
 class ResCompany(models.Model):
-    _inherit = ["res.company"]
+    _inherit = "res.company"
 
     account_production_wip_account_id = fields.Many2one('account.account', string='Production WIP Account', check_company=True)
     account_production_wip_overhead_account_id = fields.Many2one('account.account', string='Production WIP Overhead Account', check_company=True)

--- a/addons/stock_account/models/res_config_settings.py
+++ b/addons/stock_account/models/res_config_settings.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = ['res.config.settings']
+    _inherit = 'res.config.settings'
 
     module_stock_landed_costs = fields.Boolean("Landed Costs",
         help="Affect landed costs on reception operations and split them among products to update their cost price.")

--- a/addons/stock_account/models/stock_location.py
+++ b/addons/stock_account/models/stock_location.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class StockLocation(models.Model):
-    _inherit = ["stock.location"]
+    _inherit = "stock.location"
 
     valuation_in_account_id = fields.Many2one(
         'account.account', 'Stock Valuation Account (Incoming)',

--- a/addons/stock_account/models/stock_lot.py
+++ b/addons/stock_account/models/stock_lot.py
@@ -8,7 +8,7 @@ from odoo.tools import float_compare, float_round
 
 
 class StockLot(models.Model):
-    _inherit = ['stock.lot']
+    _inherit = 'stock.lot'
 
     value_svl = fields.Float(compute='_compute_value_svl', compute_sudo=True)
     quantity_svl = fields.Float(compute='_compute_value_svl', compute_sudo=True)

--- a/addons/stock_account/models/stock_move.py
+++ b/addons/stock_account/models/stock_move.py
@@ -12,7 +12,7 @@ _logger = logging.getLogger(__name__)
 
 
 class StockMove(models.Model):
-    _inherit = ["stock.move"]
+    _inherit = "stock.move"
 
     to_refund = fields.Boolean(string="Update quantities on SO/PO", copy=True,
                                help='Trigger a decrease of the delivered/received quantity in the associated Sale Order/Purchase Order')

--- a/addons/stock_account/models/stock_move_line.py
+++ b/addons/stock_account/models/stock_move_line.py
@@ -7,7 +7,7 @@ from odoo.exceptions import UserError
 
 
 class StockMoveLine(models.Model):
-    _inherit = ['stock.move.line']
+    _inherit = 'stock.move.line'
 
     # -------------------------------------------------------------------------
     # CRUD

--- a/addons/stock_account/models/stock_picking.py
+++ b/addons/stock_account/models/stock_picking.py
@@ -7,7 +7,7 @@ from odoo import models, fields
 
 
 class StockPicking(models.Model):
-    _inherit = ['stock.picking']
+    _inherit = 'stock.picking'
 
     country_code = fields.Char(related="company_id.account_fiscal_country_id.code")
 

--- a/addons/stock_account/models/stock_quant.py
+++ b/addons/stock_account/models/stock_quant.py
@@ -8,7 +8,7 @@ from odoo.tools.misc import groupby
 
 
 class StockQuant(models.Model):
-    _inherit = ['stock.quant']
+    _inherit = 'stock.quant'
 
     value = fields.Monetary('Value', compute='_compute_value', groups='stock.group_stock_manager')
     currency_id = fields.Many2one('res.currency', compute='_compute_value', groups='stock.group_stock_manager')

--- a/addons/stock_account/models/template_generic_coa.py
+++ b/addons/stock_account/models/template_generic_coa.py
@@ -3,7 +3,7 @@ from odoo.addons.account.models.chart_template import template
 
 
 class AccountChartTemplate(models.AbstractModel):
-    _inherit = ["account.chart.template"]
+    _inherit = "account.chart.template"
 
     @template('generic_coa', 'res.company')
     def _get_generic_coa_res_company(self):
