PR: https://github.com/odoo/odoo/pull/

From: 960360afe478a8f7b9c456721b5591154952a37d
From: Raphael Collet
Date: 2018-08-06 12:37:19

Structural Changes: 5
Total Changes: 10

[REF] *: use native date/datetime for Date/Datetime fields

From this commit onwards, Date fields will return datetime.date objects and Datetime fields will return datetime.datetime objects, this implies a number of things that are clearly explained both in the ORM API for master.

This commit also introduces a number of helper functions for dates and datetimes that are exposed in tools.date_utils and fields.Date[time], explained in the documentation as well.

Task-ID: 47189

================================= pseudo patch: =================================

--- a/addons/event/models/event.py
+++ b/addons/event/models/event.py
@@ -347,7 +347,7 @@ class EventRegistration(models.Model):
     partner_id = fields.Many2one(
         'res.partner', string='Contact',
         states={'done': [('readonly', True)]})
-    date_open = fields.Datetime(string='Registration Date', readonly=True, default=lambda self: fields.datetime.now())  # weird crash is directly now
+    date_open = fields.Datetime(string='Registration Date', readonly=True, default=lambda self: fields.Datetime.now())  # weird crash is directly now
     date_closed = fields.Datetime(string='Attended Date', readonly=True)
     event_begin_date = fields.Datetime(string="Event Start Date", related='event_id.date_begin', readonly=True)
     event_end_date = fields.Datetime(string="Event End Date", related='event_id.date_end', readonly=True)
@@ -515,8 +515,8 @@ class EventRegistration(models.Model):
     @api.multi
     def get_date_range_str(self):
         self.ensure_one()
-        today = fields.Datetime.from_string(fields.Datetime.now())
-        event_date = fields.Datetime.from_string(self.event_begin_date)
+        today = fields.Datetime.now()
+        event_date = self.event_begin_date
         diff = (event_date.date() - today.date())
         if diff.days <= 0:
             return _('today')

--- a/addons/event/models/event_mail.py
+++ b/addons/event/models/event_mail.py
@@ -97,7 +97,7 @@ class EventMailScheduler(models.Model):
             else:
                 date, sign = self.event_id.date_end, 1
 
-            self.scheduled_date = datetime.strptime(date, tools.DEFAULT_SERVER_DATETIME_FORMAT) + _INTERVALS[self.interval_unit](sign * self.interval_nbr)
+            self.scheduled_date = date + _INTERVALS[self.interval_unit](sign * self.interval_nbr)
 
     @api.one
     def execute(self):
@@ -190,7 +190,7 @@ class EventMailRegistration(models.Model):
     def _compute_scheduled_date(self):
         if self.registration_id:
             date_open = self.registration_id.date_open
-            date_open_datetime = date_open and datetime.strptime(date_open, tools.DEFAULT_SERVER_DATETIME_FORMAT) or fields.datetime.now()
+            date_open_datetime = date_open or fields.Datetime.now()
             self.scheduled_date = date_open_datetime + _INTERVALS[self.scheduler_id.interval_unit](self.scheduler_id.interval_nbr)
         else:
             self.scheduled_date = False
