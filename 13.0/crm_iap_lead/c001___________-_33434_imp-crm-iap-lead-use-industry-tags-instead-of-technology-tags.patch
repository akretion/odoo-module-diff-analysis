PR: https://github.com/odoo/odoo/pull/33434

From: 84dbcee915f5e3f0fe67ca1c1c0074a4ad70f6e3
From: Pierre Rousseau
Date: 2019-06-03 06:20:25

Breaking data model changes score: 4, change matches:
-    name = fields.Char(string='Name', required=True, translate=True)
-    tech_tag = fields.Char(string="Tech Tag", required=True)
-    technology_ids = fields.Many2many('crm.iap.lead.technology', string='Technologies')

Total Changes: 18

[IMP] crm_iap_lead: use industry tags instead of technology tags

In order to be consistent with Lead Generation, we need to use Industry tags instead of technology tags.
In addition, we reduce the number of tags to keep only the relevant ones.

Task ID: 1941555

closes odoo/odoo#33434

Signed-off-by: pimodoo <pimodoo@users.noreply.github.com>

================================= pseudo patch: =================================

--- a/addons/crm_iap_lead/models/crm_iap_lead.py
+++ b/addons/crm_iap_lead/models/crm_iap_lead.py
@@ -48,16 +48,3 @@ class PeopleSeniority(models.Model):
     @api.depends('name')
     def name_get(self):
         return [(seniority.id, seniority.name.replace('_', ' ').title()) for seniority in self]
-
-
-class TechnologyTag(models.Model):
-    """ Technology Tags of Clearbit """
-    _name = 'crm.iap.lead.technology'
-    _description = 'Technology Tag'
-
-    name = fields.Char(string='Name', required=True, translate=True)
-    tech_tag = fields.Char(string="Tech Tag", required=True)
-
-    _sql_constraints = [
-        ('name_uniq', 'unique (name)', 'Technology tag name already exists!'),
-    ]

--- a/addons/crm_iap_lead/models/crm_iap_lead_mining_request.py
+++ b/addons/crm_iap_lead/models/crm_iap_lead_mining_request.py
@@ -51,7 +51,6 @@ class CRMLeadMiningRequest(models.Model):
     country_ids = fields.Many2many('res.country', string='Countries')
     state_ids = fields.Many2many('res.country.state', string='States')
     industry_ids = fields.Many2many('crm.iap.lead.industry', string='Industries')
-    technology_ids = fields.Many2many('crm.iap.lead.technology', string='Technologies')
 
     # Contact Generation Filter
     contact_number = fields.Integer(string='Number of Contacts', default=1)
@@ -124,8 +123,8 @@ class CRMLeadMiningRequest(models.Model):
         if self.filter_on_size:
             payload.update({'company_size_min': self.company_size_min,
                             'company_size_max': self.company_size_max})
-        if self.technology_ids:
-            payload['technology_tags'] = self.technology_ids.mapped('tech_tag')
+        if self.industry_ids:
+            payload['industry_ids'] = self.industry_ids.mapped('reveal_id')
         if self.search_type == 'people':
             payload.update({'contact_number': self.contact_number,
                             'contact_filter_type': self.contact_filter_type})
