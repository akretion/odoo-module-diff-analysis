PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:3 + add:0, change matches:
-    _inherit = ["project.project"]
-    _inherit = ['purchase.order']
-    _inherit = ['purchase.order.line']

Total Changes: 6

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/project_purchase/models/project_project.py
+++ b/addons/project_purchase/models/project_project.py
@@ -7,7 +7,7 @@ from odoo.osv import expression
 
 
 class ProjectProject(models.Model):
-    _inherit = ["project.project"]
+    _inherit = "project.project"
 
     purchase_orders_count = fields.Integer('# Purchase Orders', compute='_compute_purchase_orders_count', groups='purchase.group_purchase_user', export_string_translation=False)
 

--- a/addons/project_purchase/models/purchase_order.py
+++ b/addons/project_purchase/models/purchase_order.py
@@ -4,6 +4,6 @@ from odoo import fields, models
 
 
 class PurchaseOrder(models.Model):
-    _inherit = ['purchase.order']
+    _inherit = 'purchase.order'
 
     project_id = fields.Many2one('project.project')

--- a/addons/project_purchase/models/purchase_order_line.py
+++ b/addons/project_purchase/models/purchase_order_line.py
@@ -4,7 +4,7 @@ from odoo import api, models
 
 
 class PurchaseOrderLine(models.Model):
-    _inherit = ['purchase.order.line']
+    _inherit = 'purchase.order.line'
 
     @api.depends('product_id', 'order_id.partner_id', 'order_id.project_id')
     def _compute_analytic_distribution(self):
