PR: https://github.com/odoo/odoo/pull/

From: 01ad2f3a90c4d23b090baf2f120df571f893a15c
From: rka-odoo
Date: 2016-07-19 09:56:22

Structural Changes: 7
Total Changes: 113

[SPLIT] report: Split files by model

================================= pseudo patch: =================================

--- a/addons/report/models/__init__.py
+++ b/addons/report/models/__init__.py
@@ -1,8 +1,7 @@
 import abstract_report
-import ir_actions
+import ir_actions_report_xml
 import ir_http
+import ir_qweb
 import report
 import report_paperformat
-import abstract_report
-import ir_qweb
 import res_company

--- a/addons/report/models/ir_actions.py
+++ b/None
@@ -1,6 +0,0 @@
-from openerp import models, fields
-
-class Actions(models.Model):
-    _inherit = 'ir.actions.report.xml'
-
-    print_report_name = fields.Char('Printed Report Name', help="This is the filename of the report going to download. Keep empty to not change the report filename. You can use a python expression with the object and time variables.")

--- a/None
+++ b/addons/report/models/ir_actions_report_xml.py
@@ -0,0 +1,28 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from openerp.osv import osv, fields
+from odoo import fields as new_fields
+
+class ir_actions_report(osv.Model):
+    _inherit = 'ir.actions.report.xml'
+
+    def associated_view(self, cr, uid, ids, context):
+        """Used in the ir.actions.report.xml form view in order to search naively after the view(s)
+        used in the rendering.
+        """
+        try:
+            report_name = self.browse(cr, uid, ids[0], context).report_name
+            act_window_obj = self.pool.get('ir.actions.act_window')
+            view_action = act_window_obj.for_xml_id(cr, uid, 'base', 'action_ui_view', context=context)
+            view_action['domain'] = [('name', 'ilike', report_name.split('.')[1]), ('type', '=', 'qweb')]
+            return view_action
+        except:
+            return False
+
+    _columns = {'paperformat_id': fields.many2one('report.paperformat', 'Paper format')}
+
+class Actions(osv.Model):
+    _inherit = 'ir.actions.report.xml'
+
+    print_report_name = new_fields.Char('Printed Report Name', help="This is the filename of the report going to download. Keep empty to not change the report filename. You can use a python expression with the object and time variables.")

--- a/addons/report/models/report_paperformat.py
+++ b/addons/report/models/report_paperformat.py
@@ -1,9 +1,6 @@
 # -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
-from functools import partial
-
-from openerp import SUPERUSER_ID
 from openerp.osv import osv, fields
 
 
@@ -94,44 +91,3 @@ class report_paperformat(osv.Model):
     }
 
 
-class res_company(osv.Model):
-    _inherit = 'res.company'
-
-    _columns = {'paperformat_id': fields.many2one('report.paperformat', 'Paper format')}
-
-    def init(self, cr):
-        # set a default paperformat based on rml one.
-        ref = partial(self.pool['ir.model.data'].xmlid_to_res_id, cr, SUPERUSER_ID)
-
-        ids = self.search(cr, SUPERUSER_ID, [('paperformat_id', '=', False)])
-        for company in self.browse(cr, SUPERUSER_ID, ids):
-            paperformat_id = {
-                'a4': ref('report.paperformat_euro'),
-                'us_letter': ref('report.paperformat_us'),
-            }.get(company.rml_paper_format) or ref('report.paperformat_euro')
-
-            if paperformat_id:
-                company.write({'paperformat_id': paperformat_id})
-
-        sup = super(res_company, self)
-        if hasattr(sup, 'init'):
-            sup.init(cr)
-
-
-class ir_actions_report(osv.Model):
-    _inherit = 'ir.actions.report.xml'
-
-    def associated_view(self, cr, uid, ids, context):
-        """Used in the ir.actions.report.xml form view in order to search naively after the view(s)
-        used in the rendering.
-        """
-        try:
-            report_name = self.browse(cr, uid, ids[0], context).report_name
-            act_window_obj = self.pool.get('ir.actions.act_window')
-            view_action = act_window_obj.for_xml_id(cr, uid, 'base', 'action_ui_view', context=context)
-            view_action['domain'] = [('name', 'ilike', report_name.split('.')[1]), ('type', '=', 'qweb')]
-            return view_action
-        except:
-            return False
-
-    _columns = {'paperformat_id': fields.many2one('report.paperformat', 'Paper format')}

--- a/addons/report/models/res_company.py
+++ b/addons/report/models/res_company.py
@@ -1,8 +1,9 @@
 # -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
-from openerp.osv import osv
-
+from functools import partial
+from openerp.osv import osv, fields
+from openerp import SUPERUSER_ID
 
 class ResCompany(osv.Model):
     _inherit = 'res.company'
@@ -26,3 +27,28 @@ class ResCompany(osv.Model):
     def edit_internal_header(self, cr, uid, ids, context=None):
         return self._prepare_report_view_action(cr, uid, 'report.internal_layout')
 
+
+class res_company(osv.Model):
+    _inherit = 'res.company'
+
+    _columns = {'paperformat_id': fields.many2one('report.paperformat', 'Paper format')}
+
+    def init(self, cr):
+        # set a default paperformat based on rml one.
+        ref = partial(self.pool['ir.model.data'].xmlid_to_res_id, cr, SUPERUSER_ID)
+
+        ids = self.search(cr, SUPERUSER_ID, [('paperformat_id', '=', False)])
+        for company in self.browse(cr, SUPERUSER_ID, ids):
+            paperformat_id = {
+                'a4': ref('report.paperformat_euro'),
+                'us_letter': ref('report.paperformat_us'),
+            }.get(company.rml_paper_format) or ref('report.paperformat_euro')
+
+            if paperformat_id:
+                company.write({'paperformat_id': paperformat_id})
+
+        sup = super(res_company, self)
+        if hasattr(sup, 'init'):
+            sup.init(cr)
+
+
