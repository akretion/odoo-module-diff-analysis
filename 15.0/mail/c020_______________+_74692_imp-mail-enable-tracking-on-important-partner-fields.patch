PR: https://github.com/odoo/odoo/pull/74692

From: 7a1345876a28dc07a64f117367725b189c10766d
From: Nikunj Ladava
Date: 2021-09-06 12:03:05

Structural Changes: 4
Total Changes: 41

[IMP] mail: enable tracking on important partner fields

This commit enables tracking on vat, parent_id for the contact, because the
impact of changes of these fields are very important.

We also manually track portal status change. To avoid a costly computed
field, this is done through manually logging portal access change as a note
on the user partner's chatter.

VAT field naming is also updated to match view naming used in inherited
views.

TaskID-2586195

closes odoo/odoo#74692

Signed-off-by: Thibault Delavallee (tde) <tde@openerp.com>

================================= pseudo patch: =================================

--- a/addons/mail/models/res_partner.py
+++ b/addons/mail/models/res_partner.py
@@ -14,10 +14,12 @@ class Partner(models.Model):
     _inherit = ['res.partner', 'mail.activity.mixin', 'mail.thread.blacklist']
     _mail_flat_thread = False
 
-    # override to add tracking
+    # override to add and order tracking
     email = fields.Char(tracking=1)
     phone = fields.Char(tracking=2)
-    user_id = fields.Many2one(tracking=True)
+    parent_id = fields.Many2one(tracking=3)
+    user_id = fields.Many2one(tracking=4)
+    vat = fields.Char(tracking=5)
     # channels
     channel_ids = fields.Many2many('mail.channel', 'mail_channel_partner', 'partner_id', 'channel_id', string='Channels', copy=False)
 

--- a/addons/mail/models/res_users.py
+++ b/addons/mail/models/res_users.py
@@ -48,13 +48,42 @@ class Users(models.Model):
                 raise exceptions.RedirectWarning(msg, action.id, _('Go to the configuration panel'))
 
         users = super(Users, self).create(vals_list)
+
+        # log a portal status change (manual tracking)
+        if not self._context.get('mail_create_nolog') and not self._context.get('mail_notrack'):
+            for user in users:
+                if user.has_group('base.group_portal'):
+                    body = user._get_portal_access_update(True)
+                    user.partner_id.message_post(
+                        body=body,
+                        message_type='notification',
+                        subtype_xmlid='mail.mt_note'
+                    )
         # Auto-subscribe to channels unless skip explicitly requested
         if not self.env.context.get('mail_channel_nosubscribe'):
             self.env['mail.channel'].search([('group_ids', 'in', users.groups_id.ids)])._subscribe_users_automatically()
         return users
 
     def write(self, vals):
+        user_portal_access_dict = {
+            user.id: user.has_group('base.group_portal')
+            for user in self
+        }
         write_res = super(Users, self).write(vals)
+
+        # log a portal status change (manual tracking)
+        if not self._context.get('mail_create_nolog') and not self._context.get('mail_notrack'):
+            for user in self:
+                user_has_group = user.has_group('base.group_portal')
+                portal_access_changed = user_has_group != user_portal_access_dict[user.id]
+                if portal_access_changed:
+                    body = user._get_portal_access_update(user_has_group)
+                    user.partner_id.message_post(
+                        body=body,
+                        message_type='notification',
+                        subtype_xmlid='mail.mt_note'
+                    )
+
         if 'active' in vals and not vals['active']:
             self._unsubscribe_from_non_public_channels()
         sel_groups = [vals[k] for k in vals if is_selection_groups(k) and vals[k]]
@@ -85,6 +114,12 @@ class Users(models.Model):
             lambda cp: cp.channel_id.public != 'public' and cp.channel_id.channel_type == 'channel'
         ).unlink()
 
+    def _get_portal_access_update(self, access_granted):
+        body = _('Portal Access Granted') if access_granted else _('Portal Access Revoked')
+        if self.partner_id.email:
+            return '%s (%s)' % (body, self.partner_id.email)
+        return body
+
     # ------------------------------------------------------------
     # DISCUSS
     # ------------------------------------------------------------
