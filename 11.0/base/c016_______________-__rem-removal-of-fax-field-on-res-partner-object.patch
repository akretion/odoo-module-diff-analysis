PR: https://github.com/odoo/odoo/pull/

From: 8bea502f33eda213243eb09e571cb5d9c9274d2e
From: qdp-odoo
Date: 2017-07-12 15:48:43

Structural Changes: 3
Total Changes: 16

[REM] *: removal of fax field on res.partner object

Deprecated technologuy that doesn't deserve its dedicated field anymore. RIP faxes

================================= pseudo patch: =================================

--- a/odoo/addons/base/ir/ir_qweb.xml
+++ b/odoo/addons/base/ir/ir_qweb.xml
@@ -14,7 +14,7 @@
 </template>
 <template id="contact">
     <address t-ignore="true" class="mb0" itemscope="itemscope" itemtype="http://schema.org/Organization">
-        <div t-if="not (('name' in fields) or (address and 'address' in fields) or (city and 'city' in fields) or (mobile and 'mobile' in fields) or (fax and 'fax' in fields) or (website and 'website' in fields) or (email and 'email' in fields))" class="css_non_editable_mode_hidden">
+        <div t-if="not (('name' in fields) or (address and 'address' in fields) or (city and 'city' in fields) or (mobile and 'mobile' in fields) or (website and 'website' in fields) or (email and 'email' in fields))" class="css_non_editable_mode_hidden">
             --<span class="text-muted" t-esc="name"/>--
         </div>
         <t t-if="object.country_id.name_position != 'after'">

--- a/odoo/addons/base/ir/ir_qweb/fields.py
+++ b/odoo/addons/base/ir/ir_qweb/fields.py
@@ -444,7 +444,7 @@ class Contact(models.AbstractModel):
         if not value.exists():
             return False
 
-        opf = options and options.get('fields') or ["name", "address", "phone", "mobile", "fax", "email"]
+        opf = options and options.get('fields') or ["name", "address", "phone", "mobile", "email"]
         value = value.sudo().with_context(show_address=True)
         name_get = value.name_get()[0][1]
 
@@ -453,7 +453,6 @@ class Contact(models.AbstractModel):
             'address': escape("\n".join(name_get.split("\n")[1:])).strip(),
             'phone': value.phone,
             'mobile': value.mobile,
-            'fax': value.fax,
             'city': value.city,
             'country_id': value.country_id.display_name,
             'website': value.website,

--- a/odoo/addons/base/res/res_bank.py
+++ b/odoo/addons/base/res/res_bank.py
@@ -26,7 +26,6 @@ class Bank(models.Model):
     country = fields.Many2one('res.country')
     email = fields.Char()
     phone = fields.Char()
-    fax = fields.Char()
     active = fields.Boolean(default=True)
     bic = fields.Char('Bank Identifier Code', index=True, help="Sometimes called BIC or Swift.")
 

--- a/odoo/addons/base/res/res_bank_view.xml
+++ b/odoo/addons/base/res/res_bank_view.xml
@@ -25,7 +25,6 @@
                         </group>
                         <group string="Communication">
                             <field name="phone"/>
-                            <field name="fax"/>
                             <field name="email" widget="email"/>
                             <field name="active"/>
                         </group>

--- a/odoo/addons/base/res/res_company.py
+++ b/odoo/addons/base/res/res_company.py
@@ -62,7 +62,6 @@ class Company(models.Model):
     country_id = fields.Many2one('res.country', compute='_compute_address', inverse='_inverse_country', string="Country")
     email = fields.Char(related='partner_id.email', store=True)
     phone = fields.Char(related='partner_id.phone', store=True)
-    fax = fields.Char(compute='_compute_address', inverse='_inverse_fax')
     website = fields.Char(related='partner_id.website')
     vat = fields.Char(related='partner_id.vat', string="TIN")
     company_registry = fields.Char()
@@ -96,7 +95,6 @@ class Company(models.Model):
             'zip'        : partner.zip,
             'state_id'   : partner.state_id,
             'country_id' : partner.country_id,
-            'fax'        : partner.fax
         }
 
     # TODO @api.depends(): currently now way to formulate the dependency on the
@@ -132,10 +130,6 @@ class Company(models.Model):
         for company in self:
             company.partner_id.country_id = company.country_id
 
-    def _inverse_fax(self):
-        for company in self:
-            company.partner_id.fax = company.fax
-
     @api.depends('partner_id', 'partner_id.image')
     def _compute_logo_web(self):
         for company in self:

--- a/odoo/addons/base/res/res_company_view.xml
+++ b/odoo/addons/base/res/res_company_view.xml
@@ -34,7 +34,6 @@
                                 </group>
                                 <group>
                                     <field name="phone"/>
-                                    <field name="fax"/>
                                     <field name="email"/>
                                     <field name="vat"/>
                                     <field name="company_registry"/>

--- a/odoo/addons/base/res/res_partner.py
+++ b/odoo/addons/base/res/res_partner.py
@@ -194,7 +194,6 @@ class Partner(models.Model):
         'Formatted Email', compute='_compute_email_formatted',
         help='Format email address "Name <email@domain>"')
     phone = fields.Char()
-    fax = fields.Char()
     mobile = fields.Char()
     is_company = fields.Boolean(string='Is a Company', default=False,
         help="Check if the contact is a company, otherwise it is a person")

--- a/odoo/addons/base/res/res_users_view.xml
+++ b/odoo/addons/base/res/res_users_view.xml
@@ -159,7 +159,6 @@
                             </div>
                             <field name="phone" widget="phone"/>
                             <field name="mobile" widget="phone"/>
-                            <field name="fax"/>
                         </group>
                     </sheet>
                 </form>
