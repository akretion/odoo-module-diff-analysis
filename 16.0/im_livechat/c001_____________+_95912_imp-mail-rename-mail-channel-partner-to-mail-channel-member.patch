PR: https://github.com/odoo/odoo/pull/95912

From: fdcaa53ca0b542ccf11474862c006e2fffa93ade
From: Louis Wicket (wil)
Date: 2022-07-19 09:50:37

Structural Changes: 2
Total Changes: 64

[IMP] mail, *: rename mail.channel.partner to mail.channel.member

* = calendar, crm_livechat, hr_holidays, im_livechat, privacy_lookup,
privacy_lookup, test_discuss_full, test_mail_full, website_livechat

closes odoo/odoo#95912

Related: odoo/upgrade#3681
Related: odoo/enterprise#29433
Signed-off-by: SÃ©bastien Theys (seb) <seb@odoo.com>

================================= pseudo patch: =================================

--- a/addons/im_livechat/models/__init__.py
+++ b/addons/im_livechat/models/__init__.py
@@ -8,7 +8,7 @@ from . import res_users
 from . import res_partner
 from . import im_livechat_channel
 from . import mail_channel
-from . import mail_channel_partner
+from . import mail_channel_member
 from . import mail_message
 from . import res_users_settings
 from . import rating

--- a/addons/im_livechat/models/im_livechat_channel.py
+++ b/addons/im_livechat/models/im_livechat_channel.py
@@ -134,12 +134,12 @@ class ImLivechatChannel(models.Model):
     def _get_livechat_mail_channel_vals(self, anonymous_name, operator=None, chatbot_script=None, user_id=None, country_id=None):
         # partner to add to the mail.channel
         operator_partner_id = operator.partner_id.id if operator else chatbot_script.operator_partner_id.id
-        channel_partner_to_add = [Command.create({'partner_id': operator_partner_id, 'is_pinned': False})]
+        members_to_add = [Command.create({'partner_id': operator_partner_id, 'is_pinned': False})]
         visitor_user = False
         if user_id:
             visitor_user = self.env['res.users'].browse(user_id)
             if visitor_user and visitor_user.active and operator and visitor_user != operator:  # valid session user (not public)
-                channel_partner_to_add.append(Command.create({'partner_id': visitor_user.partner_id.id}))
+                members_to_add.append(Command.create({'partner_id': visitor_user.partner_id.id}))
 
         if chatbot_script:
             name = chatbot_script.title
@@ -150,7 +150,7 @@ class ImLivechatChannel(models.Model):
             ])
 
         return {
-            'channel_last_seen_partner_ids': channel_partner_to_add,
+            'channel_member_ids': members_to_add,
             'livechat_active': True,
             'livechat_operator_id': operator_partner_id,
             'livechat_channel_id': self.id,

--- a/addons/im_livechat/models/mail_channel.py
+++ b/addons/im_livechat/models/mail_channel.py
@@ -45,10 +45,10 @@ class MailChannel(models.Model):
             if channel.channel_type == 'livechat':
                 notifications.append([channel.uuid, 'mail.channel/new_message', notifications[0][2]])
         if not message.author_id:
-            unpinned_channel_partner = self.channel_last_seen_partner_ids.filtered(lambda cp: not cp.is_pinned)
-            if unpinned_channel_partner:
-                unpinned_channel_partner.write({'is_pinned': True})
-                notifications = self._channel_channel_notifications(unpinned_channel_partner.mapped('partner_id').ids) + notifications
+            unpinned_members = self.channel_member_ids.filtered(lambda member: not member.is_pinned)
+            if unpinned_members:
+                unpinned_members.write({'is_pinned': True})
+                notifications = self._channel_channel_notifications(unpinned_members.partner_id.ids) + notifications
         return notifications
 
     def channel_info(self):

--- a/addons/im_livechat/models/mail_channel_partner.py
+++ b/addons/im_livechat/models/mail_channel_member.py
@@ -1,23 +1,22 @@
-# -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
 from odoo import api, models
 
 
-class ChannelPartner(models.Model):
-    _inherit = 'mail.channel.partner'
+class ChannelMember(models.Model):
+    _inherit = 'mail.channel.member'
 
     @api.autovacuum
     def _gc_unpin_livechat_sessions(self):
         """ Unpin livechat sessions with no activity for at least one day to
             clean the operator's interface """
         self.env.cr.execute("""
-            UPDATE mail_channel_partner
+            UPDATE mail_channel_member
             SET is_pinned = false
             WHERE id in (
-                SELECT cp.id FROM mail_channel_partner cp
-                INNER JOIN mail_channel c on c.id = cp.channel_id
-                WHERE c.channel_type = 'livechat' AND cp.is_pinned is true AND
-                    cp.write_date < current_timestamp - interval '1 day'
+                SELECT cm.id FROM mail_channel_member cm
+                INNER JOIN mail_channel c on c.id = cm.channel_id
+                WHERE c.channel_type = 'livechat' AND cm.is_pinned is true AND
+                    cm.write_date < current_timestamp - interval '1 day'
             )
         """)

--- a/addons/im_livechat/models/res_partner.py
+++ b/addons/im_livechat/models/res_partner.py
@@ -1,4 +1,3 @@
-# -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
 from odoo import api, models, fields
@@ -14,7 +13,7 @@ class Partners(models.Model):
         channels = super()._get_channels_as_member()
         channels |= self.env['mail.channel'].search([
             ('channel_type', '=', 'livechat'),
-            ('channel_last_seen_partner_ids', 'in', self.env['mail.channel.partner'].sudo()._search([
+            ('channel_member_ids', 'in', self.env['mail.channel.member'].sudo()._search([
                 ('partner_id', '=', self.id),
                 ('is_pinned', '=', True),
             ])),
