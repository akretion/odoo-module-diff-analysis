PR: https://github.com/odoo/odoo/pull/72559

From: adc85ad610e76792c7acd6f1693a6b753a99b21f
From: Tom De Caluw
Date: 2021-09-02 12:57:09

Structural Changes: 5
Total Changes: 13

[IMP] product, website_sale: separate attributes from variants

Several changes distinguish product attributes better from variant
attributes. The variant creation mode is added on the template form for
attribute lines with more than one value. Specification attributes are
no longer listed as variant attributes in the product variant form and
tree views.

task-2466988

closes odoo/odoo#72559

Signed-off-by: Jérémy Kersten (jke) <jke@openerp.com>
Co-authored-by: Tom De Caluw <tdc@odoo.com>
Co-authored-by: Jeremy Kersten <jke@odoo.com>

================================= pseudo patch: =================================

--- a/addons/product/models/product.py
+++ b/addons/product/models/product.py
@@ -108,6 +108,8 @@ class ProductProduct(models.Model):
         'Barcode', copy=False,
         help="International Article Number used for product identification.")
     product_template_attribute_value_ids = fields.Many2many('product.template.attribute.value', relation='product_variant_combination', string="Attribute Values", ondelete='restrict')
+    product_template_variant_value_ids = fields.Many2many('product.template.attribute.value', relation='product_variant_combination',
+                                                          domain=[('attribute_line_id.value_count', '>', 1)], string="Variant Values", ondelete='restrict')
     combination_indices = fields.Char(compute='_compute_combination_indices', store=True, index=True)
     is_product_variant = fields.Boolean(compute='_compute_is_product_variant')
 

--- a/addons/product/models/product_attribute.py
+++ b/addons/product/models/product_attribute.py
@@ -22,7 +22,7 @@ class ProductAttribute(models.Model):
     create_variant = fields.Selection([
         ('always', 'Instantly'),
         ('dynamic', 'Dynamically'),
-        ('no_variant', 'Never')],
+        ('no_variant', 'Never (option)')],
         default='always',
         string="Variants Creation Mode",
         help="""- Instantly: All possible variants are created as soon as the attribute and its values are added to a product.
@@ -177,9 +177,15 @@ class ProductTemplateAttributeLine(models.Model):
     product_tmpl_id = fields.Many2one('product.template', string="Product Template", ondelete='cascade', required=True, index=True)
     attribute_id = fields.Many2one('product.attribute', string="Attribute", ondelete='restrict', required=True, index=True)
     value_ids = fields.Many2many('product.attribute.value', string="Values", domain="[('attribute_id', '=', attribute_id)]",
-        relation='product_attribute_value_product_template_attribute_line_rel', ondelete='restrict')
+                                 relation='product_attribute_value_product_template_attribute_line_rel', ondelete='restrict')
+    value_count = fields.Integer(compute='_compute_value_count', store=True, readonly=True)
     product_template_value_ids = fields.One2many('product.template.attribute.value', 'attribute_line_id', string="Product Attribute Values")
 
+    @api.depends('value_ids')
+    def _compute_value_count(self):
+        for record in self:
+            record.value_count = len(record.value_ids)
+
     @api.onchange('attribute_id')
     def _onchange_attribute_id(self):
         self.value_ids = self.value_ids.filtered(lambda pav: pav.attribute_id == self.attribute_id)
@@ -406,7 +412,6 @@ class ProductTemplateAttributeValue(models.Model):
         'product.attribute.value', string='Attribute Value',
         required=True, ondelete='cascade', index=True)
     attribute_line_id = fields.Many2one('product.template.attribute.line', required=True, ondelete='cascade', index=True)
-
     # configuration fields: the price_extra and the exclusion rules
     price_extra = fields.Float(
         string="Value Price Extra",
