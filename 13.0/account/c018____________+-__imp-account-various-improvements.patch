PR: https://github.com/odoo/odoo/pull/

From: 4a1bbbff75dde3ef0f69e30efeed23cd5be268d0
From: Hetashree Chauhan
Date: 2019-09-06 07:12:06

Structural Changes: 5
Total Changes: 10

[IMP] account: various improvements

- show period along with 'Tax Report' activity of journals on accounting dashboard.
- added 'Upload Invoices' button on sales journals in Accounting Dashboard.
- added 'New Bill' button on purchase journals in Accounting Dashboard.

Task: 34740
Closes: #34740

Co-authored-by: Hardik Prajapati <hpr@odoo.com>

================================= pseudo patch: =================================

--- a/addons/account/models/account.py
+++ b/addons/account/models/account.py
@@ -1054,6 +1054,7 @@ class AccountJournal(models.Model):
             'res_model': 'account.move',
             'views': [[False, "tree"], [False, "form"]],
             'type': 'ir.actions.act_window',
+            'context': self._context
         }
         if len(invoices) == 1:
             action_vals.update({'res_id': invoices[0].id, 'view_mode': 'form'})

--- a/addons/account/models/account_journal_dashboard.py
+++ b/addons/account/models/account_journal_dashboard.py
@@ -40,6 +40,7 @@ class account_journal(models.Model):
                     act_type.name as act_type_name,
                     act_type.category as activity_category,
                     act.date_deadline,
+                    m.date,
                     CASE WHEN act.date_deadline < CURRENT_DATE THEN 'late' ELSE 'future' END as status
                 FROM account_move m
                     LEFT JOIN mail_activity act ON act.res_id = m.id
@@ -54,7 +55,7 @@ class account_journal(models.Model):
                     'res_id': activity.get('res_id'),
                     'res_model': activity.get('res_model'),
                     'status': activity.get('status'),
-                    'name': activity.get('summary') or activity.get('act_type_name'),
+                    'name': (activity.get('summary') or activity.get('act_type_name')) + '(' + format_date(activity.get('date'), 'MMM', locale=self._context.get('lang') or 'en_US') + ')',
                     'activity_category': activity.get('activity_category'),
                     'date': odoo_format_date(self.env, activity.get('date_deadline'))
                 })

--- a/addons/account/models/account_move.py
+++ b/addons/account/models/account_move.py
@@ -2194,14 +2194,14 @@ class AccountMoveLine(models.Model):
     tax_group_id = fields.Many2one(related='tax_line_id.tax_group_id', string='Originator tax group',
         readonly=True, store=True,
         help='technical field for widget tax-group-custom-field')
-    tax_base_amount = fields.Monetary(string="Base Amount", store=True,
+    tax_base_amount = fields.Monetary(string="Base Amount", store=True, readonly=True,
         currency_field='company_currency_id')
-    tax_exigible = fields.Boolean(string='Appears in VAT report', default=True,
+    tax_exigible = fields.Boolean(string='Appears in VAT report', default=True, readonly=True,
         help="Technical field used to mark a tax line as exigible in the vat report or not (only exigible journal items"
              " are displayed). By default all new journal items are directly exigible, but with the feature cash_basis"
              " on taxes, some will become exigible only when the payment is recorded.")
     tax_repartition_line_id = fields.Many2one(comodel_name='account.tax.repartition.line',
-        string="Originator Tax Repartition Line", ondelete='restrict',
+        string="Originator Tax Repartition Line", ondelete='restrict', readonly=True,
         help="Tax repartition line that caused the creation of this move line, if any")
     tag_ids = fields.Many2many(string="Tags", comodel_name='account.account.tag', ondelete='restrict',
         help="Tags assigned to this line by the tax creating it, if any. It determines its impact on financial reports.")
