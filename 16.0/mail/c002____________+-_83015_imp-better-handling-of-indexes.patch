PR: https://github.com/odoo/odoo/pull/83015

From: eedf37d6e286b995c47b946be1a6b66817094eff
From: Fabien Pinckaers
Date: 2022-01-19 16:52:23

Structural Changes: 7
Total Changes: 16

[IMP] Better handling of indexes

Three supported types:
- btree (default for index=True)
- btree not null (when >90% of the data are null)
- gin trigram search (for char fields)

Review of indexes on all objects.

closes odoo/odoo#83015

Signed-off-by: Fabien Pinckaers <fp@odoo.com>

================================= pseudo patch: =================================

--- a/addons/mail/models/mail_blacklist.py
+++ b/addons/mail/models/mail_blacklist.py
@@ -12,7 +12,7 @@ class MailBlackList(models.Model):
     _description = 'Mail Blacklist'
     _rec_name = 'email'
 
-    email = fields.Char(string='Email Address', required=True, index=True, help='This field is case insensitive.',
+    email = fields.Char(string='Email Address', required=True, index='gin', help='This field is case insensitive.',
                         tracking=True)
     active = fields.Boolean(default=True, tracking=True)
 

--- a/addons/mail/models/mail_message.py
+++ b/addons/mail/models/mail_message.py
@@ -96,12 +96,12 @@ class Message(models.Model):
         help='Attachments are linked to a document through model / res_id and to the message '
              'through this field.')
     parent_id = fields.Many2one(
-        'mail.message', 'Parent Message', index=True, ondelete='set null',
+        'mail.message', 'Parent Message', index="not null", ondelete='set null',
         help="Initial thread message.")
     child_ids = fields.One2many('mail.message', 'parent_id', 'Child Messages')
     # related document
-    model = fields.Char('Related Document Model', index=True)
-    res_id = fields.Many2oneReference('Related Document ID', index=True, model_field='model')
+    model = fields.Char('Related Document Model')
+    res_id = fields.Many2oneReference('Related Document ID', model_field='model')
     record_name = fields.Char('Message Record Name', help="Name get of the related document.")
     # characteristics
     message_type = fields.Selection([
@@ -161,7 +161,7 @@ class Message(models.Model):
     reply_to_force_new = fields.Boolean(
         'No threading for answers',
         help='If true, answers do not go in the original document discussion thread. Instead, it will check for the reply_to in tracking message-id and redirected accordingly. This has an impact on the generated message-id.')
-    message_id = fields.Char('Message-Id', help='Message unique identifier', index=True, readonly=1, copy=False)
+    message_id = fields.Char('Message-Id', help='Message unique identifier', index='btree', readonly=1, copy=False)
     reply_to = fields.Char('Reply-To', help='Reply email address. Setting the reply_to bypasses the automatic thread creation.')
     mail_server_id = fields.Many2one('ir.mail_server', 'Outgoing mail server')
     # keep notification layout informations to be able to generate mail again

--- a/addons/mail/models/mail_shortcode.py
+++ b/addons/mail/models/mail_shortcode.py
@@ -13,7 +13,7 @@ class MailShortcode(models.Model):
 
     _name = 'mail.shortcode'
     _description = 'Canned Response / Shortcode'
-    source = fields.Char('Shortcut', required=True, index=True, help="The shortcut which must be replaced in the Chat Messages")
-    substitution = fields.Text('Substitution', required=True, index=True, help="The escaped html code replacing the shortcut")
+    source = fields.Char('Shortcut', required=True, index='gin', help="The shortcut which must be replaced in the Chat Messages")
+    substitution = fields.Text('Substitution', required=True, help="The escaped html code replacing the shortcut")
     description = fields.Char('Description')
     message_ids = fields.Many2one('mail.message', string="Messages", store=False)

--- a/addons/mail/models/mail_thread.py
+++ b/addons/mail/models/mail_thread.py
@@ -109,7 +109,7 @@ class MailThread(models.AbstractModel):
         'Number of errors', compute='_compute_message_has_error',
         help="Number of messages with delivery error")
     message_attachment_count = fields.Integer('Attachment Count', compute='_compute_message_attachment_count', groups="base.group_user")
-    message_main_attachment_id = fields.Many2one(string="Main Attachment", comodel_name='ir.attachment', index=True, copy=False)
+    message_main_attachment_id = fields.Many2one(string="Main Attachment", comodel_name='ir.attachment', copy=False)
 
     @api.depends('message_follower_ids')
     def _compute_message_partner_ids(self):
