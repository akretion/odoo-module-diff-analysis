PR: https://github.com/odoo/odoo/pull/

From: 781a03b2bc33e2fba96ab85ac38696c0691e7629
From: Yannick Tivisse
Date: 2017-09-01 11:03:18

Structural Changes: 3
Total Changes: 106

[IMP] res_config: Update file names, xmlids, class names according to guidelines

Now that we only have one model (res.config.settings). Uniformize everything according to the guidelines.

================================= pseudo patch: =================================

--- a/addons/purchase/models/__init__.py
+++ b/addons/purchase/models/__init__.py
@@ -3,7 +3,7 @@
 
 from . import account_invoice
 from . import purchase
-from . import purchase_config_settings
+from . import res_config_settings
 from . import res_company
 from . import res_partner
 from . import stock

--- a/addons/purchase/models/purchase_config_settings.py
+++ b/addons/purchase/models/res_config_settings.py
@@ -4,7 +4,7 @@
 from odoo import api, fields, models
 
 
-class PurchaseConfigSettings(models.TransientModel):
+class ResConfigSettings(models.TransientModel):
     _inherit = 'res.config.settings'
 
     company_id = fields.Many2one('res.company', string='Company', required=True,
@@ -29,22 +29,20 @@ class PurchaseConfigSettings(models.TransientModel):
         implied_group="purchase.group_manage_vendor_price")
     module_account_3way_match = fields.Boolean("3-way matching: purchases, receptions and bills")
     is_installed_sale = fields.Boolean()
+    group_analytic_account_for_purchases = fields.Boolean('Analytic accounting for purchases',
+        implied_group='purchase.group_analytic_accounting')
 
     @api.multi
     def get_values(self):
-        res = super(PurchaseConfigSettings, self).get_values()
+        res = super(ResConfigSettings, self).get_values()
         res.update(
             is_installed_sale=self.env['ir.module.module'].search([('name', '=', 'sale'), ('state', '=', 'installed')]).id
         )
         return res
 
     def set_values(self):
-        super(PurchaseConfigSettings, self).set_values()
+        super(ResConfigSettings, self).set_values()
         self.po_lock = 'lock' if self.lock_confirmed_po else 'edit'
         self.po_double_validation = 'two_step' if self.po_order_approval else 'one_step'
 
 
-class AccountConfigSettings(models.TransientModel):
-    _inherit = 'res.config.settings'
-    group_analytic_account_for_purchases = fields.Boolean('Analytic accounting for purchases',
-        implied_group='purchase.group_analytic_accounting')

--- a/addons/purchase/models/stock_config_settings.py
+++ b/addons/purchase/models/stock_config_settings.py
@@ -4,7 +4,7 @@
 from odoo import api, fields, models
 
 
-class StockConfigSettings(models.TransientModel):
+class ResConfigSettings(models.TransientModel):
     _inherit = 'res.config.settings'
 
     po_lead = fields.Float(related='company_id.po_lead')
@@ -19,12 +19,12 @@ class StockConfigSettings(models.TransientModel):
             self.po_lead = 0.0
 
     def get_values(self):
-        res = super(StockConfigSettings, self).get_values()
+        res = super(ResConfigSettings, self).get_values()
         res.update(
             use_po_lead=self.env['ir.config_parameter'].sudo().get_param('purchase.use_po_lead')
         )
         return res
 
     def set_values(self):
-        super(StockConfigSettings, self).set_values()
+        super(ResConfigSettings, self).set_values()
         self.env['ir.config_parameter'].sudo().set_param('purchase.use_po_lead', self.use_po_lead)
