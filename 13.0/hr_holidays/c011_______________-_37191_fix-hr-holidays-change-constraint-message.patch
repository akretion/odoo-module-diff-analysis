PR: https://github.com/odoo/odoo/pull/37191

From: d0c1db764c13226d2022c48b8a8336618bef9b83
From: RomainLibert
Date: 2019-09-20 09:46:52

Structural Changes: 4
Total Changes: 18

[FIX] hr_holidays: change constraint message

The message for the validity of the leave type was not clear enough,
this commit makes it clearer.

closes odoo/odoo#37191

Signed-off-by: Yannick Tivisse (yti) <yti@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr_holidays/models/hr_leave.py
+++ b/addons/hr_holidays/models/hr_leave.py
@@ -539,23 +539,23 @@ class HolidaysRequest(models.Model):
     def _check_leave_type_validity(self):
         for leave in self:
             vstart = leave.holiday_status_id.validity_start
-            vstop  = leave.holiday_status_id.validity_stop
-            dfrom  = leave.date_from
-            dto    = leave.date_to
+            vstop = leave.holiday_status_id.validity_stop
+            dfrom = leave.date_from
+            dto = leave.date_to
             if leave.holiday_status_id.validity_start and leave.holiday_status_id.validity_stop:
                 if dfrom and dto and (dfrom.date() < vstart or dto.date() > vstop):
                     raise ValidationError(
-                        _('You can take %s only between %s and %s') % (
+                        _('%s are only valid between %s and %s') % (
                             leave.holiday_status_id.display_name, leave.holiday_status_id.validity_start, leave.holiday_status_id.validity_stop))
             elif leave.holiday_status_id.validity_start:
                 if dfrom and (dfrom.date() < vstart):
                     raise ValidationError(
-                        _('You can take %s from %s') % (
+                        _('%s are only valid starting from %s') % (
                             leave.holiday_status_id.display_name, leave.holiday_status_id.validity_start))
             elif leave.holiday_status_id.validity_stop:
                 if dto and (dto.date() > vstop):
                     raise ValidationError(
-                        _('You can take %s until %s') % (
+                        _('%s are only valid until %s') % (
                             leave.holiday_status_id.display_name, leave.holiday_status_id.validity_stop))
 
     def _check_double_validation_rules(self, employee, state):

--- a/addons/hr_holidays/models/hr_leave_type.py
+++ b/addons/hr_holidays/models/hr_leave_type.py
@@ -61,7 +61,7 @@ class HolidaysType(models.Model):
         compute='_compute_leaves', string='Remaining Time Off',
         help='Maximum Time Off Allowed - Time Off Already Taken')
     virtual_remaining_leaves = fields.Float(
-        compute='_compute_leaves', search='_search_virtual_remaining_leaves' ,string='Virtual Remaining Time Off',
+        compute='_compute_leaves', search='_search_virtual_remaining_leaves', string='Virtual Remaining Time Off',
         help='Maximum Time Off Allowed - Time Off Already Taken - Time Off Waiting Approval')
     group_days_allocation = fields.Float(
         compute='_compute_group_days_allocation', string='Days Allocated')
@@ -85,14 +85,14 @@ class HolidaysType(models.Model):
         help='\tNo Allocation Needed: no allocation by default, users can freely request time off;'
              '\tFree Allocation Request: allocated by HR and users can request time off and allocations;'
              '\tAllocated by HR only: allocated by HR and cannot be bypassed; users can request time off;')
-    validity_start = fields.Date("From", default=fields.Date.today,
+    validity_start = fields.Date("From",
                                  help='Adding validity to types of time off so that it cannot be selected outside this time period')
     validity_stop = fields.Date("To")
     valid = fields.Boolean(compute='_compute_valid', search='_search_valid', help='This indicates if it is still possible to use this type of leave')
     time_type = fields.Selection([('leave', 'Time Off'), ('other', 'Other')], default='leave', string="Kind of Leave",
                                  help="Whether this should be computed as a holiday or as work time (eg: formation)")
     request_unit = fields.Selection([
-        ('day', 'Day'), ('half_day','Half Day'), ('hour', 'Hours')],
+        ('day', 'Day'), ('half_day', 'Half Day'), ('hour', 'Hours')],
         default='day', string='Take Time Off in', required=True)
     unpaid = fields.Boolean('Is Unpaid', default=False)
     leave_notif_subtype_id = fields.Many2one('mail.message.subtype', string='Time Off Notification Subtype', default=lambda self: self.env.ref('hr_holidays.mt_leave', raise_if_not_found=False))
