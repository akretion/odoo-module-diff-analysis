PR: https://github.com/odoo/odoo/pull/124299

From: bc3026e2b27f985a8633011219b672268b093339
From: Valeriya(vchu)
Date: 2023-07-20 08:06:47

Structural Changes: 18
Total Changes: 48

[IMP] product, website_sale(comparison): enable product tags and ribbons

use product tags to display information as color/image on the product
page, enable filtering by tags, add tags to specification/comparison
table. Remove the link between ribbons and tags because there is no use
as we are able to show the tags on the page, add ribbon to
product.product

task-3299538

closes odoo/odoo#124299

Related: odoo/upgrade#4824
Signed-off-by: Antoine Vandevenne (anv) <anv@odoo.com>

================================= pseudo patch: =================================

--- a/addons/product/models/product_product.py
+++ b/addons/product/models/product_product.py
@@ -64,7 +64,12 @@ class ProductProduct(models.Model):
         'product.packaging', 'product_id', 'Product Packages',
         help="Gives the different ways to package the same product.")
 
-    additional_product_tag_ids = fields.Many2many('product.tag', 'product_tag_product_product_rel')
+    additional_product_tag_ids = fields.Many2many(
+        string="Additional Product Tags",
+        comodel_name='product.tag',
+        relation='product_tag_product_product_rel',
+        domain="[('id', 'not in', product_tag_ids)]",
+    )
     all_product_tag_ids = fields.Many2many('product.tag', compute='_compute_all_product_tag_ids', search='_search_all_product_tag_ids')
 
     # all image fields are base64 encoded and PIL-supported

--- a/addons/product/models/product_tag.py
+++ b/addons/product/models/product_tag.py
@@ -1,22 +1,34 @@
 # -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
-from random import randint
 
-from odoo import api, fields, models
+from odoo import _, api, fields, models
 from odoo.osv import expression
 
 class ProductTag(models.Model):
     _name = 'product.tag'
     _description = 'Product Tag'
 
-    def _get_default_color(self):
-        return randint(1, 11)
+    def _get_default_template_id(self):
+        return self.env['product.template'].browse(self.env.context.get('product_template_id'))
 
-    name = fields.Char('Tag Name', required=True, translate=True)
-    color = fields.Integer('Color', default=_get_default_color)
+    def _get_default_variant_id(self):
+        return self.env['product.product'].browse(self.env.context.get('product_variant_id'))
 
-    product_template_ids = fields.Many2many('product.template', 'product_tag_product_template_rel')
-    product_product_ids = fields.Many2many('product.product', 'product_tag_product_product_rel')
+    name = fields.Char(string="Name", required=True, translate=True)
+    color = fields.Char(string="Color", default='#3C3C3C')
+    product_template_ids = fields.Many2many(
+        string="Product Templates",
+        comodel_name='product.template',
+        relation='product_tag_product_template_rel',
+        default=_get_default_template_id,
+    )
+    product_product_ids = fields.Many2many(
+        string="Product Variants",
+        comodel_name='product.product',
+        relation='product_tag_product_product_rel',
+        domain="[('attribute_line_ids', '!=', False), ('product_tmpl_id', 'not in', product_template_ids)]",
+        default=_get_default_variant_id,
+    )
     product_ids = fields.Many2many(
         'product.product', string='All Product Variants using this Tag',
         compute='_compute_product_ids', search='_search_product_ids'
@@ -31,6 +43,13 @@ class ProductTag(models.Model):
         for tag in self:
             tag.product_ids = tag.product_template_ids.product_variant_ids | tag.product_product_ids
 
+    @api.returns(None, lambda value: value[0])
+    def copy_data(self, default=None):
+        default = default or {}
+        if not default.get('name'):
+            default['name'] = _('%s (copy)', self.name)
+        return super().copy_data(default=default)
+
     def _search_product_ids(self, operator, operand):
         if operator in expression.NEGATIVE_TERM_OPERATORS:
             return [('product_template_ids.product_variant_ids', operator, operand), ('product_product_ids', operator, operand)]

--- a/addons/product/models/product_template.py
+++ b/addons/product/models/product_template.py
@@ -143,7 +143,11 @@ class ProductTemplate(models.Model):
         ('1', 'Favorite'),
     ], default='0', string="Favorite")
 
-    product_tag_ids = fields.Many2many('product.tag', 'product_tag_product_template_rel', string='Product Tags')
+    product_tag_ids = fields.Many2many(
+        string="Product Template Tags",
+        comodel_name='product.tag',
+        relation='product_tag_product_template_rel',
+    )
 
     def _compute_item_count(self):
         for template in self:
