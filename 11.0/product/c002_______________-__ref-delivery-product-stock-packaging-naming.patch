PR: https://github.com/odoo/odoo/pull/

From: 90da529eb7ebbd24d4cc0e38712c2958887d3d78
From: Pierre Masereel
Date: 2017-05-04 16:06:08

Structural Changes: 4
Total Changes: 6

[REF] delivery, product, stock: packaging naming

"product packaging" -> "product packages"
"delivery packaging" -> "delivery packages"

Also adapt and simplify stock settings.

================================= pseudo patch: =================================

--- a/addons/product/models/product.py
+++ b/addons/product/models/product.py
@@ -138,7 +138,7 @@ class ProductProduct(models.Model):
         'product.pricelist.item', 'Pricelist Items', compute='_get_pricelist_items')
 
     packaging_ids = fields.One2many(
-        'product.packaging', 'product_id', 'Packaging',
+        'product.packaging', 'product_id', 'Product Packages',
         help="Gives the different ways to package the same product.")
 
     _sql_constraints = [
@@ -550,7 +550,7 @@ class ProductPackaging(models.Model):
     _description = "Packaging"
     _order = 'sequence'
 
-    name = fields.Char('Packaging Type', required=True)
+    name = fields.Char('Package Type', required=True)
     sequence = fields.Integer('Sequence', default=1, help="The first in the sequence is the default one.")
     product_id = fields.Many2one('product.product', string='Product')
     qty = fields.Float('Quantity per Package', help="The total number of products you can have per pallet or box.")

--- a/addons/product/models/product_template.py
+++ b/addons/product/models/product_template.py
@@ -101,7 +101,7 @@ class ProductTemplate(models.Model):
         'res.company', 'Company',
         default=lambda self: self.env['res.company']._company_default_get('product.template'), index=1)
     packaging_ids = fields.One2many(
-        'product.packaging', string="Packaging", compute="_compute_packaging_ids", inverse="_set_packaging_ids",
+        'product.packaging', string="Product Packages", compute="_compute_packaging_ids", inverse="_set_packaging_ids",
         help="Gives the different ways to package the same product.")
     seller_ids = fields.One2many('product.supplierinfo', 'product_tmpl_id', 'Vendors')
 
