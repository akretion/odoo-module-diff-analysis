PR: https://github.com/odoo/odoo/pull/

From: 65d8177b5576c2c86360a9def67d9207fd54c2cd
From: Romain Derie
Date: 2018-08-24 18:01:02

Breaking data model changes score: 11.200000000000001, change matches:
-    has_google_analytics = fields.Boolean(related='website_id.has_google_analytics')
-    has_google_analytics_dashboard = fields.Boolean(related='website_id.has_google_analytics_dashboard')
-    has_google_maps = fields.Boolean(related='website_id.has_google_maps')
-    social_twitter = fields.Char(related='website_id.social_twitter')
-    social_facebook = fields.Char(related='website_id.social_facebook')
-    social_github = fields.Char(related='website_id.social_github')
-    social_linkedin = fields.Char(related='website_id.social_linkedin')
-    social_youtube = fields.Char(related='website_id.social_youtube')
-    social_googleplus = fields.Char(related='website_id.social_googleplus')
-    group_multi_website = fields.Boolean("Multi-website", implied_group="website.group_multi_website")
+    has_google_analytics = fields.Boolean("Google Analytics", compute=has_google_analytics, inverse=inverse_has_google_analytics)
+    has_google_analytics_dashboard = fields.Boolean("Google Analytics Dashboard", compute=has_google_analytics_dashboard, inverse=inverse_has_google_analytics_dashboard)
+    has_google_maps = fields.Boolean("Google Maps", compute=has_google_maps, inverse=inverse_has_google_maps)
-    has_google_analytics = fields.Boolean("Google Analytics")
-    has_google_analytics_dashboard = fields.Boolean("Embedded Google Analytics")
-    has_google_maps = fields.Boolean("Google Maps")

Total Changes: 70

[REF] website*: revamp res_config_settings for website

Reorder res.config.settings for website
Make website_id in no create in most view
Revamp res.configsetting and view Form simplified

Transform old 'useless' stored field for presentation by computed field.
We can consider that if there are not key, feature is disable.

Co-authored-by: rde-odoo
Co-authored-by: jke-odoo

================================= pseudo patch: =================================

--- a/addons/website/models/res_config_settings.py
+++ b/addons/website/models/res_config_settings.py
@@ -45,32 +45,38 @@ class ResConfigSettings(models.TransientModel):
     favicon = fields.Binary('Favicon', related='website_id.favicon')
 
     google_maps_api_key = fields.Char(related='website_id.google_maps_api_key')
-    has_google_analytics = fields.Boolean(related='website_id.has_google_analytics')
-    has_google_analytics_dashboard = fields.Boolean(related='website_id.has_google_analytics_dashboard')
-    has_google_maps = fields.Boolean(related='website_id.has_google_maps')
+    group_multi_website = fields.Boolean("Multi-website", implied_group="website.group_multi_website")
 
-    social_twitter = fields.Char(related='website_id.social_twitter')
-    social_facebook = fields.Char(related='website_id.social_facebook')
-    social_github = fields.Char(related='website_id.social_github')
-    social_linkedin = fields.Char(related='website_id.social_linkedin')
-    social_youtube = fields.Char(related='website_id.social_youtube')
-    social_googleplus = fields.Char(related='website_id.social_googleplus')
+    @api.depends('website_id')
+    def has_google_analytics(self):
+        self.has_google_analytics = bool(self.google_analytics_key)
 
-    group_multi_website = fields.Boolean("Multi-website", implied_group="website.group_multi_website")
+    @api.depends('website_id')
+    def has_google_analytics_dashboard(self):
+        self.has_google_analytics_dashboard = bool(self.google_management_client_id)
+
+    @api.depends('website_id')
+    def has_google_maps(self):
+        self.has_google_maps = bool(self.google_maps_api_key)
 
-    @api.onchange('has_google_analytics')
-    def onchange_has_google_analytics(self):
+    def inverse_has_google_analytics(self):
         if not self.has_google_analytics:
             self.has_google_analytics_dashboard = False
-        if not self.has_google_analytics:
             self.google_analytics_key = False
 
-    @api.onchange('has_google_analytics_dashboard')
-    def onchange_has_google_analytics_dashboard(self):
+    def inverse_has_google_maps(self):
+        if not self.inverse_has_google_maps:
+            self._has_google_maps = False
+
+    def inverse_has_google_analytics_dashboard(self):
         if not self.has_google_analytics_dashboard:
             self.google_management_client_id = False
             self.google_management_client_secret = False
 
+    has_google_analytics = fields.Boolean("Google Analytics", compute=has_google_analytics, inverse=inverse_has_google_analytics)
+    has_google_analytics_dashboard = fields.Boolean("Google Analytics Dashboard", compute=has_google_analytics_dashboard, inverse=inverse_has_google_analytics_dashboard)
+    has_google_maps = fields.Boolean("Google Maps", compute=has_google_maps, inverse=inverse_has_google_maps)
+
     @api.onchange('language_ids')
     def _onchange_language_ids(self):
         # If current default language is removed from language_ids
@@ -102,3 +108,24 @@ class ResConfigSettings(models.TransientModel):
             'url': '/',
             'target': 'self',
         }
+
+    def company_go_to(self):
+        return {
+            'view_type': 'form',
+            'view_mode': 'form',
+            'res_model': 'res.company',
+            'type': 'ir.actions.act_window',
+            'target': 'current',
+            'res_id': self.website_id.company_id.id,
+        }
+
+    def action_website_create_new(self):
+        return {
+            'view_type': 'form',
+            'view_mode': 'form',
+            'view_id': self.env.ref('website.view_website_form').id,
+            'res_model': 'website',
+            'type': 'ir.actions.act_window',
+            'target': 'current',
+            'res_id': False,
+        }

--- a/addons/website/models/website.py
+++ b/addons/website/models/website.py
@@ -67,7 +67,7 @@ class Website(models.Model):
     def _default_social_googleplus(self):
         return self.env.ref('base.main_company').social_googleplus
 
-    name = fields.Char('Website Name')
+    name = fields.Char('Website Name', required=True)
     domain = fields.Char('Website Domain')
     country_group_ids = fields.Many2many('res.country.group', 'website_country_group_rel', 'website_id', 'country_group_id',
                                          string='Country Groups', help='Used when multiple websites have the same domain.')
@@ -89,9 +89,6 @@ class Website(models.Model):
     google_management_client_secret = fields.Char('Google Client Secret')
 
     google_maps_api_key = fields.Char('Google Maps API Key')
-    has_google_analytics = fields.Boolean("Google Analytics")
-    has_google_analytics_dashboard = fields.Boolean("Embedded Google Analytics")
-    has_google_maps = fields.Boolean("Google Maps")
 
     user_id = fields.Many2one('res.users', string='Public User', required=True)
     cdn_activated = fields.Boolean('Content Delivery Network (CDN)')
@@ -683,6 +680,14 @@ class Website(models.Model):
             return self.env.ref('website.backend_dashboard').read()[0]
         return self.env.ref('website.action_website').read()[0]
 
+    def button_go_website(self):
+        self._force()
+        return {
+            'type': 'ir.actions.act_url',
+            'url': '/',
+            'target': 'self',
+        }
+
 
 class SeoMetadata(models.AbstractModel):
 
