PR: https://github.com/odoo/odoo/pull/139379

From: c66cfcca81ba9bb766c43023d34775cd108e44b2
From: Daniel Kosky (dako)
Date: 2023-10-25 17:03:15

Breaking data model changes score: 1, change matches:
-    has_peppol_participant = fields.Boolean(

Total Changes: 29

[FIX] account_peppol: fix config setting option

The res config settings view contains block in which peppol can be
enabled. Enabling peppol using the checkbox inside the block installs
the peppol module. Once installed, the "Use Peppol invoicing" option is
available, which is itself a checkbox, nested inside of the previous
one. This gives the appearance of duplication, and in addition it's not
relevant at this point to provide the user the option to uninstall
peppol from this menu.

The solution is to replace this content in the view when peppol is
installed, such that the peppol options are always displayed, and the
enable peppol checkbox is replaced.

For this reason, references to the "is_account_peppol_participant" have
been removed, as its use was primarily for hiding/displaying these
settings. The field is no longer useful, and should, references to be
removed in a later Paccount_R have been removed, as  its use was
primarily forhiding/displaying these settings. The field is no longer
useful, and should be removed in a later upgrade script.

Required fields have been modified in the xml such that they no longer
prevent saving from the res config settings, instead validation is
performed on the "validate registration" button action.

closes odoo/odoo#139379

Task-id: none
Signed-off-by: Laurent Smet (las) <las@odoo.com>

================================= pseudo patch: =================================

--- a/addons/account_peppol/models/account_edi_proxy_user.py
+++ b/addons/account_peppol/models/account_edi_proxy_user.py
@@ -35,7 +35,6 @@ class AccountEdiProxyClientUser(models.Model):
             ):
                 self.company_id.write({
                     'account_peppol_proxy_state': 'not_registered',
-                    'is_account_peppol_participant': False,
                     'account_peppol_migration_key': False,
                 })
                 # commit the above changes before raising below

--- a/addons/account_peppol/models/res_company.py
+++ b/addons/account_peppol/models/res_company.py
@@ -55,8 +55,7 @@ class ResCompany(models.Model):
             ('rejected', 'Rejected'),
             ('canceled', 'Canceled'),
         ],
-        string='PEPPOL status',
-        compute='_compute_account_peppol_proxy_state', required=True, readonly=False, store=True, precompute=True,
+        string='PEPPOL status', required=True, default='not_registered',
     )
     is_account_peppol_participant = fields.Boolean(string='PEPPOL Participant')
     peppol_eas = fields.Selection(related='partner_id.peppol_eas', readonly=False)
@@ -136,23 +135,17 @@ class ResCompany(models.Model):
     # COMPUTE METHODS
     # -------------------------------------------------------------------------
 
-    @api.depends('is_account_peppol_participant')
-    def _compute_account_peppol_proxy_state(self):
-        for company in self:
-            if not company.account_peppol_proxy_state:
-                company.account_peppol_proxy_state = 'not_registered'
-
-    @api.depends('is_account_peppol_participant')
+    @api.depends('account_peppol_proxy_state')
     def _compute_peppol_purchase_journal_id(self):
         for company in self:
-            if company.is_account_peppol_participant and not company.peppol_purchase_journal_id:
+            if not company.peppol_purchase_journal_id and company.account_peppol_proxy_state not in ('not_registered', 'rejected'):
                 company.peppol_purchase_journal_id = self.env['account.journal'].search([
                     *self.env['account.journal']._check_company_domain(company),
                     ('type', '=', 'purchase'),
                 ], limit=1)
                 company.peppol_purchase_journal_id.is_peppol_journal = True
             else:
-                company.peppol_purchase_journal_id = False
+                company.peppol_purchase_journal_id = company.peppol_purchase_journal_id
 
     def _inverse_peppol_purchase_journal_id(self):
         for company in self:

--- a/addons/account_peppol/models/res_config_settings.py
+++ b/addons/account_peppol/models/res_config_settings.py
@@ -38,9 +38,6 @@ class ResConfigSettings(models.TransientModel):
         related='company_id.is_account_peppol_participant', readonly=False,
         help='Register as a PEPPOL user',
     )
-    has_peppol_participant = fields.Boolean(
-        compute='_compute_has_peppol_participant'
-    )
     account_peppol_edi_mode = fields.Selection(
         selection=[('demo', 'Demo'), ('test', 'Test'), ('prod', 'Live')],
         compute='_compute_account_peppol_edi_mode',
@@ -116,14 +113,6 @@ class ResConfigSettings(models.TransientModel):
                 config.account_peppol_endpoint_warning = _("The endpoint number might not be correct. "
                                                            "Please check if you entered the right identification number.")
 
-    @api.depends('company_id.is_account_peppol_participant')
-    def _compute_has_peppol_participant(self):
-        number_of_peppol_participants = len(self.env['res.company'].sudo().search([
-            ('is_account_peppol_participant', '=', True)
-        ]))
-        for config in self:
-            config.has_peppol_participant = number_of_peppol_participants > 0
-
     # -------------------------------------------------------------------------
     # BUSINESS ACTIONS
     # -------------------------------------------------------------------------
@@ -143,6 +132,8 @@ class ResConfigSettings(models.TransientModel):
 
         if not self.account_peppol_phone_number:
             raise ValidationError(_("Please enter a phone number to verify your application."))
+        if not self.account_peppol_contact_email:
+            raise ValidationError(_("Please enter a primary contact email to verify your application."))
 
         company = self.company_id
         edi_proxy_client = self.env['account_edi_proxy_client.user']
