PR: https://github.com/odoo/odoo/pull/151634

From: 1cde15fbbb2df5a413f0d80bac3414884ed5b275
From: Pierre-Yves Dufays
Date: 2024-03-06 14:39:21

Structural Changes: 3
Total Changes: 43

[IMP] {website_}mass_mailing: split contact name into first and last name

Add an option that allows to fill the contact name by providing a first and a
last name instead of a single name. This option is not set by default.

If the option is enabled, the name will automatically be filled when filling
the first and the last name (as first name followed by last name).
The first and the last name fields will also be present on the front-end when
inserting the newsletter subscription form. Unfortunately, when changing the
option, it won't be updated automatically (it must be done manually).

A small inconvenient is that when updating first or last name, it will update
the name so that the other part of the name is lost. To mitigate that problem,
we have enabled the tracking on "name" so that any change on that field is
logged in the chatter.

If the option is not enabled, only names can be filled. First and last name
will remain empty.

Enabling the option won't convert names to first and last names. We have
decided to not implement that conversion because it is not reliable as the
order of the first and last name can vary, some country have also middle
name, ... So to keep things simple, that operation must be done manually.

When not enabled, we make the first and last name fields not searchable so that
they don't appears in custom filters or dynamic placeholder.

Note: the column name of the tree view has the option optional="show". When
enabling the split name feature, the column first and last name are added to
the view with the option optional="hide" to allow the user to configure the
view with first and last name columns if needed (by default, only the name
column will be shown).

Task-3597124

closes odoo/odoo#151634

Signed-off-by: Warnon Aur√©lien (awa) <awa@odoo.com>

================================= pseudo patch: =================================

--- a/addons/mass_mailing/models/mailing_contact.py
+++ b/addons/mass_mailing/models/mailing_contact.py
@@ -29,7 +29,9 @@ class MassMailingContact(models.Model):
                     (0, 0, {'list_id': list_id}) for list_id in list_ids]
         return res
 
-    name = fields.Char()
+    name = fields.Char('Name', compute='_compute_name', readonly=False, store=True, tracking=True)
+    first_name = fields.Char('First Name')
+    last_name = fields.Char('Last Name')
     company_name = fields.Char(string='Company Name')
     title_id = fields.Many2one('res.partner.title', string='Title')
     email = fields.Char('Email')
@@ -46,6 +48,17 @@ class MassMailingContact(models.Model):
         help='Opt out flag for a specific mailing list. '
              'This field should not be used in a view without a unique and active mailing list context.')
 
+    @api.model
+    def fields_get(self, allfields=None, attributes=None):
+        """ Hide first and last name field if the split name feature is not enabled. """
+        res = super().fields_get(allfields, attributes)
+        if not self._is_name_split_activated():
+            if 'first_name' in res:
+                res['first_name']['searchable'] = False
+            if 'last_name' in res:
+                res['last_name']['searchable'] = False
+        return res
+
     @api.model
     def _search_opt_out(self, operator, value):
         # Assumes operator is '=' or '!=' and value is True or False
@@ -61,6 +74,12 @@ class MassMailingContact(models.Model):
             return [('id', 'in', [record.contact_id.id for record in contacts if record.opt_out == value])]
         return expression.FALSE_DOMAIN if value else expression.TRUE_DOMAIN
 
+    @api.depends('first_name', 'last_name')
+    def _compute_name(self):
+        for record in self:
+            if record.first_name or record.last_name:
+                record.name = ' '.join(name_part for name_part in (record.first_name, record.last_name) if name_part)
+
     @api.depends('subscription_ids')
     @api.depends_context('default_list_ids')
     def _compute_opt_out(self):
@@ -163,3 +182,9 @@ class MassMailingContact(models.Model):
             'label': _('Import Template for Mailing List Contacts'),
             'template': '/mass_mailing/static/xls/mailing_contact.xls'
         }]
+
+    @api.model
+    def _is_name_split_activated(self):
+        """ Return whether the contact names are populated as first and last name or as a single field (name). """
+        view = self.env.ref("mass_mailing.mailing_contact_view_tree_split_name", raise_if_not_found=False)
+        return view and view.sudo().active

--- a/addons/mass_mailing/models/res_config_settings.py
+++ b/addons/mass_mailing/models/res_config_settings.py
@@ -26,14 +26,30 @@ class ResConfigSettings(models.TransientModel):
         string='24H Stat Mailing Reports',
         config_parameter='mass_mailing.mass_mailing_reports',
         help='Check how well your mailing is doing a day after it has been sent.')
+    mass_mailing_split_contact_name = fields.Boolean(
+        string='Split First and Last Name',
+        help='Separate Mailing Contact Names into two fields')
 
     @api.onchange('mass_mailing_outgoing_mail_server')
     def _onchange_mass_mailing_outgoing_mail_server(self):
         if not self.mass_mailing_outgoing_mail_server:
             self.mass_mailing_mail_server_id = False
 
+    @api.model
+    def get_values(self):
+        res = super().get_values()
+        res.update(
+            mass_mailing_split_contact_name=self.env['mailing.contact']._is_name_split_activated(),
+        )
+        return res
+
     def set_values(self):
         super().set_values()
         ab_test_cron = self.env.ref('mass_mailing.ir_cron_mass_mailing_ab_testing').sudo()
         if ab_test_cron and ab_test_cron.active != self.group_mass_mailing_campaign:
             ab_test_cron.active = self.group_mass_mailing_campaign
+        if self.env['mailing.contact']._is_name_split_activated() != self.mass_mailing_split_contact_name:
+            self.env.ref(
+                "mass_mailing.mailing_contact_view_tree_split_name").active = self.mass_mailing_split_contact_name
+            self.env.ref(
+                "mass_mailing.mailing_contact_view_form_split_name").active = self.mass_mailing_split_contact_name
