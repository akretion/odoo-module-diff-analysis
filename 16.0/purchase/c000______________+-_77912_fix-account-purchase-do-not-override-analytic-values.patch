PR: https://github.com/odoo/odoo/pull/77912

From: 773583b17b76d018a2705f9118544e01cc101af2
From: Goffin Simon
Date: 2021-11-18 10:54:03

Structural Changes: 4
Total Changes: 37

[FIX] account,purchase: do not override analytic values

Editable computed fields need to have their own compute
method.

Otherwise, when providing one of the two fields at create/write time
will not be taken into account because the compute method will be
triggered for the other field.

closes odoo/odoo#77912

X-original-commit: e35dc4c87821bbb668657eed99bb51c1f853c208
Related: odoo/enterprise#21685
Signed-off-by: William Andr√© (wan) <wan@odoo.com>

================================= pseudo patch: =================================

--- a/addons/purchase/models/purchase.py
+++ b/addons/purchase/models/purchase.py
@@ -886,8 +886,8 @@ class PurchaseOrderLine(models.Model):
     price_tax = fields.Float(compute='_compute_amount', string='Tax', store=True)
 
     order_id = fields.Many2one('purchase.order', string='Order Reference', index=True, required=True, ondelete='cascade')
-    account_analytic_id = fields.Many2one('account.analytic.account', store=True, string='Analytic Account', compute='_compute_analytic_id_and_tag_ids', readonly=False)
-    analytic_tag_ids = fields.Many2many('account.analytic.tag', store=True, string='Analytic Tags', compute='_compute_analytic_id_and_tag_ids', readonly=False)
+    account_analytic_id = fields.Many2one('account.analytic.account', store=True, string='Analytic Account', compute='_compute_account_analytic_id', readonly=False)
+    analytic_tag_ids = fields.Many2many('account.analytic.tag', store=True, string='Analytic Tags', compute='_compute_analytic_tag_ids', readonly=False)
     company_id = fields.Many2one('res.company', related='order_id.company_id', string='Company', store=True, readonly=True)
     state = fields.Selection(related='order_id.state', store=True)
 
@@ -1074,17 +1074,30 @@ class PurchaseOrderLine(models.Model):
             return datetime.today() + relativedelta(days=seller.delay if seller else 0)
 
     @api.depends('product_id', 'date_order')
-    def _compute_analytic_id_and_tag_ids(self):
+    def _compute_account_analytic_id(self):
         for rec in self:
-            default_analytic_account = rec.env['account.analytic.default'].sudo().account_get(
-                product_id=rec.product_id.id,
-                partner_id=rec.order_id.partner_id.id,
-                user_id=rec.env.uid,
-                date=rec.date_order,
-                company_id=rec.company_id.id,
-            )
-            rec.account_analytic_id = rec.account_analytic_id or default_analytic_account.analytic_id
-            rec.analytic_tag_ids = rec.analytic_tag_ids or default_analytic_account.analytic_tag_ids
+            if not rec.account_analytic_id:
+                default_analytic_account = rec.env['account.analytic.default'].sudo().account_get(
+                    product_id=rec.product_id.id,
+                    partner_id=rec.order_id.partner_id.id,
+                    user_id=rec.env.uid,
+                    date=rec.date_order,
+                    company_id=rec.company_id.id,
+                )
+                rec.account_analytic_id = default_analytic_account.analytic_id
+
+    @api.depends('product_id', 'date_order')
+    def _compute_analytic_tag_ids(self):
+        for rec in self:
+            if not rec.analytic_tag_ids:
+                default_analytic_account = rec.env['account.analytic.default'].sudo().account_get(
+                    product_id=rec.product_id.id,
+                    partner_id=rec.order_id.partner_id.id,
+                    user_id=rec.env.uid,
+                    date=rec.date_order,
+                    company_id=rec.company_id.id,
+                )
+                rec.analytic_tag_ids = default_analytic_account.analytic_tag_ids
 
     @api.onchange('product_id')
     def onchange_product_id(self):
