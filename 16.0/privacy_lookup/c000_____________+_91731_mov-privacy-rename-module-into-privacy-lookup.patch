PR: https://github.com/odoo/odoo/pull/91731

From: 728415a1fb4a9229f2d004d336c922ff11910b0e
From: Yannick Tivisse
Date: 2022-05-19 10:28:37

Structural Changes: 3
Total Changes: 69

[MOV] privacy: Rename module into privacy_lookup

Purpose
=======

The newly introduced privacy module at https://github.com/odoo/odoo/pull/89312
is actually conflicting with an already existing OCA application.

See: https://github.com/OCA/data-protection/tree/14.0/privacy

As the application is only present in master and as I like the OCA (especially
Pedro), let's rename the application to avoid deployment issues on their side.

Taskid: 2857904
Part-of: odoo/odoo#91731

================================= pseudo patch: =================================

--- a/None
+++ b/addons/privacy_lookup/models/__init__.py
@@ -0,0 +1,5 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from . import res_partner
+from . import privacy_log

--- a/None
+++ b/addons/privacy_lookup/models/privacy_log.py
@@ -0,0 +1,47 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import api, fields, models, _
+from odoo.exceptions import UserError
+
+
+class PrivacyLog(models.Model):
+    _name = 'privacy.log'
+    _description = 'Privacy Log'
+
+    date = fields.Datetime(default=fields.Datetime.now, required=True)
+    anonymized_name = fields.Char(required=True)
+    anonymized_email = fields.Char(required=True)
+    user_id = fields.Many2one(
+        'res.users', string="Handled By", required=True,
+        default=lambda self: self.env.user)
+    execution_details = fields.Text()
+    records_description = fields.Text(string="Found Records")
+    additional_note = fields.Text()
+
+    @api.model_create_multi
+    def create(self, vals_list):
+        for vals in vals_list:
+            vals['anonymized_name'] = self._anonymize_name(vals['anonymized_name'])
+            vals['anonymized_email'] = self._anonymize_email(vals['anonymized_email'])
+        return super().create(vals_list)
+
+    def _anonymize_name(self, label):
+        if not label:
+            return ''
+        if '@' in label:
+            return self._anonymize_email(label)
+        return ' '.join(e[0] + '*' * (len(e) - 1) for e in label.split(' ') if e)
+
+    def _anonymize_email(self, label):
+        def _anonymize_user(label):
+            return '.'.join(e[0] + '*' * (len(e) - 1) for e in label.split('.') if e)
+        def _anonymize_domain(label):
+            if label in ['gmail.com', 'hotmail.com', 'yahoo.com']:  # More than half of addresses domains
+                return label
+            split_domain = label.split('.')
+            return '.'.join([e[0] + '*' * (len(e) - 1) for e in split_domain[:-1] if e] + [split_domain[-1]])
+        if not label or '@' not in label:
+            return UserError(_('This email address is not valid (%s)', label))
+        user, domain = label.split('@')
+        return '{}@{}'.format(_anonymize_user(user), _anonymize_domain(domain))

--- a/None
+++ b/addons/privacy_lookup/models/res_partner.py
@@ -0,0 +1,17 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import models
+
+
+class ResPartner(models.Model):
+    _inherit = 'res.partner'
+
+    def action_privacy_lookup(self):
+        self.ensure_one()
+        action = self.env['ir.actions.act_window']._for_xml_id('privacy.action_privacy_lookup_wizard')
+        action['context'] = {
+            'default_email': self.email,
+            'default_name': self.name,
+        }
+        return action
