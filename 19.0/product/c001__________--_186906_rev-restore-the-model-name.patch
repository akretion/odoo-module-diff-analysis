PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:8 + add:0, change matches:
-    _inherit = ['decimal.precision']
-    _inherit = ['ir.attachment']
-    _inherit = ["res.company"]
-    _inherit = ['res.config.settings']
-    _inherit = ['res.country.group']
-    _inherit = ['res.currency']
-    _inherit = ['res.partner']
-    _inherit = ['uom.uom']

Total Changes: 30

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/product/models/decimal_precision.py
+++ b/addons/product/models/decimal_precision.py
@@ -4,7 +4,7 @@ from odoo import api, models, _
 
 
 class DecimalPrecision(models.Model):
-    _inherit = ['decimal.precision']
+    _inherit = 'decimal.precision'
 
     @api.onchange('digits')
     def _onchange_digits(self):

--- a/addons/product/models/ir_attachment.py
+++ b/addons/product/models/ir_attachment.py
@@ -4,7 +4,7 @@ from odoo import api, models
 
 
 class IrAttachment(models.Model):
-    _inherit = ['ir.attachment']
+    _inherit = 'ir.attachment'
 
     @api.model_create_multi
     def create(self, vals_list):

--- a/addons/product/models/product_attribute.py
+++ b/addons/product/models/product_attribute.py
@@ -5,6 +5,7 @@ from odoo.exceptions import UserError
 
 
 class ProductAttribute(models.Model):
+    _name = 'product.attribute'
     _description = "Product Attribute"
     # if you change this _order, keep it in sync with the method
     # `_sort_key_attribute_value` in `product.template`

--- a/addons/product/models/product_attribute_custom_value.py
+++ b/addons/product/models/product_attribute_custom_value.py
@@ -4,6 +4,7 @@ from odoo import api, fields, models
 
 
 class ProductAttributeCustomValue(models.Model):
+    _name = 'product.attribute.custom.value'
     _description = "Product Attribute Custom Value"
     _order = 'custom_product_template_attribute_value_id, id'
 

--- a/addons/product/models/product_category.py
+++ b/addons/product/models/product_category.py
@@ -6,6 +6,7 @@ from odoo.exceptions import UserError, ValidationError
 
 
 class ProductCategory(models.Model):
+    _name = 'product.category'
     _inherit = ['mail.thread']
     _description = "Product Category"
     _parent_name = "parent_id"

--- a/addons/product/models/product_combo.py
+++ b/addons/product/models/product_combo.py
@@ -5,6 +5,7 @@ from odoo.exceptions import ValidationError
 
 
 class ProductCombo(models.Model):
+    _name = 'product.combo'
     _description = "Product Combo"
     _order = 'sequence, id'
 

--- a/addons/product/models/product_combo_item.py
+++ b/addons/product/models/product_combo_item.py
@@ -5,6 +5,7 @@ from odoo.exceptions import ValidationError
 
 
 class ProductComboItem(models.Model):
+    _name = 'product.combo.item'
     _description = "Product Combo Item"
     _check_company_auto = True
 

--- a/addons/product/models/product_document.py
+++ b/addons/product/models/product_document.py
@@ -6,6 +6,7 @@ from odoo.exceptions import ValidationError
 
 
 class ProductDocument(models.Model):
+    _name = 'product.document'
     _description = "Product Document"
     _inherits = {
         'ir.attachment': 'ir_attachment_id',

--- a/addons/product/models/product_packaging.py
+++ b/addons/product/models/product_packaging.py
@@ -10,6 +10,7 @@ from odoo.tools import float_compare, float_round
 
 
 class ProductPackaging(models.Model):
+    _name = 'product.packaging'
     _description = "Product Packaging"
     _order = 'product_id, sequence, id'
     _check_company_auto = True

--- a/addons/product/models/product_pricelist.py
+++ b/addons/product/models/product_pricelist.py
@@ -5,6 +5,7 @@ from odoo.exceptions import UserError
 
 
 class ProductPricelist(models.Model):
+    _name = 'product.pricelist'
     _inherit = ['mail.thread', 'mail.activity.mixin']
     _description = "Pricelist"
     _rec_names_search = ['name', 'currency_id']  # TODO check if should be removed

--- a/addons/product/models/product_pricelist_item.py
+++ b/addons/product/models/product_pricelist_item.py
@@ -6,6 +6,7 @@ from odoo.tools import format_amount, format_datetime, formatLang
 
 
 class ProductPricelistItem(models.Model):
+    _name = 'product.pricelist.item'
     _description = "Pricelist Rule"
     _order = "applied_on, min_quantity desc, categ_id desc, id desc"
     _check_company_auto = True

--- a/addons/product/models/product_product.py
+++ b/addons/product/models/product_product.py
@@ -13,6 +13,7 @@ from odoo.tools.misc import unique
 
 
 class ProductProduct(models.Model):
+    _name = 'product.product'
     _description = "Product Variant"
     _inherits = {'product.template': 'product_tmpl_id'}
     _inherit = ['mail.thread', 'mail.activity.mixin']

--- a/addons/product/models/product_supplierinfo.py
+++ b/addons/product/models/product_supplierinfo.py
@@ -5,6 +5,7 @@ from odoo import api, fields, models, _
 
 
 class ProductSupplierinfo(models.Model):
+    _name = 'product.supplierinfo'
     _description = "Supplier Pricelist"
     _order = 'sequence, min_qty DESC, price, id'
     _rec_name = 'partner_id'

--- a/addons/product/models/product_tag.py
+++ b/addons/product/models/product_tag.py
@@ -6,6 +6,7 @@ from odoo.osv import expression
 
 
 class ProductTag(models.Model):
+    _name = 'product.tag'
     _description = 'Product Tag'
     _order = 'sequence, id'
 

--- a/addons/product/models/product_template.py
+++ b/addons/product/models/product_template.py
@@ -15,6 +15,7 @@ PRICE_CONTEXT_KEYS = ['pricelist', 'quantity', 'uom', 'date']
 
 
 class ProductTemplate(models.Model):
+    _name = 'product.template'
     _inherit = ['mail.thread', 'mail.activity.mixin', 'image.mixin']
     _description = "Product"
     _order = "is_favorite desc, name"

--- a/addons/product/models/product_template_attribute_exclusion.py
+++ b/addons/product/models/product_template_attribute_exclusion.py
@@ -4,6 +4,7 @@ from odoo import api, fields, models
 
 
 class ProductTemplateAttributeExclusion(models.Model):
+    _name = 'product.template.attribute.exclusion'
     _description = "Product Template Attribute Exclusion"
     _order = 'product_tmpl_id, id'
 

--- a/addons/product/models/res_company.py
+++ b/addons/product/models/res_company.py
@@ -4,7 +4,7 @@ from odoo import _, api, models
 
 
 class ResCompany(models.Model):
-    _inherit = ["res.company"]
+    _inherit = "res.company"
 
     @api.model_create_multi
     def create(self, vals_list):

--- a/addons/product/models/res_config_settings.py
+++ b/addons/product/models/res_config_settings.py
@@ -4,7 +4,7 @@ from odoo import _, api, fields, models
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = ['res.config.settings']
+    _inherit = 'res.config.settings'
 
     group_uom = fields.Boolean("Units of Measure", implied_group='uom.group_uom')
     group_product_variant = fields.Boolean("Variants", implied_group='product.group_product_variant')

--- a/addons/product/models/res_country_group.py
+++ b/addons/product/models/res_country_group.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class ResCountryGroup(models.Model):
-    _inherit = ['res.country.group']
+    _inherit = 'res.country.group'
 
     pricelist_ids = fields.Many2many(
         comodel_name='product.pricelist',

--- a/addons/product/models/res_currency.py
+++ b/addons/product/models/res_currency.py
@@ -5,7 +5,7 @@ from odoo import models
 
 
 class ResCurrency(models.Model):
-    _inherit = ['res.currency']
+    _inherit = 'res.currency'
 
     def _activate_group_multi_currency(self):
         # for Sale/ POS - Multi currency flows require pricelists

--- a/addons/product/models/res_partner.py
+++ b/addons/product/models/res_partner.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class ResPartner(models.Model):
-    _inherit = ['res.partner']
+    _inherit = 'res.partner'
 
     # when the specific_property_product_pricelist is not defined
     # the fallback value may be computed with 2 ir.config_parameter

--- a/addons/product/models/uom_uom.py
+++ b/addons/product/models/uom_uom.py
@@ -5,7 +5,7 @@ from odoo import api, models, _
 
 
 class UomUom(models.Model):
-    _inherit = ['uom.uom']
+    _inherit = 'uom.uom'
 
     @api.onchange('rounding')
     def _onchange_rounding(self):
