PR: https://github.com/odoo/odoo/pull/

From: 86d10380a1a1a3438712a502ee6640fd4ec0fda6
From: Prakash Prajapati
Date: 2018-08-30 15:24:24

Structural Changes: 6
Total Changes: 6

[REF] barcodes, delivery, mrp, product, stock: Changing labels

Task: 1879617

================================= pseudo patch: =================================

--- a/addons/stock/models/stock_location.py
+++ b/addons/stock/models/stock_location.py
@@ -145,7 +145,7 @@ class Route(models.Model):
     _description = "Inventory Routes"
     _order = 'sequence'
 
-    name = fields.Char('Route Name', required=True, translate=True)
+    name = fields.Char('Route', required=True, translate=True)
     active = fields.Boolean('Active', default=True, help="If the active field is set to False, it will allow you to hide the route without removing it.")
     sequence = fields.Integer('Sequence', default=0)
     rule_ids = fields.One2many('stock.rule', 'route_id', 'Rules', copy=True)

--- a/addons/stock/models/stock_picking.py
+++ b/addons/stock/models/stock_picking.py
@@ -19,7 +19,7 @@ class PickingType(models.Model):
     _description = "The operation type determines the picking view"
     _order = 'sequence, id'
 
-    name = fields.Char('Operation Types Name', required=True, translate=True)
+    name = fields.Char('Operation Type', required=True, translate=True)
     color = fields.Integer('Color')
     sequence = fields.Integer('Sequence', help="Used to order the 'All Operations' kanban view")
     sequence_id = fields.Many2one('ir.sequence', 'Reference Sequence', required=True)

--- a/addons/stock/models/stock_warehouse.py
+++ b/addons/stock/models/stock_warehouse.py
@@ -21,7 +21,7 @@ class Warehouse(models.Model):
     # namedtuple used in helper methods generating values for routes
     Routing = namedtuple('Routing', ['from_loc', 'dest_loc', 'picking_type', 'action'])
 
-    name = fields.Char('Warehouse Name', index=True, required=True, default=lambda self: self.env['res.company']._company_default_get('stock.inventory').name)
+    name = fields.Char('Warehouse', index=True, required=True, default=lambda self: self.env['res.company']._company_default_get('stock.inventory').name)
     active = fields.Boolean('Active', default=True)
     company_id = fields.Many2one(
         'res.company', 'Company', default=lambda self: self.env['res.company']._company_default_get('stock.inventory'),
