PR: https://github.com/odoo/odoo/pull/80824

From: 18952cdc76070f2a70789f2fa25e4fa0d546d470
From: Yannick Tivisse
Date: 2021-12-14 19:13:18

Structural Changes: 1
Total Changes: 37

[IMP] *: Convert single create method into multi

Taskid: 2703085
Part-of: odoo/odoo#80824
Co-authored-by: Victor Feyens <vfe@odoo.com>

================================= pseudo patch: =================================

--- a/addons/project_timesheet_holidays/models/hr_employee.py
+++ b/addons/project_timesheet_holidays/models/hr_employee.py
@@ -7,29 +7,30 @@ from odoo import api, fields, models
 class Employee(models.Model):
     _inherit = 'hr.employee'
 
-    @api.model
-    def create(self, vals):
-        result = super(Employee, self).create(vals)
+    @api.model_create_multi
+    def create(self, vals_list):
+        employees = super().create(vals_list)
 
         # We need to create timesheet entries for the global time off that are already created
         # and are planned for after this employee creation date
 
         # First we look for the global time off that are already planned after today
         today = fields.Datetime.today()
-        global_leaves = result.resource_calendar_id.global_leave_ids.filtered(lambda l: l.date_from >= today)
-        work_hours_data = global_leaves._work_time_per_day()
+        lines_vals = []
+        for employee in employees:
+            global_leaves = employee.resource_calendar_id.global_leave_ids.filtered(lambda l: l.date_from >= today)
+            work_hours_data = global_leaves._work_time_per_day()
 
-        vals_list = []
-        for global_time_off in global_leaves:
-            for index, (day_date, work_hours_count) in enumerate(work_hours_data[global_time_off.id]):
-                vals_list.append(
-                    global_time_off._timesheet_prepare_line_values(
-                        index,
-                        result,
-                        work_hours_data[global_time_off.id],
-                        day_date,
-                        work_hours_count
+            for global_time_off in global_leaves:
+                for index, (day_date, work_hours_count) in enumerate(work_hours_data[global_time_off.id]):
+                    lines_vals.append(
+                        global_time_off._timesheet_prepare_line_values(
+                            index,
+                            employee,
+                            work_hours_data[global_time_off.id],
+                            day_date,
+                            work_hours_count
+                        )
                     )
-                )
-        self.env['account.analytic.line'].sudo().create(vals_list)
-        return result
+        self.env['account.analytic.line'].sudo().create(lines_vals)
+        return employees
