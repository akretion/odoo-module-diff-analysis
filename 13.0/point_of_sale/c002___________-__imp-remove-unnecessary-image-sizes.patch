PR: https://github.com/odoo/odoo/pull/

From: f0ffbea17381cb117f2eed4ea18a76e2b0f37f00
From: SÃ©bastien Theys
Date: 2019-08-02 16:47:58

Breaking data model changes score: 3, change matches:
-    image = fields.Binary(
-    image_128 = fields.Binary(string="Medium-sized image",
-    image_64 = fields.Binary(string="Small-sized image",

Total Changes: 27

[IMP] *: remove unnecessary image sizes

The big images are probably never going to be used for the following models:

* pos category
* fleet brand
* livechat channel
* mail channel
* payment acquirer

And if big images are needed some day the model should use image.mixin instead.

PR: #34925

================================= pseudo patch: =================================

--- a/addons/point_of_sale/models/pos_category.py
+++ b/addons/point_of_sale/models/pos_category.py
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
-from odoo import api, fields, models, tools, _
+from odoo import api, fields, models, _
+
 
 class PosCategory(models.Model):
     _name = "pos.category"
@@ -16,29 +17,7 @@ class PosCategory(models.Model):
     parent_id = fields.Many2one('pos.category', string='Parent Category', index=True)
     child_id = fields.One2many('pos.category', 'parent_id', string='Children Categories')
     sequence = fields.Integer(help="Gives the sequence order when displaying a list of product categories.")
-    # NOTE: there is no 'default image', because by default we don't show
-    # thumbnails for categories. However if we have a thumbnail for at least one
-    # category, then we display a default image on the other, so that the
-    # buttons have consistent styling.
-    image = fields.Binary(
-        help="This field holds the image used as image for the cateogry, limited to 1024x1024px.")
-    image_128 = fields.Binary(string="Medium-sized image",
-        help="Medium-sized image of the category. It is automatically "
-             "resized as a 128x128px image, with aspect ratio preserved. "
-             "Use this field in form views or some kanban views.")
-    image_64 = fields.Binary(string="Small-sized image",
-        help="Small-sized image of the category. It is automatically "
-             "resized as a 64x64px image, with aspect ratio preserved. "
-             "Use this field anywhere a small image is required.")
-
-    @api.model
-    def create(self, vals):
-        tools.image_resize_images(vals)
-        return super(PosCategory, self).create(vals)
-
-    def write(self, vals):
-        tools.image_resize_images(vals)
-        return super(PosCategory, self).write(vals)
+    image_128 = fields.Image("Image", max_width=128, max_height=128)
 
     def name_get(self):
         def get_names(cat):
