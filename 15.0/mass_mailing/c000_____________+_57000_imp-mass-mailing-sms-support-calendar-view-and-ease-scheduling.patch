PR: https://github.com/odoo/odoo/pull/57000

From: e598e74648576e8812592583fa1a9dec65ead0d2
From: Nasreddin (bon)
Date: 2020-11-24 15:25:50

Structural Changes: 2
Total Changes: 48

[IMP] mass_mailing(_sms): support calendar view and ease scheduling

PURPOSE

To ease the scheduling process, we introduce a new calendar view on mailings
that allows to easily schedule your communications. In addition, mailings and
sms views are improved to ease global usability especially about scheduling
configuration.

SPECIFICATIONSS

- add a calendar view to allow marketeers to either schedule or overview their
  ongoing mailings/sms;
  Side note: inspired by what has been done with Social Posts

- improve the scheduling flow by allowing to configure it directly in the form
  view using fields rather than action buttons that open an extra window. This
  implied removing the schedule wizard as everything is now configured directly
  from the mailing form view;

- add a constraint on 'schedule_date' to make sure it's not scheduled in the
  past;

- compute a calendar_date to be used by calendar view. It is either sent
date (if sent), next departure of cron (if in queue) or schedule date (if
scheduled).

- update mass_mailing_sms to match scheduling flow of emails and adjust the
  'sms_force_send' display to ease understanding ;

LINKS

Task ID-2202759
COM PR odoo/odoo#57000
ENT PR odoo/enterprise#12920
UPG PR odoo/upgrade#1736

Signed-off-by: Thibault Delavallee (tde) <tde@openerp.com>
Co-authored-by: Aur√©lien Warnon <awa@odoo.com>

================================= pseudo patch: =================================

--- a/addons/mass_mailing/models/mailing.py
+++ b/addons/mass_mailing/models/mailing.py
@@ -49,6 +49,17 @@ class MassMailing(models.Model):
     @api.model
     def default_get(self, fields):
         vals = super(MassMailing, self).default_get(fields)
+
+        # field sent by the calendar view when clicking on a date block
+        # we use it to setup the scheduled date of the created mailing.mailing
+        default_calendar_date = self.env.context.get('default_calendar_date')
+        if default_calendar_date and ('schedule_type' in fields and 'schedule_date' in fields) \
+           and fields.Datetime.from_string(default_calendar_date) > fields.Datetime.now():
+            vals.update({
+                'schedule_type': 'scheduled',
+                'schedule_date': default_calendar_date
+            })
+
         if 'contact_list_ids' in fields and not vals.get('contact_list_ids') and vals.get('mailing_model_id'):
             if vals.get('mailing_model_id') == self.env['ir.model']._get('mailing.list').id:
                 mailing_list = self.env['mailing.list'].search([], limit=2)
@@ -75,7 +86,13 @@ class MassMailing(models.Model):
     email_from = fields.Char(string='Send From', required=True,
         default=lambda self: self.env.user.email_formatted)
     sent_date = fields.Datetime(string='Sent Date', copy=False)
-    schedule_date = fields.Datetime(string='Scheduled for', tracking=True)
+
+    schedule_type = fields.Selection([('now', 'Send now'), ('scheduled', 'Send on')], string='Schedule',
+        default='now', required=True, readonly=True, states={'draft': [('readonly', False)]})
+    schedule_date = fields.Datetime(string='Scheduled for', tracking=True, readonly=True, states={'draft': [('readonly', False)]},
+        compute='_compute_schedule_date', store=True, copy=True)
+    calendar_date = fields.Datetime('Calendar Date', compute='_compute_calendar_date', store=True, copy=False,
+        help="Technical field for the calendar view.")
     # don't translate 'body_arch', the translations are only on 'body_html'
     body_arch = fields.Html(string='Body', translate=False)
     body_html = fields.Html(string='Body converted to be sent by mail', sanitize_attributes=False)
@@ -254,6 +271,24 @@ class MassMailing(models.Model):
             else:
                 mailing.mailing_domain = repr(mailing._get_default_mailing_domain())
 
+    @api.depends('schedule_type')
+    def _compute_schedule_date(self):
+        for mailing in self:
+            if mailing.schedule_type == 'now' or not mailing.schedule_date:
+                mailing.schedule_date = False
+
+    @api.depends('state', 'schedule_date', 'sent_date', 'next_departure')
+    def _compute_calendar_date(self):
+        for mailing in self:
+            if mailing.state == 'done':
+                mailing.calendar_date = mailing.sent_date
+            elif mailing.state == 'in_queue':
+                mailing.calendar_date = mailing.next_departure
+            elif mailing.state == 'sending':
+                mailing.calendar_date = fields.Datetime.now()
+            else:
+                mailing.calendar_date = False
+
     # ------------------------------------------------------
     # ORM
     # ------------------------------------------------------
@@ -269,6 +304,7 @@ class MassMailing(models.Model):
     def write(self, values):
         if values.get('body_html'):
             values['body_html'] = self._convert_inline_images_to_urls(values['body_html'])
+
         return super(MassMailing, self).write(values)
 
     @api.returns('self', lambda value: value.id)
@@ -313,17 +349,17 @@ class MassMailing(models.Model):
             'context': ctx,
         }
 
+    def action_launch(self):
+        return self.action_put_in_queue()
+
     def action_schedule(self):
-        self.ensure_one()
-        action = self.env["ir.actions.actions"]._for_xml_id("mass_mailing.mailing_mailing_schedule_date_action")
-        action['context'] = dict(self.env.context, default_mass_mailing_id=self.id)
-        return action
+        return self.action_put_in_queue()
 
     def action_put_in_queue(self):
         self.write({'state': 'in_queue'})
 
     def action_cancel(self):
-        self.write({'state': 'draft', 'schedule_date': False, 'next_departure': False})
+        self.write({'state': 'draft', 'schedule_date': False, 'schedule_type': 'now', 'next_departure': False})
 
     def action_retry_failed(self):
         failed_mails = self.env['mail.mail'].sudo().search([
