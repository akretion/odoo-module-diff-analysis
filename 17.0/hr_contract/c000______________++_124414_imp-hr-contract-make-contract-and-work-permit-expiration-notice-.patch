PR: https://github.com/odoo/odoo/pull/124414

From: b56c565c076b5507d8a76abb8048a3e4c713ed53
From: ravb-odoo
Date: 2023-09-05 12:22:15

Structural Changes: 7
Total Changes: 68

[IMP] hr_contract: make contract and work permit expiration notice periods configurable

Currently the warning messages to warn for contracts and work permits that are
about to expire are hardcoded to be triggered 7 and 60 days in advance
respectively. With this commit, these notice periods are made to be configurable
on a per-company basis.

task-3340931

closes odoo/odoo#124414

Related: odoo/enterprise#42214
Related: odoo/upgrade#4885
Signed-off-by: Sofie Gvaladze (sgv) <sgv@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr_contract/models/__init__.py
+++ b/addons/hr_contract/models/__init__.py
@@ -4,6 +4,8 @@
 from . import hr_employee
 from . import hr_contract
 from . import res_users
+from . import res_company
+from . import res_config_settings
 from . import resource
 from . import resource_resource
 from . import hr_payroll_structure_type

--- a/addons/hr_contract/models/hr_contract.py
+++ b/addons/hr_contract/models/hr_contract.py
@@ -69,7 +69,6 @@ class Contract(models.Model):
     currency_id = fields.Many2one(string="Currency", related='company_id.currency_id', readonly=True)
     permit_no = fields.Char('Work Permit No', related="employee_id.permit_no", readonly=False)
     visa_no = fields.Char('Visa No', related="employee_id.visa_no", readonly=False)
-    visa_expire = fields.Date('Visa Expire Date', related="employee_id.visa_expire", readonly=False)
 
     def _get_hr_responsible_domain(self):
         return "[('share', '=', False), ('company_ids', 'in', company_id), ('groups_id', 'in', %s)]" % self.env.ref('hr.group_hr_user').id
@@ -152,16 +151,23 @@ class Contract(models.Model):
     @api.model
     def update_state(self):
         from_cron = 'from_cron' in self.env.context
-        contracts = self.search([
-            ('state', '=', 'open'), ('kanban_state', '!=', 'blocked'),
-            '|',
-            '&',
-            ('date_end', '<=', fields.Date.to_string(date.today() + relativedelta(days=7))),
-            ('date_end', '>=', fields.Date.to_string(date.today() + relativedelta(days=1))),
-            '&',
-            ('visa_expire', '<=', fields.Date.to_string(date.today() + relativedelta(days=60))),
-            ('visa_expire', '>=', fields.Date.to_string(date.today() + relativedelta(days=1))),
-        ])
+        companies = self.env['res.company'].search([])
+        contracts = self.env['hr.contract']
+        work_permit_contracts = self.env['hr.contract']
+        for company in companies:
+            contracts += self.search([
+                ('state', '=', 'open'), ('kanban_state', '!=', 'blocked'), ('company_id', '=', company.id),
+                '&',
+                ('date_end', '<=', fields.date.today() + relativedelta(days=company.contract_expiration_notice_period)),
+                ('date_end', '>=', fields.date.today() + relativedelta(days=1)),
+            ])
+
+            work_permit_contracts += self.search([
+                ('state', '=', 'open'), ('kanban_state', '!=', 'blocked'), ('company_id', '=', company.id),
+                '&',
+                ('employee_id.work_permit_expiration_date', '<=', fields.date.today() + relativedelta(days=company.work_permit_expiration_notice_period)),
+                ('employee_id.work_permit_expiration_date', '>=', fields.date.today() + relativedelta(days=1)),
+            ])
 
         for contract in contracts:
             contract.with_context(mail_activity_quick_update=True).activity_schedule(
@@ -175,14 +181,28 @@ class Contract(models.Model):
                 )
             )
 
+        for contract in work_permit_contracts:
+            contract.with_context(mail_activity_quick_update=True).activity_schedule(
+                'mail.mail_activity_data_todo', contract.date_end,
+                _("The work permit of %s is about to expire.", contract.employee_id.name),
+                user_id=contract.hr_responsible_id.id or self.env.uid)
+            contract.message_post(
+                body=_(
+                    "According to Employee's Working Permit Expiration Date, this contract has been put in red on the %s. Please advise and correct.",
+                    fields.Date.today()
+                )
+            )
+
         if contracts:
             contracts._safe_write_for_cron({'kanban_state': 'blocked'}, from_cron)
+        if work_permit_contracts:
+            work_permit_contracts._safe_write_for_cron({'kanban_state': 'blocked'}, from_cron)
 
         contracts_to_close = self.search([
             ('state', '=', 'open'),
             '|',
             ('date_end', '<=', fields.Date.to_string(date.today())),
-            ('visa_expire', '<=', fields.Date.to_string(date.today())),
+            ('employee_id.work_permit_expiration_date', '<=', fields.Date.to_string(date.today())),
         ])
 
         if contracts_to_close:

--- a/None
+++ b/addons/hr_contract/models/res_company.py
@@ -0,0 +1,11 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import fields, models
+
+
+class ResCompany(models.Model):
+    _inherit = "res.company"
+
+    contract_expiration_notice_period = fields.Integer("Contract Expiry Notice Period", default=7)
+    work_permit_expiration_notice_period = fields.Integer("Work Permit Expiry Notice Period", default=60)

--- a/None
+++ b/addons/hr_contract/models/res_config_settings.py
@@ -0,0 +1,11 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import fields, models
+
+
+class ResConfigSettings(models.TransientModel):
+    _inherit = 'res.config.settings'
+
+    contract_expiration_notice_period = fields.Integer(string="Contract Expiry Notice Period", related='company_id.contract_expiration_notice_period', readonly=False)
+    work_permit_expiration_notice_period = fields.Integer(string="Work Permit Expiry Notice Period", related='company_id.work_permit_expiration_notice_period', readonly=False)
