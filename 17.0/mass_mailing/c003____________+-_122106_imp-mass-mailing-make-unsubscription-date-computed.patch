PR: https://github.com/odoo/odoo/pull/122106

From: 7b610957da335a9f7b6f29bbbff4466aba8571c3
From: Thibault Delavall√©e
Date: 2023-05-23 16:02:04

Structural Changes: 4
Total Changes: 17

[IMP] mass_mailing: make unsubscription_date computed

In this commit we remove overrides of create / write on subscription model to
make 'unsubscription_date' an editable computed field instead.

While being there, tracking on blacklist model is ordered, as a side dish
to prepare other mailing improvements.

Prepares Task-2150462 (Mass Mailing: Improve subscription management)

closes odoo/odoo#122106

Signed-off-by: Thibault Delavallee (tde) <tde@openerp.com>

================================= pseudo patch: =================================

--- a/addons/mass_mailing/models/mailing_contact_subscription.py
+++ b/addons/mass_mailing/models/mailing_contact_subscription.py
@@ -20,7 +20,9 @@ class MassMailingContactListRel(models.Model):
         string='Opt Out',
         default=False,
         help='The contact has chosen not to receive mails anymore from this list')
-    unsubscription_date = fields.Datetime(string='Unsubscription Date')
+    unsubscription_date = fields.Datetime(
+        string='Unsubscription Date',
+        compute='_compute_unsubscription_date', readonly=False, store=True)
     message_bounce = fields.Integer(related='contact_id.message_bounce', store=False, readonly=False)
     is_blacklisted = fields.Boolean(related='contact_id.is_blacklisted', store=False, readonly=False)
 
@@ -29,19 +31,20 @@ class MassMailingContactListRel(models.Model):
          'A mailing contact cannot subscribe to the same mailing list multiple times.')
     ]
 
+    @api.depends('opt_out')
+    def _compute_unsubscription_date(self):
+        self.filtered(lambda sub: not sub.opt_out).unsubscription_date = False
+        for subscription in self.filtered('opt_out'):
+            subscription.unsubscription_date = self.env.cr.now()
+
     @api.model_create_multi
     def create(self, vals_list):
-        now = fields.Datetime.now()
         for vals in vals_list:
-            if 'opt_out' in vals and not vals.get('unsubscription_date'):
-                vals['unsubscription_date'] = now if vals['opt_out'] else False
             if vals.get('unsubscription_date'):
                 vals['opt_out'] = True
         return super().create(vals_list)
 
     def write(self, vals):
-        if 'opt_out' in vals and 'unsubscription_date' not in vals:
-            vals['unsubscription_date'] = fields.Datetime.now() if vals['opt_out'] else False
         if vals.get('unsubscription_date'):
             vals['opt_out'] = True
-        return super(MassMailingContactListRel, self).write(vals)
+        return super().write(vals)
