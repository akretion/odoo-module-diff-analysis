PR: https://github.com/odoo/odoo/pull/122106

From: 5b760634ca50edfc1227d6523fe1d8639d76c84e
From: Thibault Delavall√©e
Date: 2023-05-23 16:02:03

Breaking data model changes scores: del:6 + add:0, change matches:
-    contact_id = fields.Many2one('mailing.contact', string='Contact', ondelete='cascade', required=True)
-    list_id = fields.Many2one('mailing.list', string='Mailing List', ondelete='cascade', required=True)
-    opt_out = fields.Boolean(string='Opt Out',
-    unsubscription_date = fields.Datetime(string='Unsubscription Date')
-    message_bounce = fields.Integer(related='contact_id.message_bounce', store=False, readonly=False)
-    is_blacklisted = fields.Boolean(related='contact_id.is_blacklisted', store=False, readonly=False)

Total Changes: 42

[REM] mass_mailing: remove duplicated code

Oversight of odoo/odoo@e7c22094068ce5cdff7f30178cea6d4f39f09137 . A whole model was duplicated due to a
bad conflict resolution. Indeed 'mailing.contact.subscription' model has been
moved into its own file at odoo/odoo@4f39a80e7619870fb7f7655823fa5eecc67936a1 but original code was
added back in the contact file when forwarding the bug fix.

As model was created / defined twice, the second definition was simply
overriding the first one, hence no issue arose.

Prepares Task-2150462 (Mass Mailing: Improve subscription management)

Part-of: odoo/odoo#122106

================================= pseudo patch: =================================

--- a/addons/mass_mailing/models/mailing_contact.py
+++ b/addons/mass_mailing/models/mailing_contact.py
@@ -6,46 +6,6 @@ from odoo.exceptions import UserError
 from odoo.osv import expression
 
 
-class MassMailingContactListRel(models.Model):
-    """ Intermediate model between mass mailing list and mass mailing contact
-        Indicates if a contact is opted out for a particular list
-    """
-    _name = 'mailing.contact.subscription'
-    _description = 'Mass Mailing Subscription Information'
-    _table = 'mailing_contact_list_rel'
-    _rec_name = 'contact_id'
-
-    contact_id = fields.Many2one('mailing.contact', string='Contact', ondelete='cascade', required=True)
-    list_id = fields.Many2one('mailing.list', string='Mailing List', ondelete='cascade', required=True)
-    opt_out = fields.Boolean(string='Opt Out',
-                             help='The contact has chosen not to receive mails anymore from this list', default=False)
-    unsubscription_date = fields.Datetime(string='Unsubscription Date')
-    message_bounce = fields.Integer(related='contact_id.message_bounce', store=False, readonly=False)
-    is_blacklisted = fields.Boolean(related='contact_id.is_blacklisted', store=False, readonly=False)
-
-    _sql_constraints = [
-        ('unique_contact_list', 'unique (contact_id, list_id)',
-         'A mailing contact cannot subscribe to the same mailing list multiple times.')
-    ]
-
-    @api.model_create_multi
-    def create(self, vals_list):
-        now = fields.Datetime.now()
-        for vals in vals_list:
-            if 'opt_out' in vals and not vals.get('unsubscription_date'):
-                vals['unsubscription_date'] = now if vals['opt_out'] else False
-            if vals.get('unsubscription_date'):
-                vals['opt_out'] = True
-        return super().create(vals_list)
-
-    def write(self, vals):
-        if 'opt_out' in vals and 'unsubscription_date' not in vals:
-            vals['unsubscription_date'] = fields.Datetime.now() if vals['opt_out'] else False
-        if vals.get('unsubscription_date'):
-            vals['opt_out'] = True
-        return super(MassMailingContactListRel, self).write(vals)
-
-
 class MassMailingContact(models.Model):
     """Model of a contact. This model is different from the partner model
     because it holds only some basic information: name, email. The purpose is to

--- a/addons/mass_mailing/models/mailing_contact_subscription.py
+++ b/addons/mass_mailing/models/mailing_contact_subscription.py
@@ -33,7 +33,7 @@ class MassMailingContactListRel(models.Model):
     def create(self, vals_list):
         now = fields.Datetime.now()
         for vals in vals_list:
-            if 'opt_out' in vals and 'unsubscription_date' not in vals:
+            if 'opt_out' in vals and not vals.get('unsubscription_date'):
                 vals['unsubscription_date'] = now if vals['opt_out'] else False
             if vals.get('unsubscription_date'):
                 vals['opt_out'] = True
