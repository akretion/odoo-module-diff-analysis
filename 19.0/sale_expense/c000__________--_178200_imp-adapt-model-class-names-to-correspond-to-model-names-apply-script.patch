PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:7 + add:0, change matches:
-    _inherit = 'account.move.line'
-    _inherit = 'account.move'
-    _inherit = "hr.expense"
-    _inherit = "hr.expense.sheet"
-    _inherit = "hr.expense.split"
-    _inherit = 'product.template'
-    _inherit = 'sale.order'

Total Changes: 18

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/sale_expense/models/account_move_line.py
+++ b/addons/sale_expense/models/account_move_line.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class AccountMoveLine(models.Model):
-    _inherit = 'account.move.line'
+    _inherit = ['account.move.line']
 
     def _sale_can_be_reinvoice(self):
         """ determine if the generated analytic line should be reinvoiced or not.
@@ -44,7 +44,7 @@ class AccountMoveLine(models.Model):
 
 
 class AccountMove(models.Model):
-    _inherit = 'account.move'
+    _inherit = ['account.move']
 
     def _reverse_moves(self, default_values_list=None, cancel=False):
         self.expense_sheet_id._sale_expense_reset_sol_quantities()

--- a/addons/sale_expense/models/hr_expense.py
+++ b/addons/sale_expense/models/hr_expense.py
@@ -4,8 +4,8 @@
 from odoo import api, fields, models
 
 
-class Expense(models.Model):
-    _inherit = "hr.expense"
+class HrExpense(models.Model):
+    _inherit = ["hr.expense"]
 
     sale_order_id = fields.Many2one('sale.order', compute='_compute_sale_order_id', store=True, string='Customer to Reinvoice', readonly=False, tracking=True,
         # NOTE: only confirmed SO can be selected, but this domain in activated throught the name search with the `sale_expense_all_order`
@@ -31,7 +31,7 @@ class Expense(models.Model):
         self.env.add_to_compute(self._fields['analytic_distribution'], to_reset)
 
     def _get_split_values(self):
-        vals = super(Expense, self)._get_split_values()
+        vals = super()._get_split_values()
         for split_value in vals:
             split_value['sale_order_id'] = self.sale_order_id.id
         return vals

--- a/addons/sale_expense/models/hr_expense_sheet.py
+++ b/addons/sale_expense/models/hr_expense_sheet.py
@@ -5,7 +5,7 @@ from odoo import fields, models, _
 
 
 class HrExpenseSheet(models.Model):
-    _inherit = "hr.expense.sheet"
+    _inherit = ["hr.expense.sheet"]
 
     sale_order_count = fields.Integer(compute='_compute_sale_order_count')
 

--- a/addons/sale_expense/models/hr_expense_split.py
+++ b/addons/sale_expense/models/hr_expense_split.py
@@ -5,7 +5,7 @@ from odoo import fields, models, api
 
 
 class HrExpenseSplit(models.TransientModel):
-    _inherit = "hr.expense.split"
+    _inherit = ["hr.expense.split"]
 
     def default_get(self, fields):
         result = super(HrExpenseSplit, self).default_get(fields)

--- a/addons/sale_expense/models/product_template.py
+++ b/addons/sale_expense/models/product_template.py
@@ -5,7 +5,7 @@ from odoo import api, models, fields, _
 
 
 class ProductTemplate(models.Model):
-    _inherit = 'product.template'
+    _inherit = ['product.template']
 
     expense_policy_tooltip = fields.Char(compute='_compute_expense_policy_tooltip')
 

--- a/addons/sale_expense/models/sale_order.py
+++ b/addons/sale_expense/models/sale_order.py
@@ -6,7 +6,7 @@ from odoo.osv import expression
 
 
 class SaleOrder(models.Model):
-    _inherit = 'sale.order'
+    _inherit = ['sale.order']
 
     expense_ids = fields.One2many('hr.expense', 'sale_order_id', string='Expenses', domain=[('state', '=', 'done')], readonly=True, copy=False)
     expense_count = fields.Integer("# of Expenses", compute='_compute_expense_count', compute_sudo=True)
