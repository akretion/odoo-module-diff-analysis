PR: https://github.com/odoo/odoo/pull/24738

From: 10f1a1a0c451a3538ac77c6c06cd26fb5898fa9c
From: Xavier Morel
Date: 2019-05-27 12:00:39

Breaking data model changes scores: del:3 + add:0, change matches:
-    src_model = fields.Char(string='Source Model',
-    auto_search = fields.Boolean(default=True)
-    multi = fields.Boolean(string='Restrict to lists', help="If checked and the action is bound to a model, it will only appear in the More menu on list views")

Total Changes: 12

[REM] multi from ir.actions.act_window

Task 1843603

* src_model is redundant with binding_model_id
* multi -> binding_view_types (if empty => all views) (maybe should be
empty by default yo?)
* in convert, type => rec.get(type) but no @type possible on <act_window>...
* removed deprecated auto_refresh & auto_search (not used anywhere (?))

closes odoo/odoo#24738

Signed-off-by: Xavier Morel (xmo) <xmo@odoo.com>

================================= pseudo patch: =================================

--- a/odoo/addons/base/models/ir_actions.py
+++ b/odoo/addons/base/models/ir_actions.py
@@ -45,9 +45,9 @@ class IrActions(models.Model):
     binding_model_id = fields.Many2one('ir.model', ondelete='cascade',
                                        help="Setting a value makes this action available in the sidebar for the given model.")
     binding_type = fields.Selection([('action', 'Action'),
-                                     ('action_form_only', "Form-only"),
                                      ('report', 'Report')],
                                     required=True, default='action')
+    binding_view_types = fields.Char(default='list,form')
 
     def _compute_xml_id(self):
         res = self.get_external_id()
@@ -134,13 +134,13 @@ class IrActionsActWindow(models.Model):
     _sequence = 'ir_actions_id_seq'
     _order = 'name'
 
-    @api.constrains('res_model', 'src_model')
+    @api.constrains('res_model', 'binding_model_id')
     def _check_model(self):
         for action in self:
             if action.res_model not in self.env:
                 raise ValidationError(_('Invalid model name %r in action definition.') % action.res_model)
-            if action.src_model and action.src_model not in self.env:
-                raise ValidationError(_('Invalid model name %r in action definition.') % action.src_model)
+            if action.binding_model_id and action.binding_model_id.model not in self.env:
+                raise ValidationError(_('Invalid model name %r in action definition.') % action.binding_model_id.model)
 
     @api.depends('view_ids.view_mode', 'view_mode', 'view_id.type')
     def _compute_views(self):
@@ -180,8 +180,6 @@ class IrActionsActWindow(models.Model):
     res_id = fields.Integer(string='Record ID', help="Database ID of record to open in form view, when ``view_mode`` is set to 'form' only")
     res_model = fields.Char(string='Destination Model', required=True,
                             help="Model name of the object to open in the view window")
-    src_model = fields.Char(string='Source Model',
-                            help="Optional model name of the objects on which this action should be visible")
     target = fields.Selection([('current', 'Current Window'), ('new', 'New Window'), ('inline', 'Inline Edit'), ('fullscreen', 'Full Screen'), ('main', 'Main action of Current Window')], default="current", string='Target Window')
     view_mode = fields.Char(required=True, default='tree,form',
                             help="Comma-separated list of allowed view modes, such as 'form', 'tree', 'calendar', etc. (Default: tree,form)")
@@ -199,9 +197,7 @@ class IrActionsActWindow(models.Model):
                                  'act_id', 'gid', string='Groups')
     search_view_id = fields.Many2one('ir.ui.view', string='Search View Ref.')
     filter = fields.Boolean()
-    auto_search = fields.Boolean(default=True)
     search_view = fields.Text(compute='_compute_search_view')
-    multi = fields.Boolean(string='Restrict to lists', help="If checked and the action is bound to a model, it will only appear in the More menu on list views")
 
     @api.multi
     def read(self, fields=None, load='_classic_read'):
