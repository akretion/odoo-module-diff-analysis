PR: https://github.com/odoo/odoo/pull/84920

From: 83c52575d0ce3d7deb1737c622c6ce366db8c31b
From: Demesmaeker
Date: 2023-01-18 20:08:52

Structural Changes: 2
Total Changes: 95

[REF] product,repair,(*_)sale(_*): unrequired pricelist

Removes the constraint of using a pricelist and makes all sales flows
rely on the currency of the sale order (or repair order)

task-2735672

closes odoo/odoo#84920

Related: odoo/enterprise#24716
Related: odoo/upgrade#3642
Signed-off-by: Morgane Demesmaeker <edm@odoo.com>

================================= pseudo patch: =================================

--- a/addons/sale/models/product_template.py
+++ b/addons/sale/models/product_template.py
@@ -157,7 +157,10 @@ class ProductTemplate(models.Model):
                 }]
         return res
 
-    def _get_combination_info(self, combination=False, product_id=False, add_qty=1, pricelist=False, parent_combination=False, only_template=False):
+    def _get_combination_info(
+            self, combination=False, product_id=False, add_qty=1, pricelist=False,
+            parent_combination=False, only_template=False
+    ):
         """ Return info about a given combination.
 
         Note: this method does not take into account whether the combination is
@@ -209,12 +212,13 @@ class ProductTemplate(models.Model):
         # get the name before the change of context to benefit from prefetch
         display_name = self.display_name
 
-        display_image = True
         quantity = self.env.context.get('quantity', add_qty)
         product_template = self
 
         combination = combination or product_template.env['product.template.attribute.value']
 
+        pricelist = pricelist or self.env['product.pricelist']
+
         if not product_id and not combination and not only_template:
             combination = product_template._get_first_possible_combination(parent_combination)
 
@@ -242,10 +246,7 @@ class ProductTemplate(models.Model):
                     no_variant_attributes_price_extra=tuple(no_variant_attributes_price_extra)
                 )
             list_price = product.price_compute('list_price')[product.id]
-            if pricelist:
-                price = pricelist._get_product_price(product, quantity)
-            else:
-                price = list_price
+            price = pricelist._get_product_price(product, quantity)
             display_image = bool(product.image_128)
             display_name = product.display_name
             price_extra = (product.price_extra or 0.0) + (sum(no_variant_attributes_price_extra) or 0.0)
@@ -254,28 +255,26 @@ class ProductTemplate(models.Model):
             product_template = product_template.with_context(current_attributes_price_extra=current_attributes_price_extra)
             price_extra = sum(current_attributes_price_extra)
             list_price = product_template.price_compute('list_price')[product_template.id]
-            if pricelist:
-                price = pricelist._get_product_price(product_template, quantity)
-            else:
-                price = list_price
+            price = pricelist._get_product_price(product_template, quantity)
             display_image = bool(product_template.image_128)
 
             combination_name = combination._get_combination_name()
             if combination_name:
                 display_name = "%s (%s)" % (display_name, combination_name)
 
-        if pricelist and pricelist.currency_id != product_template.currency_id:
+        currency = pricelist.currency_id or self.env.company.currency_id
+        if currency != product_template.currency_id:
             list_price = product_template.currency_id._convert(
-                list_price, pricelist.currency_id, product_template._get_current_company(pricelist=pricelist),
+                list_price, currency, product_template._get_current_company(pricelist=pricelist),
                 fields.Date.today()
             )
             price_extra = product_template.currency_id._convert(
-                price_extra, pricelist.currency_id, product_template._get_current_company(pricelist=pricelist),
+                price_extra, currency, product_template._get_current_company(pricelist=pricelist),
                 fields.Date.today()
             )
 
         price_without_discount = list_price if pricelist and pricelist.discount_policy == 'without_discount' else price
-        has_discounted_price = (pricelist or product_template).currency_id.compare_amounts(price_without_discount, price) == 1
+        has_discounted_price = currency.compare_amounts(price_without_discount, price) == 1
 
         return {
             'product_id': product.id,

--- a/addons/sale/models/sale_order.py
+++ b/addons/sale/models/sale_order.py
@@ -172,15 +172,18 @@ class SaleOrder(models.Model):
         comodel_name='product.pricelist',
         string="Pricelist",
         compute='_compute_pricelist_id',
-        store=True, readonly=False, precompute=True, check_company=True, required=True,  # Unrequired company
+        store=True, readonly=False, precompute=True, check_company=True,  # Unrequired company
         states=READONLY_FIELD_STATES,
         tracking=1,
         domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]",
         help="If you change the pricelist, only newly added lines will be affected.")
     currency_id = fields.Many2one(
-        related='pricelist_id.currency_id',
-        depends=["pricelist_id"],
-        store=True, precompute=True, ondelete="restrict")
+        comodel_name='res.currency',
+        compute='_compute_currency_id',
+        store=True,
+        precompute=True,
+        ondelete='restrict'
+    )
     currency_rate = fields.Float(
         string="Currency Rate",
         compute='_compute_currency_rate',
@@ -284,10 +287,11 @@ class SaleOrder(models.Model):
 
     show_update_fpos = fields.Boolean(
         string="Has Fiscal Position Changed", store=False)  # True if the fiscal position was changed
+    has_active_pricelist = fields.Boolean(
+        compute='_compute_has_active_pricelist')
     show_update_pricelist = fields.Boolean(
         string="Has Pricelist Changed", store=False)  # True if the pricelist was changed
 
-
     def init(self):
         create_index(self._cr, 'sale_order_date_order_id_idx', 'sale_order', ["date_order desc", "id desc"])
 
@@ -368,15 +372,22 @@ class SaleOrder(models.Model):
             order = order.with_company(order.company_id)
             order.payment_term_id = order.partner_id.property_payment_term_id
 
-    @api.depends('partner_id')
+    @api.depends('partner_id', 'company_id')
     def _compute_pricelist_id(self):
         for order in self:
+            if order.state != 'draft':
+                continue
             if not order.partner_id:
                 order.pricelist_id = False
                 continue
             order = order.with_company(order.company_id)
             order.pricelist_id = order.partner_id.property_product_pricelist
 
+    @api.depends('pricelist_id', 'company_id')
+    def _compute_currency_id(self):
+        for order in self:
+            order.currency_id = order.pricelist_id.currency_id or order.company_id.currency_id
+
     @api.depends('currency_id', 'date_order', 'company_id')
     def _compute_currency_rate(self):
         cache = {}
@@ -398,6 +409,14 @@ class SaleOrder(models.Model):
                     )
                 order.currency_rate = cache[key]
 
+    @api.depends('company_id')
+    def _compute_has_active_pricelist(self):
+        for order in self:
+            order.has_active_pricelist = bool(self.env['product.pricelist'].search(
+                [('company_id', 'in', (False, order.company_id.id)), ('active', '=', True)],
+                limit=1,
+            ))
+
     @api.depends('partner_id')
     def _compute_user_id(self):
         for order in self:
@@ -619,6 +638,19 @@ class SaleOrder(models.Model):
                 }
             }
 
+    @api.onchange('company_id')
+    def _onchange_company_id_warning(self):
+        self.show_update_pricelist = True
+        if self.order_line and self.state == 'draft':
+            return {
+                'warning': {
+                    'title': _("Warning for the change of your quotation's company"),
+                    'message': _("Changing the company of an existing quotation might need some "
+                                 "manual adjustments in the details of the lines. You might "
+                                 "consider updating the prices."),
+                }
+            }
+
     @api.onchange('fiscal_position_id')
     def _onchange_fpos_id_show_update_fpos(self):
         if self.order_line and (
@@ -655,8 +687,7 @@ class SaleOrder(models.Model):
 
     @api.onchange('pricelist_id')
     def _onchange_pricelist_id_show_update_prices(self):
-        if self.order_line and self.pricelist_id and self._origin.pricelist_id != self.pricelist_id:
-            self.show_update_pricelist = True
+        self.show_update_pricelist = bool(self.order_line)
 
     #=== CRUD METHODS ===#
 
@@ -936,10 +967,13 @@ class SaleOrder(models.Model):
         self._recompute_prices()
 
         if self.pricelist_id:
-            self.message_post(body=_(
+            message = _(
                 "Product prices have been recomputed according to pricelist %s.",
                 self.pricelist_id._get_html_link(),
-            ))
+            )
+        else:
+            message = _("Product prices have been recomputed.")
+        self.message_post(body=message)
 
     def _recompute_prices(self):
         lines_to_recompute = self.order_line.filtered(lambda line: not line.display_type)

--- a/addons/sale/models/sale_order_line.py
+++ b/addons/sale/models/sale_order_line.py
@@ -396,7 +396,7 @@ class SaleOrderLine(models.Model):
             else:
                 line.pricelist_item_id = line.order_id.pricelist_id._get_product_rule(
                     line.product_id,
-                    line.product_uom_qty or 1.0,
+                    quantity=line.product_uom_qty or 1.0,
                     uom=line.product_uom,
                     date=line.order_id.date_order,
                 )
@@ -408,7 +408,7 @@ class SaleOrderLine(models.Model):
             # manually edited
             if line.qty_invoiced > 0:
                 continue
-            if not line.product_uom or not line.product_id or not line.order_id.pricelist_id:
+            if not line.product_uom or not line.product_id:
                 line.price_unit = 0.0
             else:
                 price = line.with_company(line.company_id)._get_display_price()
@@ -459,11 +459,11 @@ class SaleOrderLine(models.Model):
         pricelist_rule = self.pricelist_item_id
         order_date = self.order_id.date_order or fields.Date.today()
         product = self.product_id.with_context(**self._get_product_price_context())
-        qty = self.product_uom_qty or 1.0
+        quantity = self.product_uom_qty or 1.0
         uom = self.product_uom or self.product_id.uom_id
 
         price = pricelist_rule._compute_price(
-            product, qty, uom, order_date, currency=self.currency_id)
+            product, quantity, uom, order_date, currency=self.currency_id)
 
         return price
 
@@ -502,7 +502,7 @@ class SaleOrderLine(models.Model):
         pricelist_rule = self.pricelist_item_id
         order_date = self.order_id.date_order or fields.Date.today()
         product = self.product_id.with_context(**self._get_product_price_context())
-        qty = self.product_uom_qty or 1.0
+        quantity = self.product_uom_qty or 1.0
         uom = self.product_uom
 
         if pricelist_rule:
@@ -512,14 +512,14 @@ class SaleOrderLine(models.Model):
                 # to show the discount to the customer.
                 while pricelist_item.base == 'pricelist' and pricelist_item.base_pricelist_id.discount_policy == 'without_discount':
                     rule_id = pricelist_item.base_pricelist_id._get_product_rule(
-                        product, qty, uom=uom, date=order_date)
+                        product, quantity, currency=self.currency_id, uom=uom, date=order_date)
                     pricelist_item = self.env['product.pricelist.item'].browse(rule_id)
 
             pricelist_rule = pricelist_item
 
         price = pricelist_rule._compute_base_price(
             product,
-            qty,
+            quantity,
             uom,
             order_date,
             target_currency=self.currency_id,
