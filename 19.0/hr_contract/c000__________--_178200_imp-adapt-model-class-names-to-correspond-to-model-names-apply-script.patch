PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:8 + add:0, change matches:
-    _inherit = 'hr.employee.public'
-    _inherit = "hr.employee"
-    _inherit = 'ir.ui.menu'
-    _inherit = "res.company"
-    _inherit = 'res.config.settings'
-    _inherit = 'resource.calendar'
-    _inherit = 'resource.calendar.leaves'
-    _inherit = 'resource.resource'

Total Changes: 33

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/hr_contract/models/hr_contract.py
+++ b/addons/hr_contract/models/hr_contract.py
@@ -15,8 +15,7 @@ import logging
 _logger = logging.getLogger(__name__)
 
 
-class Contract(models.Model):
-    _name = 'hr.contract'
+class HrContract(models.Model):
     _description = 'Contract'
     _inherit = ['mail.thread', 'mail.activity.mixin']
     _mail_post_access = 'read'
@@ -301,7 +300,7 @@ class Contract(models.Model):
 
     def write(self, vals):
         old_state = {c.id: c.state for c in self}
-        res = super(Contract, self).write(vals)
+        res = super().write(vals)
         new_state = {c.id: c.state for c in self}
         if vals.get('state') == 'open':
             self._assign_open_contract()
@@ -354,7 +353,7 @@ class Contract(models.Model):
             return self.env.ref('hr_contract.mt_contract_pending')
         elif 'state' in init_values and self.state == 'close':
             return self.env.ref('hr_contract.mt_contract_close')
-        return super(Contract, self)._track_subtype(init_values)
+        return super()._track_subtype(init_values)
 
     def _is_struct_from_country(self, country_code):
         self.ensure_one()

--- a/addons/hr_contract/models/hr_employee.py
+++ b/addons/hr_contract/models/hr_employee.py
@@ -12,8 +12,8 @@ from odoo.addons.resource.models.utils import Intervals
 from odoo.exceptions import UserError
 
 
-class EmployeePublic(models.Model):
-    _inherit = 'hr.employee.public'
+class HrEmployeePublic(models.Model):
+    _inherit = ['hr.employee.public']
 
     first_contract_date = fields.Date(compute='_compute_manager_only_fields', search='_search_first_contract_date')
 
@@ -25,16 +25,16 @@ class EmployeePublic(models.Model):
         return [('id', 'in', employees.ids)]
 
 
-class EmployeeBase(models.AbstractModel):
-    _inherit = "hr.employee.base"
+class HrEmployeeBase(models.AbstractModel):
+    _inherit = ["hr.employee.base"]
 
     @api.model
     def _get_new_hire_field(self):
         return 'first_contract_date'
 
 
-class Employee(models.Model):
-    _inherit = "hr.employee"
+class HrEmployee(models.Model):
+    _inherit = ["hr.employee"]
 
     legal_name = fields.Char(compute='_compute_legal_name', store=True, readonly=False, groups="hr.group_hr_user")
     vehicle = fields.Char(string='Company Vehicle', groups="hr.group_hr_user")

--- a/addons/hr_contract/models/hr_payroll_structure_type.py
+++ b/addons/hr_contract/models/hr_payroll_structure_type.py
@@ -5,7 +5,6 @@ from odoo import fields, models
 
 
 class HrPayrollStructureType(models.Model):
-    _name = 'hr.payroll.structure.type'
     _description = 'Salary Structure Type'
 
     name = fields.Char('Salary Structure Type')

--- a/addons/hr_contract/models/ir_ui_menu.py
+++ b/addons/hr_contract/models/ir_ui_menu.py
@@ -5,7 +5,7 @@ from odoo import models
 
 
 class IrUiMenu(models.Model):
-    _inherit = 'ir.ui.menu'
+    _inherit = ['ir.ui.menu']
 
     def _load_menus_blacklist(self):
         res = super()._load_menus_blacklist()

--- a/addons/hr_contract/models/res_company.py
+++ b/addons/hr_contract/models/res_company.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class ResCompany(models.Model):
-    _inherit = "res.company"
+    _inherit = ["res.company"]
 
     contract_expiration_notice_period = fields.Integer("Contract Expiry Notice Period", default=7)
     work_permit_expiration_notice_period = fields.Integer("Work Permit Expiry Notice Period", default=60)

--- a/addons/hr_contract/models/res_config_settings.py
+++ b/addons/hr_contract/models/res_config_settings.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = 'res.config.settings'
+    _inherit = ['res.config.settings']
 
     contract_expiration_notice_period = fields.Integer(string="Contract Expiry Notice Period", related='company_id.contract_expiration_notice_period', readonly=False)
     work_permit_expiration_notice_period = fields.Integer(string="Work Permit Expiry Notice Period", related='company_id.work_permit_expiration_notice_period', readonly=False)

--- a/addons/hr_contract/models/resource.py
+++ b/addons/hr_contract/models/resource.py
@@ -7,7 +7,7 @@ from odoo.osv.expression import AND
 
 
 class ResourceCalendar(models.Model):
-    _inherit = 'resource.calendar'
+    _inherit = ['resource.calendar']
 
     contracts_count = fields.Integer("# Contracts using it", compute='_compute_contracts_count', groups="hr_contract.group_hr_contract_manager")
 

--- a/addons/hr_contract/models/resource_calendar_leaves.py
+++ b/addons/hr_contract/models/resource_calendar_leaves.py
@@ -7,7 +7,7 @@ from odoo import models
 
 
 class ResourceCalendarLeaves(models.Model):
-    _inherit = 'resource.calendar.leaves'
+    _inherit = ['resource.calendar.leaves']
 
     def _compute_calendar_id(self):
         def date2datetime(date, tz):

--- a/addons/hr_contract/models/resource_resource.py
+++ b/addons/hr_contract/models/resource_resource.py
@@ -7,8 +7,9 @@ from pytz import timezone
 from odoo import models
 from odoo.addons.resource.models.utils import Intervals
 
+
 class ResourceResource(models.Model):
-    _inherit = 'resource.resource'
+    _inherit = ['resource.resource']
 
     def _get_calendars_validity_within_period(self, start, end, default_company=None):
         assert start.tzinfo and end.tzinfo
