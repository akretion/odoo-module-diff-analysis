PR: https://github.com/odoo/odoo/pull/

From: e15372c071a022f8cbd8a4ba6c020439490066e8
From: Fabien Pinckaers
Date: 2016-11-29 11:41:25

Structural Changes: 10
Total Changes: 37

[IMP] mass_mailing: better management of contacts lists

================================= pseudo patch: =================================

--- a/addons/mass_mailing/models/mass_mailing.py
+++ b/addons/mass_mailing/models/mass_mailing.py
@@ -37,11 +37,22 @@ class MassMailingList(models.Model):
     create_date = fields.Datetime(string='Creation Date')
     contact_nbr = fields.Integer(compute="_compute_contact_nbr", string='Number of Contacts')
 
+    # Compute number of contacts non opt-out for a mailing list
     def _compute_contact_nbr(self):
-        contacts_data = self.env['mail.mass_mailing.contact'].read_group([('list_id', 'in', self.ids), ('opt_out', '!=', True)], ['list_id'], ['list_id'])
-        mapped_data = dict([(c['list_id'][0], c['list_id_count']) for c in contacts_data])
+        self.env.cr.execute('''
+            select
+                list_id, count(*)
+            from
+                mail_mass_mailing_contact_list_rel r 
+                left join mail_mass_mailing_contact c on (r.contact_id=c.id)
+            where
+                c.opt_out <> true
+            group by
+                list_id
+        ''')
+        data = dict(self.env.cr.fetchall())
         for mailing_list in self:
-            mailing_list.contact_nbr = mapped_data.get(mailing_list.id, 0)
+            mailing_list.contact_nbr = data.get(mailing_list.id, 0)
 
 class MassMailingContact(models.Model):
     """Model of a contact. This model is different from the partner model
@@ -55,14 +66,18 @@ class MassMailingContact(models.Model):
     _rec_name = 'email'
 
     name = fields.Char()
+    company_name = fields.Char(string='Company Name')
+    title_id = fields.Many2one('res.partner.title', string='Title')
     email = fields.Char(required=True)
-    create_date = fields.Datetime(string='Create Date')
-    list_id = fields.Many2one(
-        'mail.mass_mailing.list', string='Mailing List',
-        ondelete='cascade', required=True, default=lambda self: self.env['mail.mass_mailing.list'].search([], limit=1, order='id desc'))
+    create_date = fields.Datetime(string='Creation Date')
+    list_ids = fields.Many2many(
+        'mail.mass_mailing.list', 'mail_mass_mailing_contact_list_rel',
+        'contact_id', 'list_id', string='Mailing Lists')
     opt_out = fields.Boolean(string='Opt Out', help='The contact has chosen not to receive mails anymore from this list')
     unsubscription_date = fields.Datetime(string='Unsubscription Date')
-    message_bounce = fields.Integer(string='Bounce', help='Counter of the number of bounced emails for this contact.')
+    message_bounce = fields.Integer(string='Bounced', help='Counter of the number of bounced emails for this contact.')
+    country_id = fields.Many2one('res.country', string='Country')
+    tag_ids = fields.Many2many('res.partner.category', string='Tags')
 
     @api.model
     def create(self, vals):
@@ -93,7 +108,7 @@ class MassMailingContact(models.Model):
     @api.model
     def add_to_list(self, name, list_id):
         name, email = self.get_name_email(name)
-        contact = self.create({'name': name, 'email': email, 'list_id': list_id})
+        contact = self.create({'name': name, 'email': email, 'list_ids': [(4, list_id)]})
         return contact.name_get()[0]
 
     @api.multi
@@ -432,9 +447,9 @@ class MassMailing(models.Model):
     def _onchange_model_and_list(self):
         if self.mailing_model == 'mail.mass_mailing.contact':
             if self.contact_list_ids:
-                self.mailing_domain = "[('list_id', 'in', %s), ('opt_out', '=', False)]" % self.contact_list_ids.ids
+                self.mailing_domain = "[('list_ids', 'in', [%s]), ('opt_out', '=', False)]" % (','.join(map(str,self.contact_list_ids.ids)),)
             else:
-                self.mailing_domain = "[('list_id', '=', False)]"
+                self.mailing_domain = "[(0, '=', 1)]"
         elif 'opt_out' in self.env[self.mailing_model]._fields:
             self.mailing_domain = "[('opt_out', '=', False)]"
         else:
