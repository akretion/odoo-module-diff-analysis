PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:10 + add:0, change matches:
-    _inherit = ['delivery.carrier']
-    _inherit = ['product.template']
-    _inherit = ['sale.order']
-    _inherit = ['sale.order.line']
-    _inherit = ["stock.route"]
-    _inherit = ['stock.move']
-    _inherit = ['stock.move.line']
-    _inherit = ['stock.package.type']
-    _inherit = ['stock.picking']
-    _inherit = ["stock.quant.package"]

Total Changes: 20

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/stock_delivery/models/delivery_carrier.py
+++ b/addons/stock_delivery/models/delivery_carrier.py
@@ -10,7 +10,7 @@ from .delivery_request_objects import DeliveryCommodity, DeliveryPackage
 
 
 class DeliveryCarrier(models.Model):
-    _inherit = ['delivery.carrier']
+    _inherit = 'delivery.carrier'
 
     # -------------------------------- #
     # Internals for shipping providers #

--- a/addons/stock_delivery/models/product_template.py
+++ b/addons/stock_delivery/models/product_template.py
@@ -4,7 +4,7 @@ from odoo import fields, models
 
 
 class ProductTemplate(models.Model):
-    _inherit = ['product.template']
+    _inherit = 'product.template'
 
     hs_code = fields.Char(
         string="HS Code",

--- a/addons/stock_delivery/models/sale_order.py
+++ b/addons/stock_delivery/models/sale_order.py
@@ -4,7 +4,7 @@ from odoo import _, models
 
 
 class SaleOrder(models.Model):
-    _inherit = ['sale.order']
+    _inherit = 'sale.order'
 
     def set_delivery_line(self, carrier, amount):
         res = super().set_delivery_line(carrier, amount)
@@ -46,7 +46,7 @@ class SaleOrder(models.Model):
 
 
 class SaleOrderLine(models.Model):
-    _inherit = ['sale.order.line']
+    _inherit = 'sale.order.line'
 
     def _prepare_procurement_values(self, group_id):
         values = super(SaleOrderLine, self)._prepare_procurement_values(group_id)

--- a/addons/stock_delivery/models/stock_move.py
+++ b/addons/stock_delivery/models/stock_move.py
@@ -5,13 +5,13 @@ from odoo.tools.sql import column_exists, create_column
 
 
 class StockRoute(models.Model):
-    _inherit = ["stock.route"]
+    _inherit = "stock.route"
 
     shipping_selectable = fields.Boolean("Applicable on Shipping Methods")
 
 
 class StockMove(models.Model):
-    _inherit = ['stock.move']
+    _inherit = 'stock.move'
 
     def _auto_init(self):
         if not column_exists(self.env.cr, "stock_move", "weight"):
@@ -49,7 +49,7 @@ class StockMove(models.Model):
 
 
 class StockMoveLine(models.Model):
-    _inherit = ['stock.move.line']
+    _inherit = 'stock.move.line'
 
     sale_price = fields.Float(compute='_compute_sale_price')
     destination_country_code = fields.Char(related='picking_id.destination_country_code')

--- a/addons/stock_delivery/models/stock_package_type.py
+++ b/addons/stock_delivery/models/stock_package_type.py
@@ -4,7 +4,7 @@ from odoo import api, fields, models
 
 
 class StockPackageType(models.Model):
-    _inherit = ['stock.package.type']
+    _inherit = 'stock.package.type'
 
     shipper_package_code = fields.Char('Carrier Code')
     package_carrier_type = fields.Selection([('none', 'No carrier integration')], string='Carrier', default='none')

--- a/addons/stock_delivery/models/stock_picking.py
+++ b/addons/stock_delivery/models/stock_picking.py
@@ -8,7 +8,7 @@ from odoo.exceptions import UserError
 
 
 class StockPicking(models.Model):
-    _inherit = ['stock.picking']
+    _inherit = 'stock.picking'
 
     def _get_default_weight_uom(self):
         return self.env['product.template']._get_weight_uom_name_from_ir_config_parameter()

--- a/addons/stock_delivery/models/stock_quant_package.py
+++ b/addons/stock_delivery/models/stock_quant_package.py
@@ -4,7 +4,7 @@ from odoo import api, fields, models
 
 
 class StockQuantPackage(models.Model):
-    _inherit = ["stock.quant.package"]
+    _inherit = "stock.quant.package"
 
     @api.depends('quant_ids', 'package_type_id')
     def _compute_weight(self):
