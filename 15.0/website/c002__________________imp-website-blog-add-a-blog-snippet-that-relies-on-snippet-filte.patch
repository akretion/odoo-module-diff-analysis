PR: https://github.com/odoo/odoo/pull/

From: 3c0d98bcd8adf9325ee3497eb8d25ec7f904d6a5
From: Benoit Socias
Date: 2021-03-29 14:27:58

Structural Changes: 2
Total Changes: 32

[IMP] website_blog: add a blog snippet that relies on snippet filters

Before this commit the latest posts snippet implemented the lookup for
its templates and its rendering procedure.

After this commit a new blog posts snippet is introduced which relies on
the dynamic snippet mechanisms.

task-2477207
https://github.com/odoo/odoo/pull/67334

================================= pseudo patch: =================================

--- a/addons/website/models/mixins.py
+++ b/addons/website/models/mixins.py
@@ -1,14 +1,13 @@
 # -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
-import json
 import logging
 
-
 from odoo import api, fields, models, _
 from odoo.http import request
 from odoo.osv import expression
 from odoo.exceptions import AccessError
+from odoo.tools.json import scriptsafe as json_safe
 
 logger = logging.getLogger(__name__)
 
@@ -102,7 +101,7 @@ class WebsiteCoverPropertiesMixin(models.AbstractModel):
     _name = 'website.cover_properties.mixin'
     _description = 'Cover Properties Website Mixin'
 
-    cover_properties = fields.Text('Cover Properties', default=lambda s: json.dumps(s._default_cover_properties()))
+    cover_properties = fields.Text('Cover Properties', default=lambda s: json_safe.dumps(s._default_cover_properties()))
 
     def _default_cover_properties(self):
         return {
@@ -112,6 +111,21 @@ class WebsiteCoverPropertiesMixin(models.AbstractModel):
             "resize_class": "o_half_screen_height",
         }
 
+    def _get_background(self, height=None, width=None):
+        self.ensure_one()
+        properties = json_safe.loads(self.cover_properties)
+        img = properties.get('background-image', "none")
+
+        if img.startswith('url(/web/image/'):
+            suffix = ""
+            if height is not None:
+                suffix += "&height=%s" % height
+            if width is not None:
+                suffix += "&width=%s" % width
+            if suffix:
+                suffix = '?' not in img and "?%s" % suffix or suffix
+                img = img[:-1] + suffix + ')'
+        return img
 
 class WebsiteMultiMixin(models.AbstractModel):
 

--- a/addons/website/models/website_snippet_filter.py
+++ b/addons/website/models/website_snippet_filter.py
@@ -65,6 +65,9 @@ class WebsiteSnippetFilter(models.Model):
         if self.website_id and self.env['website'].get_current_website() != self.website_id:
             return ''
 
+        if self.model_name.replace('.', '_') not in template_key:
+            return ''
+
         records = self._prepare_values(limit, search_domain)
         is_sample = with_sample and not records
         if is_sample:
@@ -173,10 +176,11 @@ class WebsiteSnippetFilter(models.Model):
         sample = []
         model = self.env[self.model_name]
         sample_data = self._get_hardcoded_sample(model)
-        for index in range(0, length):
-            single_sample_data = sample_data[index % len(sample_data)].copy()
-            self._fill_sample(single_sample_data, index)
-            sample.append(model.new(single_sample_data))
+        if sample_data:
+            for index in range(0, length):
+                single_sample_data = sample_data[index % len(sample_data)].copy()
+                self._fill_sample(single_sample_data, index)
+                sample.append(model.new(single_sample_data))
         return sample
 
     def _fill_sample(self, sample, index):
