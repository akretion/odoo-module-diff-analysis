PR: https://github.com/odoo/odoo/pull/83274

From: a1904aa6f62acbd3d8e7d4cc873692e20edb37fd
From: Raphael Collet
Date: 2022-01-28 14:10:01

Structural Changes: 8
Total Changes: 22

[IMP] core: field index names

The possible index names have been renamed "btree", "btree_not_null"
(instead of "not null") and "trigram" (instead of "gin").

Task 2742526

Part-of: odoo/odoo#83274

================================= pseudo patch: =================================

--- a/addons/account/models/account_account.py
+++ b/addons/account/models/account_account.py
@@ -55,7 +55,7 @@ class AccountAccount(models.Model):
                                                            ('user_type_id', '=', data_unaffected_earnings.id)])
                 raise ValidationError(_('You cannot have more than one account with "Current Year Earnings" as type. (accounts: %s)', [a.code for a in account_unaffected_earnings]))
 
-    name = fields.Char(string="Account Name", required=True, index='gin', tracking=True)
+    name = fields.Char(string="Account Name", required=True, index='trigram', tracking=True)
     currency_id = fields.Many2one('res.currency', string='Account Currency',
         help="Forces all moves for this account to have this account currency.", tracking=True)
     code = fields.Char(size=64, required=True, index=True, tracking=True)

--- a/addons/account/models/account_move.py
+++ b/addons/account/models/account_move.py
@@ -220,10 +220,10 @@ class AccountMove(models.Model):
     partner_bank_id = fields.Many2one('res.partner.bank', string='Recipient Bank',
         help='Bank Account Number to which the invoice will be paid. A Company bank account if this is a Customer Invoice or Vendor Credit Note, otherwise a Partner bank account number.',
         check_company=True)
-    payment_reference = fields.Char(string='Payment Reference', index='gin', copy=False,
+    payment_reference = fields.Char(string='Payment Reference', index='trigram', copy=False,
         help="The payment reference to set on journal items.")
     payment_id = fields.Many2one(
-        index='not null',
+        index='btree_not_null',
         comodel_name='account.payment',
         string="Payment", copy=False, check_company=True)
     statement_line_id = fields.Many2one(
@@ -3478,9 +3478,9 @@ class AccountMoveLine(models.Model):
         index=True, required=True, readonly=True, auto_join=True, ondelete="cascade",
         check_company=True,
         help="The move of this entry line.")
-    move_name = fields.Char(string='Number', related='move_id.name', store=True, index='gin')
+    move_name = fields.Char(string='Number', related='move_id.name', store=True, index='trigram')
     date = fields.Date(related='move_id.date', store=True, readonly=True, index=True, copy=False, group_operator='min')
-    ref = fields.Char(related='move_id.ref', store=True, copy=False, index='gin', readonly=True)
+    ref = fields.Char(related='move_id.ref', store=True, copy=False, index='trigram', readonly=True)
     parent_state = fields.Selection(related='move_id.state', store=True, readonly=True)
     journal_id = fields.Many2one(related='move_id.journal_id', store=True, index=True, copy=False)
     company_id = fields.Many2one(related='move_id.company_id', store=True, readonly=True)
@@ -3532,15 +3532,15 @@ class AccountMoveLine(models.Model):
 
     # ==== Origin fields ====
     reconcile_model_id = fields.Many2one('account.reconcile.model', string="Reconciliation Model", copy=False, readonly=True, check_company=True)
-    payment_id = fields.Many2one('account.payment', index="not null", store=True,
+    payment_id = fields.Many2one('account.payment', index='btree_not_null', store=True,
         string="Originator Payment",
         related='move_id.payment_id',
         help="The payment that created this entry")
-    statement_line_id = fields.Many2one('account.bank.statement.line', index="not null", store=True,
+    statement_line_id = fields.Many2one('account.bank.statement.line', index='btree_not_null', store=True,
         string="Originator Statement Line",
         related='move_id.statement_line_id',
         help="The statement line that created this entry")
-    statement_id = fields.Many2one(related='statement_line_id.statement_id', store=True, index="not null", copy=False,
+    statement_id = fields.Many2one(related='statement_line_id.statement_id', store=True, index='btree_not_null', copy=False,
         help="The bank statement used for bank reconciliation")
 
     # ==== Tax fields ====
@@ -3553,7 +3553,7 @@ class AccountMoveLine(models.Model):
     group_tax_id = fields.Many2one(
         comodel_name='account.tax',
         string="Originator Group of Taxes",
-        index="not null",
+        index='btree_not_null',
         help="The group of taxes that generated this tax line",
     )
     tax_line_id = fields.Many2one('account.tax', string='Originator Tax', ondelete='restrict', store=True,
@@ -3583,7 +3583,7 @@ class AccountMoveLine(models.Model):
     amount_residual_currency = fields.Monetary(string='Residual Amount in Currency', store=True,
         compute='_compute_amount_residual',
         help="The residual amount on a journal item expressed in its currency (possibly not the company currency).")
-    full_reconcile_id = fields.Many2one('account.full.reconcile', string="Matching", copy=False, index="not null", readonly=True)
+    full_reconcile_id = fields.Many2one('account.full.reconcile', string="Matching", copy=False, index='btree_not_null', readonly=True)
     matched_debit_ids = fields.One2many('account.partial.reconcile', 'credit_move_id', string='Matched Debits',
         help='Debit journal items that are matched with this journal item.', readonly=True)
     matched_credit_ids = fields.One2many('account.partial.reconcile', 'debit_move_id', string='Matched Credits',
@@ -3593,7 +3593,7 @@ class AccountMoveLine(models.Model):
     # ==== Analytic fields ====
     analytic_line_ids = fields.One2many('account.analytic.line', 'move_id', string='Analytic lines')
     analytic_account_id = fields.Many2one('account.analytic.account', string='Analytic Account',
-        index="not null", compute="_compute_analytic_account_id", store=True, readonly=False, check_company=True, copy=True)
+        index='btree_not_null', compute="_compute_analytic_account_id", store=True, readonly=False, check_company=True, copy=True)
     analytic_tag_ids = fields.Many2many('account.analytic.tag', string='Analytic Tags',
         compute="_compute_analytic_tag_ids", store=True, readonly=False, check_company=True, copy=True)
 
