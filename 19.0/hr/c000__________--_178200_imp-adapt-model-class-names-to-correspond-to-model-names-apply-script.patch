PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:8 + add:0, change matches:
-    _inherit = 'discuss.channel'
-    _inherit = 'ir.ui.menu'
-    _inherit = 'mail.activity.plan'
-    _inherit = 'mail.activity.plan.template'
-    _inherit = 'mail.alias'
-    _inherit = 'res.company'
-    _inherit = 'res.config.settings'
-    _inherit = "resource.resource"

Total Changes: 79

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/hr/models/discuss_channel.py
+++ b/addons/hr/models/discuss_channel.py
@@ -5,8 +5,8 @@ from odoo import _, api, fields, models
 from odoo.exceptions import ValidationError
 
 
-class Channel(models.Model):
-    _inherit = 'discuss.channel'
+class DiscussChannel(models.Model):
+    _inherit = ['discuss.channel']
 
     subscription_department_ids = fields.Many2many(
         'hr.department', string='HR Departments',
@@ -20,7 +20,7 @@ class Channel(models.Model):
 
     def _subscribe_users_automatically_get_members(self):
         """ Auto-subscribe members of a department to a channel """
-        new_members = super(Channel, self)._subscribe_users_automatically_get_members()
+        new_members = super()._subscribe_users_automatically_get_members()
         for channel in self:
             new_members[channel.id] = list(
                 set(new_members[channel.id]) |
@@ -29,7 +29,7 @@ class Channel(models.Model):
         return new_members
 
     def write(self, vals):
-        res = super(Channel, self).write(vals)
+        res = super().write(vals)
         if vals.get('subscription_department_ids'):
             self._subscribe_users_automatically()
         return res

--- a/addons/hr/models/hr_contract_type.py
+++ b/addons/hr/models/hr_contract_type.py
@@ -4,8 +4,7 @@
 from odoo import api, fields, models
 
 
-class ContractType(models.Model):
-    _name = 'hr.contract.type'
+class HrContractType(models.Model):
     _description = 'Contract Type'
     _order = 'sequence'
 

--- a/addons/hr/models/hr_department.py
+++ b/addons/hr/models/hr_department.py
@@ -5,8 +5,7 @@ from odoo import api, fields, models, _
 from odoo.exceptions import ValidationError
 
 
-class Department(models.Model):
-    _name = "hr.department"
+class HrDepartment(models.Model):
     _description = "Department"
     _inherit = ['mail.thread', 'mail.activity.mixin']
     _order = "name"
@@ -91,7 +90,7 @@ class Department(models.Model):
         # TDE note: auto-subscription of manager done by hand, because currently
         # the tracking allows to track+subscribe fields linked to a res.user record
         # An update of the limited behavior should come, but not currently done.
-        departments = super(Department, self.with_context(mail_create_nosubscribe=True)).create(vals_list)
+        departments = super(HrDepartment, self.with_context(mail_create_nosubscribe=True)).create(vals_list)
         for department, vals in zip(departments, vals_list):
             manager = self.env['hr.employee'].browse(vals.get("manager_id"))
             if manager.user_id:
@@ -119,7 +118,7 @@ class Department(models.Model):
             self.message_unsubscribe(partner_ids=list(manager_to_unsubscribe))
             # set the employees's parent to the new manager
             self._update_employee_manager(manager_id)
-        return super(Department, self).write(vals)
+        return super().write(vals)
 
     def _update_employee_manager(self, manager_id):
         employees = self.env['hr.employee']

--- a/addons/hr/models/hr_departure_reason.py
+++ b/addons/hr/models/hr_departure_reason.py
@@ -5,8 +5,7 @@ from odoo import api, fields, models, _
 from odoo.exceptions import UserError
 
 
-class DepartureReason(models.Model):
-    _name = "hr.departure.reason"
+class HrDepartureReason(models.Model):
     _description = "Departure Reason"
     _order = "sequence"
 

--- a/addons/hr/models/hr_employee.py
+++ b/addons/hr/models/hr_employee.py
@@ -15,7 +15,7 @@ from odoo.osv import expression
 from odoo.tools import convert, format_date
 
 
-class HrEmployeePrivate(models.Model):
+class HrEmployee(models.Model):
     """
     NB: Any field only available on the model hr.employee (i.e. not on the
     hr.employee.public model) should have `groups="hr.group_hr_user"` on its
@@ -23,7 +23,6 @@ class HrEmployeePrivate(models.Model):
     hr.employee model. Indeed, the prefetch loads the data for all the fields
     that are available according to the group defined on them.
     """
-    _name = "hr.employee"
     _description = "Employee"
     _order = 'name'
     _inherit = ['hr.employee.base', 'mail.thread.main.attachment', 'mail.activity.mixin', 'resource.mixin', 'avatar.mixin']
@@ -226,7 +225,7 @@ class HrEmployeePrivate(models.Model):
             if not avatar and employee.user_id:
                 avatar = employee.user_id.sudo()[avatar_field]
             employee[avatar_field] = avatar
-        super(HrEmployeePrivate, employee_wo_user_and_image)._compute_avatar(avatar_field, image_field)
+        super(HrEmployee, employee_wo_user_and_image)._compute_avatar(avatar_field, image_field)
 
     @api.depends('name', 'permit_no')
     def _compute_work_permit_name(self):
@@ -393,7 +392,7 @@ class HrEmployeePrivate(models.Model):
         except ValueError:
             raise AccessError(_('You do not have access to this document.'))
         # the result is expected from this table, so we should link tables
-        return super(HrEmployeePrivate, self.sudo())._search([('id', 'in', ids)], order=order)
+        return super(HrEmployee, self.sudo())._search([('id', 'in', ids)], order=order)
 
     def get_formview_id(self, access_uid=None):
         """ Override this method in order to redirect many2one towards the right model depending on access_uid """
@@ -403,13 +402,13 @@ class HrEmployeePrivate(models.Model):
             self_sudo = self
 
         if self_sudo.browse().has_access('read'):
-            return super(HrEmployeePrivate, self).get_formview_id(access_uid=access_uid)
+            return super().get_formview_id(access_uid=access_uid)
         # Hardcode the form view for public employee
         return self.env.ref('hr.hr_employee_public_view_form').id
 
     def get_formview_action(self, access_uid=None):
         """ Override this method in order to redirect many2one towards the right model depending on access_uid """
-        res = super(HrEmployeePrivate, self).get_formview_action(access_uid=access_uid)
+        res = super().get_formview_action(access_uid=access_uid)
         if access_uid:
             self_sudo = self.with_user(access_uid)
         else:
@@ -525,7 +524,7 @@ class HrEmployeePrivate(models.Model):
                                         (bool(all(emp.image_1920 for emp in self)))))
         if 'work_permit_expiration_date' in vals:
             vals['work_permit_scheduled_activity'] = False
-        res = super(HrEmployeePrivate, self).write(vals)
+        res = super().write(vals)
         if vals.get('department_id') or vals.get('user_id'):
             department_id = vals['department_id'] if vals.get('department_id') else self[:1].department_id.id
             # When added to a department or changing user, subscribe to the channels auto-subscribed by department
@@ -540,7 +539,7 @@ class HrEmployeePrivate(models.Model):
 
     def unlink(self):
         resources = self.mapped('resource_id')
-        super(HrEmployeePrivate, self).unlink()
+        super().unlink()
         return resources.unlink()
 
     def _get_employee_m2o_to_empty_on_archived_employees(self):
@@ -550,7 +549,7 @@ class HrEmployeePrivate(models.Model):
         return []
 
     def toggle_active(self):
-        res = super(HrEmployeePrivate, self).toggle_active()
+        res = super().toggle_active()
         unarchived_employees = self.filtered(lambda employee: employee.active)
         unarchived_employees.write({
             'departure_reason_id': False,

--- a/addons/hr/models/hr_employee_base.py
+++ b/addons/hr/models/hr_employee_base.py
@@ -9,7 +9,6 @@ from odoo.tools import format_time
 
 
 class HrEmployeeBase(models.AbstractModel):
-    _name = "hr.employee.base"
     _description = "Basic Employee"
     _order = 'name'
 

--- a/addons/hr/models/hr_employee_category.py
+++ b/addons/hr/models/hr_employee_category.py
@@ -6,9 +6,8 @@ from random import randint
 from odoo import fields, models
 
 
-class EmployeeCategory(models.Model):
+class HrEmployeeCategory(models.Model):
 
-    _name = "hr.employee.category"
     _description = "Employee Category"
 
     def _get_default_color(self):

--- a/addons/hr/models/hr_employee_public.py
+++ b/addons/hr/models/hr_employee_public.py
@@ -5,7 +5,6 @@ from odoo import api, fields, models, tools
 
 
 class HrEmployeePublic(models.Model):
-    _name = "hr.employee.public"
     _inherit = ["hr.employee.base"]
     _description = 'Public Employee'
     _order = 'name'

--- a/addons/hr/models/hr_job.py
+++ b/addons/hr/models/hr_job.py
@@ -5,8 +5,7 @@ from odoo import api, fields, models, _
 from odoo.addons.web_editor.tools import handle_history_divergence
 
 
-class Job(models.Model):
-    _name = "hr.job"
+class HrJob(models.Model):
     _description = "Job Position"
     _inherit = ['mail.thread']
     _order = 'sequence'
@@ -43,7 +42,7 @@ class Job(models.Model):
     @api.model_create_multi
     def create(self, vals_list):
         """ We don't want the current user to be follower of all created job """
-        return super(Job, self.with_context(mail_create_nosubscribe=True)).create(vals_list)
+        return super(HrJob, self.with_context(mail_create_nosubscribe=True)).create(vals_list)
 
     def copy_data(self, default=None):
         vals_list = super().copy_data(default=default)
@@ -52,4 +51,4 @@ class Job(models.Model):
     def write(self, vals):
         if len(self) == 1:
             handle_history_divergence(self, 'description', vals)
-        return super(Job, self).write(vals)
+        return super().write(vals)

--- a/addons/hr/models/hr_work_location.py
+++ b/addons/hr/models/hr_work_location.py
@@ -4,8 +4,7 @@
 from odoo import fields, models
 
 
-class WorkLocation(models.Model):
-    _name = "hr.work.location"
+class HrWorkLocation(models.Model):
     _description = "Work Location"
     _order = 'name'
 

--- a/addons/hr/models/ir_ui_menu.py
+++ b/addons/hr/models/ir_ui_menu.py
@@ -5,7 +5,7 @@ from odoo import models, api, tools
 
 
 class IrUiMenu(models.Model):
-    _inherit = 'ir.ui.menu'
+    _inherit = ['ir.ui.menu']
 
     def _load_menus_blacklist(self):
         res = super()._load_menus_blacklist()

--- a/addons/hr/models/mail_activity_plan.py
+++ b/addons/hr/models/mail_activity_plan.py
@@ -6,7 +6,7 @@ from odoo.exceptions import UserError
 
 
 class MailActivityPlan(models.Model):
-    _inherit = 'mail.activity.plan'
+    _inherit = ['mail.activity.plan']
 
     department_id = fields.Many2one(
         'hr.department', check_company=True,

--- a/addons/hr/models/mail_activity_plan_template.py
+++ b/addons/hr/models/mail_activity_plan_template.py
@@ -5,8 +5,8 @@ from odoo import api, fields, models, _
 from odoo.exceptions import ValidationError
 
 
-class MailActivityPLanTemplate(models.Model):
-    _inherit = 'mail.activity.plan.template'
+class MailActivityPlanTemplate(models.Model):
+    _inherit = ['mail.activity.plan.template']
 
     responsible_type = fields.Selection(selection_add=[
         ('coach', 'Coach'),

--- a/addons/hr/models/mail_alias.py
+++ b/addons/hr/models/mail_alias.py
@@ -4,8 +4,8 @@
 from odoo import fields, models, _
 
 
-class Alias(models.Model):
-    _inherit = 'mail.alias'
+class MailAlias(models.Model):
+    _inherit = ['mail.alias']
 
     alias_contact = fields.Selection(selection_add=[
         ('employees', 'Authenticated Employees'),
@@ -14,4 +14,4 @@ class Alias(models.Model):
     def _get_alias_contact_description(self):
         if self.alias_contact == 'employees':
             return _('addresses linked to registered employees')
-        return super(Alias, self)._get_alias_contact_description()
+        return super()._get_alias_contact_description()

--- a/addons/hr/models/models.py
+++ b/addons/hr/models/models.py
@@ -6,7 +6,9 @@ from odoo.addons.mail.tools.alias_error import AliasError
 
 
 class BaseModel(models.AbstractModel):
-    _inherit = 'base'
+    _name = "base"
+
+    _inherit = ['base']
 
     def _alias_get_error(self, message, message_dict, alias):
         if alias.alias_contact == 'employees':

--- a/addons/hr/models/res_company.py
+++ b/addons/hr/models/res_company.py
@@ -3,8 +3,8 @@
 from odoo import fields, models
 
 
-class Company(models.Model):
-    _inherit = 'res.company'
+class ResCompany(models.Model):
+    _inherit = ['res.company']
 
     hr_presence_control_email_amount = fields.Integer(string="# emails to send")
     hr_presence_control_ip_list = fields.Char(string="Valid IP addresses")

--- a/addons/hr/models/res_config_settings.py
+++ b/addons/hr/models/res_config_settings.py
@@ -4,7 +4,7 @@ from odoo import api, fields, models
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = 'res.config.settings'
+    _inherit = ['res.config.settings']
 
     resource_calendar_id = fields.Many2one(
         'resource.calendar', 'Company Working Hours',

--- a/addons/hr/models/resource.py
+++ b/addons/hr/models/resource.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class ResourceResource(models.Model):
-    _inherit = "resource.resource"
+    _inherit = ["resource.resource"]
 
     user_id = fields.Many2one(copy=False)
     employee_id = fields.One2many('hr.employee', 'resource_id', check_company=True, context={'active_test': False})
