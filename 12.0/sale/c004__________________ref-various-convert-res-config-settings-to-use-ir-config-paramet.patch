PR: https://github.com/odoo/odoo/pull/

From: a18bd499acf518f070318aeabd81f8eb94faad01
From: Richard Mathot
Date: 2018-01-16 12:34:29

Structural Changes: 2
Total Changes: 40

[REF] various: convert res.config.settings to use ir.config_parameter integration

This commit updates the various res config of Odoo addons to use the
newly-introduced config_parameter field attribute.

================================= pseudo patch: =================================

--- a/addons/sale/models/res_config_settings.py
+++ b/addons/sale/models/res_config_settings.py
@@ -12,7 +12,8 @@ class ResConfigSettings(models.TransientModel):
     sale_note = fields.Text(related='company_id.sale_note', string="Terms & Conditions")
     use_sale_note = fields.Boolean(
         string='Default Terms & Conditions',
-        oldname='default_use_sale_note')
+        oldname='default_use_sale_note',
+        config_parameter='sale.use_sale_note')
     group_discount_per_so_line = fields.Boolean("Discounts", implied_group='sale.group_discount_per_so_line')
     module_sale_margin = fields.Boolean("Margins")
     group_sale_layout = fields.Boolean("Sections on Sales Orders", implied_group='sale.group_sale_layout')
@@ -20,7 +21,8 @@ class ResConfigSettings(models.TransientModel):
     portal_confirmation = fields.Boolean('Online Signature & Payment')
     portal_confirmation_options = fields.Selection([
         ('sign', 'Signature'),
-        ('pay', 'Payment')], string="Online Signature & Payment options")
+        ('pay', 'Payment')], string="Online Signature & Payment options",
+        config_parameter='sale.sale_portal_confirmation_options')
     module_sale_payment = fields.Boolean("Sale Payment", help='Technical field implied by user choice of online_confirmation')
     module_website_quote = fields.Boolean("Quotations Templates")
     group_sale_delivery_address = fields.Boolean("Customer Addresses", implied_group='sale.group_delivery_invoice_address')
@@ -33,7 +35,7 @@ class ResConfigSettings(models.TransientModel):
         ('fixed', 'A single sales price per product'),
         ('percentage', 'Multiple prices per product (e.g. customer segments, currencies)'),
         ('formula', 'Price computed from formulas (discounts, margins, roundings)')
-        ], string="Pricelists")
+        ], string="Pricelists", config_parameter='sale.sale_pricelist_setting')
     group_show_price_subtotal = fields.Boolean(
         "Show subtotal",
         implied_group='sale.group_show_price_subtotal',
@@ -47,7 +49,8 @@ class ResConfigSettings(models.TransientModel):
     sale_show_tax = fields.Selection([
         ('subtotal', 'Tax-Excluded Prices'),
         ('total', 'Tax-Included Prices')], string="Tax Display",
-        default='subtotal', required=True)
+        required=True, default='subtotal',
+        config_parameter='sale.sale_show_tax')
     default_invoice_policy = fields.Selection([
         ('order', 'Invoice what is ordered'),
         ('delivery', 'Invoice what is delivered')
@@ -58,15 +61,16 @@ class ResConfigSettings(models.TransientModel):
         'product.product',
         'Deposit Product',
         domain="[('type', '=', 'service')]",
+        config_parameter='sale.default_deposit_product_id',
         oldname='deposit_product_id_setting',
         help='Default product used for payment advances')
-    auto_done_setting = fields.Boolean("Lock Confirmed Sales")
+    auto_done_setting = fields.Boolean("Lock Confirmed Sales", config_parameter='sale.auto_done_setting')
     module_website_sale_digital = fields.Boolean("Sell digital products - provide downloadable content on your customer portal")
 
     auth_signup_uninvited = fields.Selection([
         ('b2b', 'On invitation (B2B)'),
         ('b2c', 'Free sign up (B2C)'),
-    ], string='Customer Account')
+    ], string='Customer Account', default='b2b', config_parameter='auth_signup.invitation_scope')
 
     module_delivery = fields.Boolean("Shipping Costs")
     module_delivery_dhl = fields.Boolean("DHL Connector")
@@ -137,32 +141,10 @@ class ResConfigSettings(models.TransientModel):
         res = super(ResConfigSettings, self).get_values()
         ICPSudo = self.env['ir.config_parameter'].sudo()
         sale_pricelist_setting = ICPSudo.get_param('sale.sale_pricelist_setting')
-        sale_portal_confirmation_options = ICPSudo.get_param('sale.sale_portal_confirmation_options', default='none')
-        default_deposit_product_id = literal_eval(ICPSudo.get_param('sale.default_deposit_product_id', default='False'))
-        if default_deposit_product_id and not self.env['product.product'].browse(default_deposit_product_id).exists():
-            default_deposit_product_id = False
         res.update(
-            auth_signup_uninvited='b2c' if ICPSudo.get_param('auth_signup.allow_uninvited', 'False').lower() == 'true' else 'b2b',
-            use_sale_note=ICPSudo.get_param('sale.use_sale_note', default=False),
-            auto_done_setting=ICPSudo.get_param('sale.auto_done_setting'),
-            default_deposit_product_id=default_deposit_product_id,
-            sale_show_tax=ICPSudo.get_param('sale.sale_show_tax', default='subtotal'),
             multi_sales_price=sale_pricelist_setting in ['percentage', 'formula'],
             multi_sales_price_method=sale_pricelist_setting in ['percentage', 'formula'] and sale_pricelist_setting or False,
             sale_pricelist_setting=sale_pricelist_setting,
-            portal_confirmation=sale_portal_confirmation_options in ('pay', 'sign'),
-            portal_confirmation_options=sale_portal_confirmation_options if sale_portal_confirmation_options in ('pay', 'sign') else False,
+            portal_confirmation=ICPSudo.get_param('sale.sale_portal_confirmation_options', default=False) in ('pay', 'sign'),
         )
         return res
-
-    @api.multi
-    def set_values(self):
-        super(ResConfigSettings, self).set_values()
-        ICPSudo = self.env['ir.config_parameter'].sudo()
-        ICPSudo.set_param('auth_signup.allow_uninvited', repr(self.auth_signup_uninvited == 'b2c'))
-        ICPSudo.set_param("sale.use_sale_note", self.use_sale_note)
-        ICPSudo.set_param("sale.auto_done_setting", self.auto_done_setting)
-        ICPSudo.set_param("sale.default_deposit_product_id", self.default_deposit_product_id.id)
-        ICPSudo.set_param('sale.sale_pricelist_setting', self.sale_pricelist_setting)
-        ICPSudo.set_param('sale.sale_show_tax', self.sale_show_tax)
-        ICPSudo.set_param('sale.sale_portal_confirmation_options', self.portal_confirmation_options if self.portal_confirmation_options in ('pay', 'sign') else 'none')
