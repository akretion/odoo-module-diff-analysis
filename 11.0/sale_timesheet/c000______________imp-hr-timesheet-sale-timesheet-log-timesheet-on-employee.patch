PR: https://github.com/odoo/odoo/pull/

From: 5f997fc2ef8e3111ec6b0622dee8286e6de3b21d
From: JÃ©rome Maes
Date: 2017-04-27 08:34:51

Breaking data model changes score: 2, change matches:
-    timesheet_cost = fields.Float('Timesheet Cost', default=0.0)
-    account_id = fields.Many2one('account.account', string='Account')

Total Changes: 32

[IMP] hr_timesheet, sale_timesheet: log timesheet on employee

This commits mainly switches the semantic of timesheeting from users
to employees. Main points of this commit are :

 * add an employee_id field on timesheet;
 * replace user_id field by employee_id on timesheet views;
 * provide a stat button on employee form view to access its timesheets;
 * use timesheet cost as a real monetary field and handle currency
   conversion;

The purpose is to allow timesheet manager to record timesheet for
employees that are not users. All employees do not necessarily have an
user account in the system. Now you can record timesheet for your employee.
Hooray !

In sale_timesheet timesheet_cost is now a monetary field. Currency convertion
is also better taken into account when computing UPDATE ME

Timesheet details

 * add an invisible timesheet group on employee form view allowing to
   hook on it. Indeed sale_timesheet and timesheet_grid modules override
   this view to add information but have no other common module that
   hr_timesheet. Using an invisible group set as visible in those modules
   eases inheritance.

Sale timesheet details

 * timesheet_cost is now a monetary field
 * better display of timesheet_cost on employee form view, notably telling
   it is per hour
 * remove account_id field on employee as its only use was buggy and was
   mixing account.account and analytic.account records.

================================= pseudo patch: =================================

--- a/addons/sale_timesheet/models/account.py
+++ b/addons/sale_timesheet/models/account.py
@@ -37,16 +37,28 @@ class AccountAnalyticLine(models.Model):
             if values.get('amount'):
                 return {}
             unit_amount = values.get('unit_amount', 0.0) or self.unit_amount
-            user_id = values.get('user_id') or self.user_id.id or self._default_user()
-            user = self.env['res.users'].browse([user_id])
-            emp = self.env['hr.employee'].search([('user_id', '=', user_id)], limit=1)
-            cost = emp and emp.timesheet_cost or 0.0
-            uom = (emp or user).company_id.project_time_mode_id
-            # Nominal employee cost = 1 * company project UoM (project_time_mode_id)
+
+            # find the employee
+            employee_id = values.get('employee_id') or self.employee_id.id or self._default_employee_id().id
+            employee = self.env['hr.employee'].browse(employee_id) if employee_id else self.env['hr.employee']
+            if not employee:
+                user_id = values.get('user_id') or self.user_id.id or self._default_user()
+                employee = self.env['hr.employee'].search([('user_id', '=', user_id)], limit=1)
+
+            # find the analytic account
+            account_id = values.get('account_id') or self.account_id.id
+            analytic_account = self.env['account.analytic.account'].browse(account_id) if account_id else self.env['account.analytic.account']
+
+            # convert employee cost into timesheet (analytic account) currency
+            uom = employee.company_id.project_time_mode_id
+            cost = employee.timesheet_cost or 0.0
+            amount = -unit_amount * cost
+            amount_converted = employee.currency_id.compute(amount, analytic_account.currency_id)
+
             return {
-                'amount': -unit_amount * cost,
+                'amount': amount_converted,
                 'product_uom_id': uom.id,
-                'account_id': values.get('account_id') or self.account_id.id or emp.account_id.id,
+                'account_id': account_id,
             }
         return {}
 

--- a/addons/sale_timesheet/models/hr.py
+++ b/addons/sale_timesheet/models/hr.py
@@ -8,5 +8,5 @@ class HrEmployee(models.Model):
     _inherit = 'hr.employee'
 
     # FIXME: this field should be in module hr_timesheet, not sale_timesheet
-    timesheet_cost = fields.Float('Timesheet Cost', default=0.0)
-    account_id = fields.Many2one('account.account', string='Account')
+    timesheet_cost = fields.Monetary('Timesheet Cost', currency_field='currency_id', default=0.0)
+    currency_id = fields.Many2one('res.currency', related='company_id.currency_id', readonly=True)
