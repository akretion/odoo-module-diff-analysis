PR: https://github.com/odoo/odoo/pull/

From: c1f7987f493ca655390eb40756f744342f4a31e8
From: Kirti Choudhary
Date: 2018-08-08 12:51:11

Structural Changes: 5
Total Changes: 32

[IMP] various: improve product form usability

================================= pseudo patch: =================================

--- a/addons/sale/models/product_template.py
+++ b/addons/sale/models/product_template.py
@@ -18,7 +18,28 @@ class ProductTemplate(models.Model):
     expense_policy = fields.Selection(
         [('no', 'No'), ('cost', 'At cost'), ('sales_price', 'Sales price')],
         string='Re-Invoice Policy',
-        default='no')
+        default='no',
+        help="Expenses registered in Expense app or in a vendor bill (with an analytic account set) "
+        "can be automatically re-invoiced to the customer. This is useful for customer projects. "
+        "With this option activated, the validated expense is added to the sales order linked to the "
+        "analytic account, in order to be invoiced. With Project Management, such an analytic account "
+        "can be automatically generated at the order confirmation, if set on the Service Tracking "
+        "option of one product item.")
+    sales_count = fields.Float(compute='_compute_sales_count', string='Sold')
+    hide_expense_policy = fields.Boolean(compute='_compute_hide_expense_policy')
+    invoice_policy = fields.Selection(
+        [('order', 'Ordered quantities'),
+         ('delivery', 'Delivered quantities'),
+        ], string='Invoicing Policy',
+        help='Ordered Quantity: Invoice based on the quantity the customer ordered.\n'
+             'Delivered Quantity: Invoiced based on the quantity the vendor delivered (time or deliveries).',
+        default='order')
+
+    @api.multi
+    def _compute_hide_expense_policy(self):
+        hide_expense_policy = self.user_has_groups('!analytic.group_analytic_accounting,!project.group_project_user,!hr_expense.group_hr_expense_user')
+        for template in self:
+            template.hide_expense_policy = hide_expense_policy
 
     @api.multi
     @api.depends('product_variant_ids.sales_count')
@@ -44,15 +65,6 @@ class ProductTemplate(models.Model):
             'domain': [('state', 'in', ['sale', 'done']), ('product_id.product_tmpl_id', '=', self.id)],
         }
 
-    sales_count = fields.Integer(compute='_sales_count', string='# Sales')
-    invoice_policy = fields.Selection(
-        [('order', 'Ordered quantities'),
-         ('delivery', 'Delivered quantities'),
-        ], string='Invoicing Policy',
-        help='Ordered Quantity: Invoice based on the quantity the customer ordered.\n'
-             'Delivered Quantity: Invoiced based on the quantity the vendor delivered (time or deliveries).',
-        default='order')
-
     @api.onchange('type')
     def _onchange_type(self):
         """ Force values to stay consistent with integrity constraints """
