PR: https://github.com/odoo/odoo/pull/137915

From: f0553991e3dd5b9d4748a424f8750208145dec3a
From: Hugo Carlier (Huca)
Date: 2023-12-01 13:29:53

Structural Changes: 3
Total Changes: 31

[IMP] *: add avatar card preview for resources and employees

Impacted modules:
- hr
- hr_skills
- hr_holidays
- hr_homeworking
- resource_mail (new module)

This commits introduces avatar card preview for resource.resource
and hr.employee(.public) records in a similar way to what has been done
in mail for res.users records (see odoo/odoo#121943 and
odoo/odoo#131355).

resource.resource
=================
The following field components are created to display the popover card
when clicking on the avatar of the resource.resource record:
- widget many2one_avatar_resource (based on many2one_avatar_user)
- widget many2many_avatar_resource (based on many2many_avatar_user)

The behavior implemented when clicking on a resource.resource record's
avatar is the following:
- If the resource is human, a popover card is displayed. A "Send
Message" button is displayed on the card if a user is associated to the
record.
- If the resource is material, no popover card is displayed.
nb: this behavior is modified in planning

The design of the popover card is for resource.resource records is
similar to the one initially implemented for res.users records.

The choice is made to override existing widget/components instead of
patching them as field dependencies need to be added for
resource.resource records to distinguish material from human
resources (and have the necessary information to determine if the
popover card has to be displayed for material resources).

Note: It is currently not possible to add _relatedFields_ option to M2O
fields due to framework restriction that could evolve in Odoo 18. The
behavior of the many2one_avatar_resource widget therefore exhibits the
following limitations:
- related field 'resource_type' that need to be fetched to determine if
an avatar is displayed or not needs to be added to the model whose views
will use this widget.
- a popover card is displayed even if the human resource has no user
linked to it. For the same reason, a related field user_id should be
added to other models which is not really desirable and could lead to
confusion.
This should be refactored when a support of the _relatedFields_ option
is added for M2O fields.

hr.employee
===========
The following widgets are patched to display the popover card
when clicking on the avatar of the hr.employee record:
- many2many_avatar_user
- many2one_avatar_user

The card displayed uses the same template as the one used for
resource.resource records.

task-3457031

closes odoo/odoo#137915

Related: odoo/enterprise#48808
Signed-off-by: Xavier Bol (xbo) <xbo@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr/models/hr_employee_base.py
+++ b/addons/hr/models/hr_employee_base.py
@@ -34,11 +34,14 @@ class HrEmployeeBase(models.AbstractModel):
         readonly=False,
         check_company=True)
     work_phone = fields.Char('Work Phone', compute="_compute_phones", store=True, readonly=False)
+    phone = fields.Char(related="user_id.phone")
     mobile_phone = fields.Char('Work Mobile', compute="_compute_work_contact_details", store=True, inverse='_inverse_work_contact_details')
     work_email = fields.Char('Work Email', compute="_compute_work_contact_details", store=True, inverse='_inverse_work_contact_details')
+    email = fields.Char(related="user_id.email")
     work_contact_id = fields.Many2one('res.partner', 'Work Contact', copy=False)
     work_location_id = fields.Many2one('hr.work.location', 'Work Location')
     user_id = fields.Many2one('res.users')
+    share = fields.Boolean(related='user_id.share')
     resource_id = fields.Many2one('resource.resource')
     resource_calendar_id = fields.Many2one('resource.calendar', check_company=True)
     parent_id = fields.Many2one('hr.employee', 'Manager', compute="_compute_parent_id", store=True, readonly=False,
@@ -64,6 +67,7 @@ class HrEmployeeBase(models.AbstractModel):
         ('presence_to_define', 'To define'),
         ('presence_undetermined', 'Undetermined')], compute='_compute_presence_icon')
     show_hr_icon_display = fields.Boolean(compute='_compute_presence_icon')
+    im_status = fields.Char(related="user_id.im_status")
     newly_hired = fields.Boolean('Newly Hired', compute='_compute_newly_hired', search='_search_newly_hired')
 
     @api.model

--- a/addons/hr/models/resource.py
+++ b/addons/hr/models/resource.py
@@ -1,11 +1,34 @@
 # -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
-from odoo import fields, models
+from odoo import api, fields, models
 
 
 class ResourceResource(models.Model):
     _inherit = "resource.resource"
 
     user_id = fields.Many2one(copy=False)
-    employee_id = fields.One2many('hr.employee', 'resource_id', check_company=True)
+    employee_id = fields.One2many('hr.employee', 'resource_id', check_company=True, context={'active_test': False})
+
+    job_title = fields.Char(related='employee_id.job_title')
+    department_id = fields.Many2one(related='employee_id.department_id')
+    work_email = fields.Char(related='employee_id.work_email')
+    work_phone = fields.Char(related='employee_id.work_phone')
+    show_hr_icon_display = fields.Boolean(related='employee_id.show_hr_icon_display')
+    hr_icon_display = fields.Selection(related='employee_id.hr_icon_display')
+
+    @api.depends('employee_id')
+    def _compute_avatar_128(self):
+        is_hr_user = self.env.user.has_group('hr.group_hr_user')
+        if not is_hr_user:
+            public_employees = self.env['hr.employee.public'].with_context(active_test=False).search([
+                ('resource_id', 'in', self.ids),
+            ])
+            avatar_per_employee_id = {emp.id: emp.avatar_128 for emp in public_employees}
+
+        for resource in self:
+            employee = resource.employee_id
+            if is_hr_user:
+                resource.avatar_128 = employee and employee[0].avatar_128
+            else:
+                resource.avatar_128 = avatar_per_employee_id[employee[0].id]
