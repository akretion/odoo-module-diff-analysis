PR: https://github.com/odoo/odoo/pull/91240

From: ac67e6a8df2819e88240c981e60a59f5f74ff6e3
From: Pierre-Yves Dufays
Date: 2022-09-01 13:32:44

Structural Changes: 3
Total Changes: 39

[IMP] base,{fetch}mail,l10n_it_edi,{test}mass_mailing:prevent using arch server

Prevent archiving in-use mail servers by displaying an error message that
lists where it is still used, allowing to easily identify what need to be
updated before being able to archive the mail server.

Additionally,
- prevent the use of archived server as a fall-safe
- when duplicating a mailing with an archived mail server, replace mail
server by the default one

Detailed explanation:
1. A check has been added that raise an exception when trying to connect to the
smtp server or send an email when the server is archived.
With that solution,
- testing the connection of an archived server displays an error telling that
an archived server cannot be used.
- if a mail is still sent with an archived server, mail are in error :
"Connection failed (outgoing mail server problem)"
This fail-safe ensures that no mail will be sent through an archived mail server
and that the user will get some feedback about it.

The same fail-safe for the incoming mail server has been added.

Notes:
- the connection will outlive the archiving of a mail server still allowing
to send email through the archived server until the connection is closed. But
connection are not kept for long so this shouldn't be a problem.
- it cannot be tested because the connect method return immediately in test
mode.

2. When a mail server is archived, an user error is raised if it is in-use.
The implementation relies on each module to override the method
"_active_usages_compute" in "ir_mail_server" to complete the list with
user-friendly message describing the active elements that could send mail
through the mail server. This has been implemented for:
- l10n_it_edi: server used to send e-invoice
- mail: optional server configured for template
- mass_mailing:
-- default mail server
-- active server configured for mailing

Mail server are referenced in other elements but are not active anymore, it is
just for temporary or history purpose. Those references doesnâ€™t prevent the
archiving of the mail server:
- mail_message
- wizard survey_invite and compose_message
- res_config_settings

Task-2821516

closes odoo/odoo#91240

Signed-off-by: Thibault Delavallee (tde) <tde@openerp.com>

================================= pseudo patch: =================================

--- a/addons/mass_mailing/models/__init__.py
+++ b/addons/mass_mailing/models/__init__.py
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
+from . import ir_mail_server
 from . import ir_model
 from . import link_tracker
 from . import mailing_contact_subscription

--- a/None
+++ b/addons/mass_mailing/models/ir_mail_server.py
@@ -0,0 +1,36 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import _, fields, models
+from odoo.tools.misc import format_date
+
+
+class IrMailServer(models.Model):
+    _name = 'ir.mail_server'
+    _inherit = ['ir.mail_server']
+
+    active_mailing_ids = fields.One2many(
+        comodel_name='mailing.mailing',
+        inverse_name='mail_server_id',
+        string='Active mailing using this mail server',
+        readonly=True,
+        domain=[('state', '!=', 'done'), ('active', '=', True)])
+
+    def _active_usages_compute(self):
+        def format_usage(mailing_id):
+            base = _('Mass Mailing "%s"', mailing_id.display_name)
+            if not mailing_id.schedule_date:
+                return base
+            details = _('(scheduled for %s)', format_date(self.env, mailing_id.schedule_date))
+            return f'{base} {details}'
+
+        usages_super = super(IrMailServer, self)._active_usages_compute()
+        default_mail_server_id = self.env['mailing.mailing']._get_default_mail_server_id()
+        for record in self:
+            usages = []
+            if default_mail_server_id == record.id:
+                usages.append(_('Email Marketing uses it as its default mail server to send mass mailings'))
+            usages.extend(map(format_usage, record.active_mailing_ids))
+            if usages:
+                usages_super.setdefault(record.id, []).extend(usages)
+        return usages_super

--- a/addons/mass_mailing/models/mailing.py
+++ b/addons/mass_mailing/models/mailing.py
@@ -502,6 +502,8 @@ class MassMailing(models.Model):
     def copy(self, default=None):
         self.ensure_one()
         default = dict(default or {}, contact_list_ids=self.contact_list_ids.ids)
+        if self.mail_server_id and not self.mail_server_id.active:
+            default['mail_server_id'] = self._get_default_mail_server_id()
         return super(MassMailing, self).copy(default=default)
 
     def _group_expand_states(self, states, domain, order):
