PR: https://github.com/odoo/odoo/pull/

From: 7ad15c3827bda1d47314af0143f535cf5a6ca349
From: Thibault DelavallÃ©e
Date: 2016-07-12 15:53:49

Structural Changes: 2
Total Changes: 62

[IMP] sale_stock: small code improvements

This module is already migrated. However some code could easily be improved
or cleaned.

================================= pseudo patch: =================================

--- a/addons/sale_stock/models/sale_order.py
+++ b/addons/sale_stock/models/sale_order.py
@@ -51,34 +51,20 @@ class SaleOrder(models.Model):
         of given sales order ids. It can either be a in a list or in a form
         view, if there is only one delivery order to show.
         '''
-        action = self.env.ref('stock.action_picking_tree_all')
-
-        result = {
-            'name': action.name,
-            'help': action.help,
-            'type': action.type,
-            'view_type': action.view_type,
-            'view_mode': action.view_mode,
-            'target': action.target,
-            'context': action.context,
-            'res_model': action.res_model,
-        }
-
-        pick_ids = sum([order.picking_ids.ids for order in self], [])
-
-        if len(pick_ids) > 1:
-            result['domain'] = "[('id','in',["+','.join(map(str, pick_ids))+"])]"
-        elif len(pick_ids) == 1:
-            form = self.env.ref('stock.view_picking_form', False)
-            form_id = form.id if form else False
-            result['views'] = [(form_id, 'form')]
-            result['res_id'] = pick_ids[0]
-        return result
+        action = self.env.ref('stock.action_picking_tree_all').read()[0]
+
+        pickings = self.mapped('picking_ids')
+        if len(pickings) > 1:
+            action['domain'] = [('id', 'in', pickings.ids)]
+        elif pickings:
+            action['views'] = [(self.env.ref('stock.view_picking_form').id, 'form')]
+            action['res_id'] = pickings.id
+        return action
 
     @api.multi
     def action_cancel(self):
         self.order_line.mapped('procurement_ids').cancel()
-        super(SaleOrder, self).action_cancel()
+        return super(SaleOrder, self).action_cancel()
 
     @api.multi
     def _prepare_invoice(self):
@@ -132,13 +118,11 @@ class SaleOrderLine(models.Model):
     @api.onchange('product_id')
     def _onchange_product_id_set_customer_lead(self):
         self.customer_lead = self.product_id.sale_delay
-        return {}
 
     @api.onchange('product_packaging')
     def _onchange_product_packaging(self):
         if self.product_packaging:
             return self._check_package()
-        return {}
 
     @api.onchange('product_id')
     def _onchange_product_id_uom_check_availability(self):

--- a/addons/sale_stock/models/stock.py
+++ b/addons/sale_stock/models/stock.py
@@ -22,11 +22,8 @@ class StockMove(models.Model):
         result = super(StockMove, self).action_done()
 
         # Update delivered quantities on sale order lines
-        todo = self.env['sale.order.line']
-        for move in self:
-            if (move.procurement_id.sale_line_id) and (move.product_id.expense_policy=='no'):
-                todo |= move.procurement_id.sale_line_id
-        for line in todo:
+        sale_order_lines = self.filtered(lambda move: move.procurement_id.sale_line_id and move.product_id.expense_policy == 'no').mapped('procurement_id.sale_line_id')
+        for line in sale_order_lines:
             line.qty_delivered = line._get_delivered_qty()
         return result
 
@@ -47,15 +44,15 @@ class StockMove(models.Model):
 class StockPicking(models.Model):
     _inherit = 'stock.picking'
 
-    @api.depends('move_lines')
+    sale_id = fields.Many2one('sale.order', "Sale Order", compute='_compute_sale_id', search='_search_sale_id')
+
+    @api.one
+    @api.depends('move_lines.procurement_id.sale_line_id.order_id')
     def _compute_sale_id(self):
-        for picking in self:
-            sale_order = False
-            for move in picking.move_lines:
-                if move.procurement_id.sale_line_id:
-                    sale_order = move.procurement_id.sale_line_id.order_id
-                    break
-            picking.sale_id = sale_order.id if sale_order else False
+        for move in self.move_lines:
+            if move.procurement_id.sale_line_id:
+                self.sale_id = move.procurement_id.sale_line_id.order_id
+                return
 
     def _search_sale_id(self, operator, value):
         moves = self.env['stock.move'].search(
@@ -63,9 +60,6 @@ class StockPicking(models.Model):
         )
         return [('id', 'in', moves.mapped('picking_id').ids)]
 
-    sale_id = fields.Many2one(comodel_name='sale.order', string="Sale Order",
-                              compute='_compute_sale_id', search='_search_sale_id')
-
     @api.multi
     def _create_backorder(self, backorder_moves=[]):
         res = super(StockPicking, self)._create_backorder(backorder_moves)
