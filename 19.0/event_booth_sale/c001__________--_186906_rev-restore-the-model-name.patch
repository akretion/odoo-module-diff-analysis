PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:8 + add:0, change matches:
-    _inherit = ['account.move']
-    _inherit = ['event.booth']
-    _inherit = ['event.booth.category']
-    _inherit = ['event.type.booth']
-    _inherit = ['product.product']
-    _inherit = ['product.template']
-    _inherit = ['sale.order']
-    _inherit = ['sale.order.line']

Total Changes: 16

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/event_booth_sale/models/account_move.py
+++ b/addons/event_booth_sale/models/account_move.py
@@ -5,7 +5,7 @@ from odoo import models
 
 
 class AccountMove(models.Model):
-    _inherit = ['account.move']
+    _inherit = 'account.move'
 
     def _invoice_paid_hook(self):
         """ When an invoice linked to a sales order selling registrations is

--- a/addons/event_booth_sale/models/event_booth.py
+++ b/addons/event_booth_sale/models/event_booth.py
@@ -6,7 +6,7 @@ from odoo.exceptions import UserError
 
 
 class EventBooth(models.Model):
-    _inherit = ['event.booth']
+    _inherit = 'event.booth'
 
     # registrations
     event_booth_registration_ids = fields.One2many('event.booth.registration', 'event_booth_id')

--- a/addons/event_booth_sale/models/event_booth_category.py
+++ b/addons/event_booth_sale/models/event_booth_category.py
@@ -10,7 +10,7 @@ _logger = logging.getLogger(__name__)
 
 
 class EventBoothCategory(models.Model):
-    _inherit = ['event.booth.category']
+    _inherit = 'event.booth.category'
 
     def _default_product_id(self):
         return self.env.ref('event_booth_sale.product_product_event_booth', raise_if_not_found=False)

--- a/addons/event_booth_sale/models/event_type_booth.py
+++ b/addons/event_booth_sale/models/event_type_booth.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class EventTypeBooth(models.Model):
-    _inherit = ['event.type.booth']
+    _inherit = 'event.type.booth'
 
     product_id = fields.Many2one(related='booth_category_id.product_id')
     price = fields.Float(related='booth_category_id.price', store=True)

--- a/addons/event_booth_sale/models/product_product.py
+++ b/addons/event_booth_sale/models/product_product.py
@@ -2,7 +2,7 @@ from odoo import api, models
 
 
 class ProductProduct(models.Model):
-    _inherit = ['product.product']
+    _inherit = 'product.product'
 
     @api.onchange('service_tracking')
     def _onchange_type_event_booth(self):

--- a/addons/event_booth_sale/models/product_template.py
+++ b/addons/event_booth_sale/models/product_template.py
@@ -2,7 +2,7 @@ from odoo import _, api, fields, models
 
 
 class ProductTemplate(models.Model):
-    _inherit = ['product.template']
+    _inherit = 'product.template'
 
     service_tracking = fields.Selection(selection_add=[
         ('event_booth', 'Event Booth'),

--- a/addons/event_booth_sale/models/sale_order.py
+++ b/addons/event_booth_sale/models/sale_order.py
@@ -7,7 +7,7 @@ from odoo.osv import expression
 
 
 class SaleOrder(models.Model):
-    _inherit = ['sale.order']
+    _inherit = 'sale.order'
 
     event_booth_ids = fields.One2many('event.booth', 'sale_order_id', string='Booths')
     event_booth_count = fields.Integer(string='Booth Count', compute='_compute_event_booth_count')

--- a/addons/event_booth_sale/models/sale_order_line.py
+++ b/addons/event_booth_sale/models/sale_order_line.py
@@ -6,7 +6,7 @@ from odoo.exceptions import ValidationError
 
 
 class SaleOrderLine(models.Model):
-    _inherit = ['sale.order.line']
+    _inherit = 'sale.order.line'
 
     event_booth_category_id = fields.Many2one('event.booth.category', string='Booths Category', ondelete='set null')
     event_booth_pending_ids = fields.Many2many(
