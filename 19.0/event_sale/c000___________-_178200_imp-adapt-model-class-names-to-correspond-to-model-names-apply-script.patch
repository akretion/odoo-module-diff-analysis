PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:6 + add:0, change matches:
-    _inherit = 'event.event'
-    _inherit = 'event.registration'
-    _inherit = 'event.event.ticket'
-    _inherit = 'product.template'
-    _inherit = "sale.order"
-    _inherit = 'sale.order.line'

Total Changes: 18

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/event_sale/models/event_event.py
+++ b/addons/event_sale/models/event_event.py
@@ -4,8 +4,8 @@
 from odoo import api, fields, models
 
 
-class Event(models.Model):
-    _inherit = 'event.event'
+class EventEvent(models.Model):
+    _inherit = ['event.event']
 
     sale_order_lines_ids = fields.One2many(
         'sale.order.line', 'event_id',

--- a/addons/event_sale/models/event_registration.py
+++ b/addons/event_sale/models/event_registration.py
@@ -6,7 +6,7 @@ from odoo.tools import float_is_zero
 
 
 class EventRegistration(models.Model):
-    _inherit = 'event.registration'
+    _inherit = ['event.registration']
 
     # TDE FIXME: maybe add an onchange on sale_order_id
     sale_order_id = fields.Many2one('sale.order', string='Sales Order', ondelete='cascade', copy=False)

--- a/addons/event_sale/models/event_ticket.py
+++ b/addons/event_sale/models/event_ticket.py
@@ -1,8 +1,8 @@
 from odoo import models
 
 
-class EventTicket(models.Model):
-    _inherit = 'event.event.ticket'
+class EventEventTicket(models.Model):
+    _inherit = ['event.event.ticket']
     _order = "event_id, sequence, price, name, id"
 
     def _get_ticket_multiline_description(self):
@@ -11,4 +11,4 @@ class EventTicket(models.Model):
         self.ensure_one()
         if self.product_id.description_sale:
             return '%s\n%s' % (self.product_id.description_sale, self.event_id.display_name)
-        return super(EventTicket, self)._get_ticket_multiline_description()
+        return super()._get_ticket_multiline_description()

--- a/addons/event_sale/models/product_template.py
+++ b/addons/event_sale/models/product_template.py
@@ -2,7 +2,7 @@ from odoo import _, api, models
 
 
 class ProductTemplate(models.Model):
-    _inherit = 'product.template'
+    _inherit = ['product.template']
 
     def _prepare_service_tracking_tooltip(self):
         if self.service_tracking == 'event':

--- a/addons/event_sale/models/sale_order.py
+++ b/addons/event_sale/models/sale_order.py
@@ -8,7 +8,7 @@ from odoo.osv import expression
 
 
 class SaleOrder(models.Model):
-    _inherit = "sale.order"
+    _inherit = ["sale.order"]
 
     attendee_count = fields.Integer('Attendee Count', compute='_compute_attendee_count')
 

--- a/addons/event_sale/models/sale_order_line.py
+++ b/addons/event_sale/models/sale_order_line.py
@@ -5,7 +5,7 @@ from odoo.exceptions import ValidationError
 
 
 class SaleOrderLine(models.Model):
-    _inherit = 'sale.order.line'
+    _inherit = ['sale.order.line']
 
     event_id = fields.Many2one(
         'event.event', string='Event',
