PR: https://github.com/odoo/odoo/pull/44602

From: 01354a3314f656e3471789aa72c264101a0c61d8
From: Xavier Morel
Date: 2020-02-04 14:44:59

Structural Changes: 3.6
Total Changes: 10

[FIX] account, purchase: almost certainly incorrect domains

This started from noticing that purchase somewhat oddly *removes* a
filter (internal_type='other') from a domain which is fairly
rare. Looking at the file histories didn't yield anything of
interest ("v9 accounting") but finally looking at the model revealed
an additional multi-company filter missing from both views.

After consulting with @qdp-odoo, @sle-odoo and @lap-odoo, no good
reason was found for the discrepancies:

* internal_type filter should probably always be there, unclear why it
  would get removed from purchase
* whoever added the multicompany filter *probably* missed that it
  would never be used because there was not one but two views
  overriding it (differently)
* sibling "income" field, as well as the corresponding fields on the
  product category, should match (though they were less incoherent).

closes odoo/odoo#44602

Signed-off-by: Xavier Morel (xmo) <xmo@odoo.com>

================================= pseudo patch: =================================

--- a/addons/account/models/product.py
+++ b/addons/account/models/product.py
@@ -1,19 +1,19 @@
 # -*- coding: utf-8 -*-
 
 from odoo import api, fields, models, _
-from odoo.exceptions import UserError
 
+ACCOUNT_DOMAIN = "['&', '&', ('deprecated', '=', False), ('internal_type','=','other'), ('company_id', '=', current_company_id)]"
 
 class ProductCategory(models.Model):
     _inherit = "product.category"
 
     property_account_income_categ_id = fields.Many2one('account.account', company_dependent=True,
         string="Income Account",
-        domain="['&', ('deprecated', '=', False), ('company_id', '=', current_company_id)]",
+        domain=ACCOUNT_DOMAIN,
         help="This account will be used when validating a customer invoice.")
     property_account_expense_categ_id = fields.Many2one('account.account', company_dependent=True,
         string="Expense Account",
-        domain="['&', ('deprecated', '=', False), ('company_id', '=', current_company_id)]",
+        domain=ACCOUNT_DOMAIN,
         help="The expense is accounted for when a vendor bill is validated, except in anglo-saxon accounting with perpetual inventory valuation in which case the expense (Cost of Goods Sold account) is recognized at the customer invoice validation.")
 
 #----------------------------------------------------------
@@ -28,11 +28,11 @@ class ProductTemplate(models.Model):
         domain=[('type_tax_use', '=', 'purchase')], default=lambda self: self.env.company.account_purchase_tax_id)
     property_account_income_id = fields.Many2one('account.account', company_dependent=True,
         string="Income Account",
-        domain="['&', ('deprecated', '=', False), ('company_id', '=', current_company_id)]",
+        domain=ACCOUNT_DOMAIN,
         help="Keep this field empty to use the default value from the product category.")
     property_account_expense_id = fields.Many2one('account.account', company_dependent=True,
         string="Expense Account",
-        domain="['&', ('deprecated', '=', False), ('company_id', '=', current_company_id)]",
+        domain=ACCOUNT_DOMAIN,
         help="Keep this field empty to use the default value from the product category. If anglo-saxon accounting with automated valuation method is configured, the expense account on the product category will be used.")
 
     def _get_product_accounts(self):
