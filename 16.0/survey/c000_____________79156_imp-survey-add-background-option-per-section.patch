PR: https://github.com/odoo/odoo/pull/79156

From: fd75481d52878962a782cfe740be25b731c99efd
From: David Beguin
Date: 2021-11-30 11:20:45

Breaking data model changes scores: del:1 + add:0, change matches:
-    background_image = fields.Binary("Background Image")

Total Changes: 39

[IMP] survey: add background option per section

This commit adds the background per section feature.
If the section to display has a background image configured, the background
will be refreshed using that section background image.
If the section has no background, the survey background is used.
The background is refreshed at the same time that the next question is loaded.

To ease technical maintenance and to keep it simple, the background is always
faded out/in at each page change only if there are some sections on the
survey that has a specific background image. If no background image are set on
the survey sections, the background will never be faded out.

Note: The next section to display depends on free text (section with
description) configuration and on conditional questions.
The next section to display can be the next question's section or directly
the next question itself (if the question is a section).

This section's background image implementation works both for the regular
survey form as well as the "live session" mode of the survey module.

Task-2225393

closes odoo/odoo#79156

Signed-off-by: Warnon Aur√©lien (awa) <awa@odoo.com>

================================= pseudo patch: =================================

--- a/addons/survey/models/survey_question.py
+++ b/addons/survey/models/survey_question.py
@@ -58,6 +58,8 @@ class SurveyQuestion(models.Model):
         'Description', translate=True, sanitize=False,  # TDE TODO: sanitize but find a way to keep youtube iframe media stuff
         help="Use this field to add additional explanations about your question or to illustrate it with pictures or a video")
     question_placeholder = fields.Char("Placeholder", translate=True, compute="_compute_question_placeholder", store=True, readonly=False)
+    background_image = fields.Image("Background Image", compute="_compute_background_image", store=True, readonly=False)
+    background_image_url = fields.Char("Background Url", compute="_compute_background_image_url")
     survey_id = fields.Many2one('survey.survey', string='Survey', ondelete='cascade')
     scoring_type = fields.Selection(related='survey_id.scoring_type', string='Scoring Type', readonly=True)
     sequence = fields.Integer('Sequence', default=10)
@@ -179,6 +181,34 @@ class SurveyQuestion(models.Model):
                     or not question.question_placeholder:  # avoid CacheMiss errors
                 question.question_placeholder = False
 
+    @api.depends('is_page')
+    def _compute_background_image(self):
+        """ Background image is only available on sections. """
+        for question in self.filtered(lambda q: not q.is_page):
+            question.background_image = False
+
+    @api.depends('survey_id.access_token', 'background_image', 'page_id', 'survey_id.background_image_url')
+    def _compute_background_image_url(self):
+        """ How the background url is computed:
+        - For a question: it depends on the related section (see below)
+        - For a section:
+            - if a section has a background, then we create the background URL using this section's ID
+            - if not, then we fallback on the survey background url """
+        base_bg_url = "/survey/%s/%s/get_background_image"
+        for question in self:
+            if question.is_page:
+                background_section_id = question.id if question.background_image else False
+            else:
+                background_section_id = question.page_id.id if question.page_id.background_image else False
+
+            if background_section_id:
+                question.background_image_url = base_bg_url % (
+                    question.survey_id.access_token,
+                    background_section_id
+                )
+            else:
+                question.background_image_url = question.survey_id.background_image_url
+
     @api.depends('is_page')
     def _compute_question_type(self):
         for question in self:

--- a/addons/survey/models/survey_survey.py
+++ b/addons/survey/models/survey_survey.py
@@ -54,7 +54,8 @@ class Survey(models.Model):
     description_done = fields.Html(
         "End Message", translate=True,
         help="This message will be displayed when survey is completed")
-    background_image = fields.Binary("Background Image")
+    background_image = fields.Image("Background Image")
+    background_image_url = fields.Char('Background Url', compute="_compute_background_image_url")
     active = fields.Boolean("Active", default=True)
     user_id = fields.Many2one(
         'res.users', string='Responsible',
@@ -171,6 +172,12 @@ class Survey(models.Model):
         ('badge_uniq', 'unique (certification_badge_id)', "The badge for each survey should be unique!"),
     ]
 
+    @api.depends('background_image', 'access_token')
+    def _compute_background_image_url(self):
+        self.background_image_url = False
+        for survey in self.filtered(lambda survey: survey.background_image and survey.access_token):
+            survey.background_image_url = "/survey/%s/get_background_image" % survey.access_token
+
     def _compute_users_can_signup(self):
         signup_allowed = self.env['res.users'].sudo()._get_signup_invitation_scope() == 'b2c'
         for survey in self:
