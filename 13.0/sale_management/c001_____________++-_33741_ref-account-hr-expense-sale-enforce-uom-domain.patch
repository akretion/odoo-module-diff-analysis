PR: https://github.com/odoo/odoo/pull/33741

From: 65613f5f83bdac212033b84fb67ce58c67e25e80
From: Priyanka Kakadiya
Date: 2019-07-22 08:07:31

Structural Changes: 9
Total Changes: 11

[REF] account,hr_expense,sale: enforce uom domain

Enforce the domain of the UOM not by an onchange but by a domain.

Example of an issue if the domain is enforced by an onchange:
- create a order
- add an order line
- select the product
- select an uom
> the uom presented are the one from the product category.
-Save
- edit
- select an uom
> all UOM are presented even the ones of other categories

This commit enforce this new logic at most places.

task - 2003959

closes odoo/odoo#33741

Signed-off-by: Damien Bouvy (dbo) <dbo@odoo.com>

================================= pseudo patch: =================================

--- a/addons/sale_management/models/sale_order.py
+++ b/addons/sale_management/models/sale_order.py
@@ -169,7 +169,8 @@ class SaleOrderOption(models.Model):
     product_id = fields.Many2one('product.product', 'Product', required=True, domain=[('sale_ok', '=', True)])
     price_unit = fields.Float('Unit Price', required=True, digits='Product Price')
     discount = fields.Float('Discount (%)', digits='Discount')
-    uom_id = fields.Many2one('uom.uom', 'Unit of Measure ', required=True)
+    uom_id = fields.Many2one('uom.uom', 'Unit of Measure ', required=True, domain="[('category_id', '=', product_uom_category_id)]")
+    product_uom_category_id = fields.Many2one(related='product_id.uom_id.category_id', readonly=True)
     quantity = fields.Float('Quantity', required=True, digits='Product UoS', default=1)
     sequence = fields.Integer('Sequence', help="Gives the sequence order when displaying a list of optional products.")
 

--- a/addons/sale_management/models/sale_order_template.py
+++ b/addons/sale_management/models/sale_order_template.py
@@ -68,7 +68,8 @@ class SaleOrderTemplateLine(models.Model):
     price_unit = fields.Float('Unit Price', required=True, digits='Product Price')
     discount = fields.Float('Discount (%)', digits='Discount', default=0.0)
     product_uom_qty = fields.Float('Quantity', required=True, digits='Product UoS', default=1)
-    product_uom_id = fields.Many2one('uom.uom', 'Unit of Measure')
+    product_uom_id = fields.Many2one('uom.uom', 'Unit of Measure', domain="[('category_id', '=', product_uom_category_id)]")
+    product_uom_category_id = fields.Many2one(related='product_id.uom_id.category_id', readonly=True)
 
     display_type = fields.Selection([
         ('line_section', "Section"),
@@ -84,8 +85,6 @@ class SaleOrderTemplateLine(models.Model):
             self.name = name
             self.price_unit = self.product_id.lst_price
             self.product_uom_id = self.product_id.uom_id.id
-            domain = {'product_uom_id': [('category_id', '=', self.product_id.uom_id.category_id.id)]}
-            return {'domain': domain}
 
     @api.onchange('product_uom_id')
     def _onchange_product_uom(self):
@@ -124,7 +123,8 @@ class SaleOrderTemplateOption(models.Model):
     product_id = fields.Many2one('product.product', 'Product', domain=[('sale_ok', '=', True)], required=True)
     price_unit = fields.Float('Unit Price', required=True, digits='Product Price')
     discount = fields.Float('Discount (%)', digits='Discount')
-    uom_id = fields.Many2one('uom.uom', 'Unit of Measure ', required=True)
+    uom_id = fields.Many2one('uom.uom', 'Unit of Measure ', required=True, domain="[('category_id', '=', product_uom_category_id)]")
+    product_uom_category_id = fields.Many2one(related='product_id.uom_id.category_id', readonly=True)
     quantity = fields.Float('Quantity', required=True, digits='Product UoS', default=1)
 
     @api.onchange('product_id')
