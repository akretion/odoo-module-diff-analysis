PR: https://github.com/odoo/odoo/pull/

From: 79fd51b2a59224e8fa189f01c53d778e06774c59
From: Akash Bhavsar
Date: 2017-01-03 16:07:02

Breaking data model changes score: 9, change matches:
-    module_share = fields.Boolean(string='Allow documents sharing',
-    module_portal = fields.Boolean(string='Activate the customer portal',
-    custom_footer = fields.Selection(related="company_id.custom_footer")
-    rml_footer = fields.Text(related="company_id.rml_footer", string='Custom Report Footer', help="Footer text displayed at the bottom of all reports.")
-    rml_paper_format = fields.Selection(related="company_id.rml_paper_format", string="Paper Format *", required=True)
-    font = fields.Many2one(related='company_id.font', string="Font *", help="Set the font into the report header, it will be used as default font in the RML reports of the user company")
-    rml_header = fields.Text(related="company_id.rml_header", string="RML Header *")
-    rml_header2 = fields.Text(related="company_id.rml_header2", string='RML Internal Header *')
-    rml_header3 = fields.Text(related="company_id.rml_header3", string='RML Internal Header for Landscape Reports *')

Total Changes: 41

[IMP] base_setup: Improve the `General Settings` form view

================================= pseudo patch: =================================

--- a/addons/base_setup/models/res_config.py
+++ b/addons/base_setup/models/res_config.py
@@ -8,42 +8,31 @@ class BaseConfigSettings(models.TransientModel):
     _name = 'base.config.settings'
     _inherit = 'res.config.settings'
 
-    group_multi_company = fields.Boolean(string='Manage multiple companies',
-        help='Work in multi-company environments, with appropriate security access between companies.',
-        implied_group='base.group_multi_company')
+    group_multi_company = fields.Boolean("Manage multiple companies", implied_group='base.group_multi_company')
     company_id = fields.Many2one('res.company', string='Company', required=True,
         default=lambda self: self.env.user.company_id)
-    module_share = fields.Boolean(string='Allow documents sharing',
-        help="""Share or embed any screen of Odoo.""")
-    module_portal = fields.Boolean(string='Activate the customer portal',
-        help="""Give your customers access to their documents.""")
-    module_auth_oauth = fields.Boolean(string='Use external authentication providers (OAuth)')
-    module_base_import = fields.Boolean(string="Allow users to import data from CSV/XLS/XLSX/ODS files")
-    module_google_drive = fields.Boolean(string='Attach Google documents to any record',
-        help="""This installs the module google_docs.""")
+    default_user_rights = fields.Boolean("Default Access Rights", default_model='base.config.settings')
+    default_external_email_server = fields.Boolean("External Email Servers", default_model='base.config.settings')
+    module_base_import = fields.Boolean("Allow users to import data from CSV/XLS/XLSX/ODS files")
+    module_pad = fields.Boolean("External Pads")
     module_google_calendar = fields.Boolean(
-        string='Allow the users to synchronize their calendar  with Google Calendar',
-        help="""This installs the module google_calendar.""")
-    module_inter_company_rules = fields.Boolean(string='Manage Inter Company',
-        help="""This installs the module inter_company_rules.\n Configure company rules to automatically create SO/PO when one of your company sells/buys to another of your company.""")
+        string='Allow the users to synchronize their calendar  with Google Calendar')
+    module_google_drive = fields.Boolean("Attach Google documents to any record")
+    module_google_spreadsheet = fields.Boolean("Google Spreadsheet")
+    module_auth_oauth = fields.Boolean("Use external authentication providers (OAuth)")
+    module_auth_ldap = fields.Boolean("LDAP Authentification")
+    module_base_gengo = fields.Boolean("Translate Your Website with Gengo")
+    module_inter_company_rules = fields.Boolean("Manage Inter Company")
     company_share_partner = fields.Boolean(string='Share partners to all companies',
         help="Share your partners to all companies defined in your instance.\n"
              " * Checked : Partners are visible for every companies, even if a company is defined on the partner.\n"
              " * Unchecked : Each company can see only its partner (partners where company is defined). Partners not related to a company are visible for all companies.")
+    default_custom_report_footer = fields.Boolean("Custom Report Footer", default_model='base.config.settings')
+    rml_footer = fields.Text(related="company_id.rml_footer", string='Custom Report Footer', help="Footer text displayed at the bottom of all reports.")
     group_multi_currency = fields.Boolean(string='Allow multi currencies',
             implied_group='base.group_multi_currency',
             help="Allows to work in a multi currency environment")
 
-    # Report config from base/res/res_company.py
-    custom_footer = fields.Selection(related="company_id.custom_footer")
-    rml_footer = fields.Text(related="company_id.rml_footer", string='Custom Report Footer', help="Footer text displayed at the bottom of all reports.")
-    rml_paper_format = fields.Selection(related="company_id.rml_paper_format", string="Paper Format *", required=True)
-    font = fields.Many2one(related='company_id.font', string="Font *", help="Set the font into the report header, it will be used as default font in the RML reports of the user company")
-    rml_header = fields.Text(related="company_id.rml_header", string="RML Header *")
-    rml_header2 = fields.Text(related="company_id.rml_header2", string='RML Internal Header *')
-    rml_header3 = fields.Text(related="company_id.rml_header3", string='RML Internal Header for Landscape Reports *')
-
-
     @api.multi
     def open_company(self):
         return {
@@ -55,11 +44,9 @@ class BaseConfigSettings(models.TransientModel):
             'res_id': self.env.user.company_id.id,
             'target': 'current',
         }
-
     @api.multi
     def open_default_user(self):
         action = self.env.ref('base.action_res_users').read()[0]
-        action['context'] = self.env.context
         action['res_id'] = self.env.ref('base.default_user').id
         action['views'] = [[self.env.ref('base.view_users_form').id, 'form']]
         return action
