PR: https://github.com/odoo/odoo/pull/63333

From: 75f23a6a8984065deb88ecfbf5863b93fcccf60b
From: Thibault Delavall√©e
Date: 2021-01-15 08:14:01

Breaking data model changes scores: del:1 + add:0, change matches:
-    _inherit = ['res.partner', 'phone.validation.mixin']

Total Changes: 47

[REF] phone_validation, various: remove phone.validation.mixin and inline it

PURPOSE

Remove complex or technical code adding few value.

RATIONALE

phone.validation.mixin is used in two models: crm.lead and res.partner. It only
add a phone_format method used in onchange. We can inline this code in those
two models and remove the whole mixin itself. It lessens inherit and class
complexity.

SPECIFICATIONS

Remove phone.validation.mixin. Inline code in crm.lead (CRM application)
and res.partner (phone validation module). Make phone_format private as
it is now some internal tool method on those two models.

Everything should behave as before this commit. No functional change is
intended.

LINKS

Task ID-2416789
COM PR odoo/odoo#63333
ENT PR odoo/enterprise#15296
UPG PR odoo/upgrade#2025

Signed-off-by: Thibault Delavallee (tde) <tde@openerp.com>

================================= pseudo patch: =================================

--- a/addons/phone_validation/models/__init__.py
+++ b/addons/phone_validation/models/__init__.py
@@ -2,6 +2,5 @@
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
 from . import phone_blacklist
-from . import phone_validation_mixin
 from . import mail_thread_phone
 from . import res_partner

--- a/addons/phone_validation/models/phone_validation_mixin.py
+++ b/None
@@ -1,27 +0,0 @@
-# -*- coding: utf-8 -*-
-# Part of Odoo. See LICENSE file for full copyright and licensing details.
-
-from odoo import models
-from odoo.addons.phone_validation.tools import phone_validation
-
-
-class PhoneValidationMixin(models.AbstractModel):
-    _name = 'phone.validation.mixin'
-    _description = 'Phone Validation Mixin'
-
-    def _phone_get_country(self):
-        if 'country_id' in self and self.country_id:
-            return self.country_id
-        return self.env.company.country_id
-
-    def phone_format(self, number, country=None, company=None):
-        country = country or self._phone_get_country()
-        if not country:
-            return number
-        return phone_validation.phone_format(
-            number,
-            country.code if country else None,
-            country.phone_code if country else None,
-            force_format='INTERNATIONAL',
-            raise_exception=False
-        )

--- a/addons/phone_validation/models/res_partner.py
+++ b/addons/phone_validation/models/res_partner.py
@@ -2,18 +2,31 @@
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
 from odoo import api, models
+from odoo.addons.phone_validation.tools import phone_validation
 
 
 class Partner(models.Model):
     _name = 'res.partner'
-    _inherit = ['res.partner', 'phone.validation.mixin']
+    _inherit = ['res.partner']
 
     @api.onchange('phone', 'country_id', 'company_id')
     def _onchange_phone_validation(self):
         if self.phone:
-            self.phone = self.phone_format(self.phone)
+            self.phone = self._phone_format(self.phone)
 
     @api.onchange('mobile', 'country_id', 'company_id')
     def _onchange_mobile_validation(self):
         if self.mobile:
-            self.mobile = self.phone_format(self.mobile)
+            self.mobile = self._phone_format(self.mobile)
+
+    def _phone_format(self, number, country=None, company=None):
+        country = country or self.country_id or self.env.company.country_id
+        if not country:
+            return number
+        return phone_validation.phone_format(
+            number,
+            country.code if country else None,
+            country.phone_code if country else None,
+            force_format='INTERNATIONAL',
+            raise_exception=False
+        )
