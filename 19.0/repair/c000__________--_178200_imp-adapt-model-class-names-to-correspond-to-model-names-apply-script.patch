PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:12 + add:0, change matches:
-    _inherit = 'mail.compose.message'
-    _inherit = "product.product"
-    _inherit = "product.template"
-    _inherit = 'sale.order'
-    _inherit = 'sale.order.line'
-    _inherit = 'stock.lot'
-    _inherit = 'stock.move'
-    _inherit = 'stock.move.line'
-    _inherit = 'stock.picking.type'
-    _inherit = 'stock.picking'
-    _inherit = 'stock.traceability.report'
-    _inherit = 'stock.warehouse'

Total Changes: 48

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/repair/models/mail_compose_message.py
+++ b/addons/repair/models/mail_compose_message.py
@@ -5,7 +5,7 @@ from odoo import models
 
 
 class MailComposeMessage(models.TransientModel):
-    _inherit = 'mail.compose.message'
+    _inherit = ['mail.compose.message']
 
     def _action_send_mail(self, auto_commit=False):
         if self.model == 'repair.order':

--- a/addons/repair/models/product.py
+++ b/addons/repair/models/product.py
@@ -5,8 +5,8 @@ from odoo import fields, models, _
 from odoo.exceptions import UserError
 
 
-class Product(models.Model):
-    _inherit = "product.product"
+class ProductProduct(models.Model):
+    _inherit = ["product.product"]
 
     product_catalog_product_is_in_repair = fields.Boolean(
         compute='_compute_product_is_in_repair',
@@ -38,6 +38,6 @@ class Product(models.Model):
 
 
 class ProductTemplate(models.Model):
-    _inherit = "product.template"
+    _inherit = ["product.template"]
 
     create_repair = fields.Boolean('Create Repair', help="Create a linked Repair Order on Sale Order confirmation of this product.", groups='stock.group_stock_user')

--- a/addons/repair/models/repair.py
+++ b/addons/repair/models/repair.py
@@ -17,9 +17,8 @@ MAP_REPAIR_TO_PICKING_LOCATIONS = {
 }
 
 
-class Repair(models.Model):
+class RepairOrder(models.Model):
     """ Repair Orders """
-    _name = 'repair.order'
     _description = 'Repair Order'
     _inherit = ['mail.thread', 'mail.activity.mixin', 'product.catalog.mixin']
     _order = 'priority desc, create_date desc'
@@ -726,9 +725,9 @@ class Repair(models.Model):
 
         return self.env['product.product'].browse(product_id).list_price
 
+
 class RepairTags(models.Model):
     """ Tags of Repair's tasks """
-    _name = "repair.tags"
     _description = "Repair Tags"
 
     def _get_default_color(self):

--- a/addons/repair/models/sale_order.py
+++ b/addons/repair/models/sale_order.py
@@ -4,8 +4,9 @@
 from odoo import api, fields, models, _
 from odoo.tools import float_compare
 
+
 class SaleOrder(models.Model):
-    _inherit = 'sale.order'
+    _inherit = ['sale.order']
 
     repair_order_ids = fields.One2many(
         comodel_name='repair.order', inverse_name='sale_order_id',
@@ -48,7 +49,7 @@ class SaleOrder(models.Model):
 
 
 class SaleOrderLine(models.Model):
-    _inherit = 'sale.order.line'
+    _inherit = ['sale.order.line']
 
     def _compute_qty_delivered(self):
         remaining_so_lines = self

--- a/addons/repair/models/stock_lot.py
+++ b/addons/repair/models/stock_lot.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models, _
 
 
 class StockLot(models.Model):
-    _inherit = 'stock.lot'
+    _inherit = ['stock.lot']
 
     repair_line_ids = fields.Many2many('repair.order', string="Repair Orders", compute="_compute_repair_line_ids")
     repair_part_count = fields.Integer('Repair part count', compute="_compute_repair_line_ids")

--- a/addons/repair/models/stock_move.py
+++ b/addons/repair/models/stock_move.py
@@ -11,7 +11,7 @@ MAP_REPAIR_LINE_TYPE_TO_MOVE_LOCATIONS_FROM_REPAIR = {
 
 
 class StockMove(models.Model):
-    _inherit = 'stock.move'
+    _inherit = ['stock.move']
 
     repair_id = fields.Many2one('repair.order', check_company=True)
     repair_line_type = fields.Selection([

--- a/addons/repair/models/stock_move_line.py
+++ b/addons/repair/models/stock_move_line.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class StockMoveLine(models.Model):
-    _inherit = 'stock.move.line'
+    _inherit = ['stock.move.line']
 
     def _should_show_lot_in_invoice(self):
         return super()._should_show_lot_in_invoice() or self.move_id.repair_line_type

--- a/addons/repair/models/stock_picking.py
+++ b/addons/repair/models/stock_picking.py
@@ -8,8 +8,8 @@ from odoo.tools import DEFAULT_SERVER_DATETIME_FORMAT
 from odoo.tools.misc import clean_context
 
 
-class PickingType(models.Model):
-    _inherit = 'stock.picking.type'
+class StockPickingType(models.Model):
+    _inherit = ['stock.picking.type']
 
     code = fields.Selection(selection_add=[
         ('repair_operation', 'Repair')
@@ -118,7 +118,7 @@ class PickingType(models.Model):
                 continue
             stock_location = picking_type.warehouse_id.lot_stock_id
             picking_type.default_location_src_id = stock_location.id
-        super(PickingType, remaining_picking_type)._compute_default_location_src_id()
+        super(StockPickingType, remaining_picking_type)._compute_default_location_src_id()
 
     def _compute_default_location_dest_id(self):
         repair_picking_type = self.filtered(lambda pt: pt.code == 'repair_operation')
@@ -130,7 +130,7 @@ class PickingType(models.Model):
         prod_locations = {l[0].id: l[1] for l in prod_locations}
         for picking_type in repair_picking_type:
             picking_type.default_location_dest_id = prod_locations.get(picking_type.company_id.id)
-        super(PickingType, (self - repair_picking_type))._compute_default_location_dest_id()
+        super(StockPickingType, (self - repair_picking_type))._compute_default_location_dest_id()
 
     @api.depends('code')
     def _compute_default_product_location_id(self):
@@ -171,7 +171,7 @@ class PickingType(models.Model):
         repair_picking_types = self.filtered(lambda picking: picking.code == 'repair_operation')
         other_picking_types = (self - repair_picking_types)
 
-        records = super(PickingType, other_picking_types)._get_aggregated_records_by_date()
+        records = super(StockPickingType, other_picking_types)._get_aggregated_records_by_date()
         repair_records = self.env['repair.order']._read_group(
             [
                 ('picking_type_id', 'in', repair_picking_types.ids),
@@ -193,8 +193,8 @@ class PickingType(models.Model):
         return self.env['ir.actions.actions']._for_xml_id('repair.action_repair_picking_type_kanban')
 
 
-class Picking(models.Model):
-    _inherit = 'stock.picking'
+class StockPicking(models.Model):
+    _inherit = ['stock.picking']
 
     is_repairable = fields.Boolean(compute='_compute_is_repairable')
     repair_ids = fields.One2many('repair.order', 'picking_id')

--- a/addons/repair/models/stock_traceability.py
+++ b/addons/repair/models/stock_traceability.py
@@ -3,12 +3,12 @@
 from odoo import models, api
 
 
-class MrpStockReport(models.TransientModel):
-    _inherit = 'stock.traceability.report'
+class StockTraceabilityReport(models.TransientModel):
+    _inherit = ['stock.traceability.report']
 
     @api.model
     def _get_reference(self, move_line):
-        res_model, res_id, ref = super(MrpStockReport, self)._get_reference(move_line)
+        res_model, res_id, ref = super()._get_reference(move_line)
         if move_line.move_id.repair_id:
             res_model = 'repair.order'
             res_id = move_line.move_id.repair_id.id
@@ -17,7 +17,7 @@ class MrpStockReport(models.TransientModel):
 
     @api.model
     def _get_linked_move_lines(self, move_line):
-        move_lines, is_used = super(MrpStockReport, self)._get_linked_move_lines(move_line)
+        move_lines, is_used = super()._get_linked_move_lines(move_line)
         if not move_lines:
             move_lines = move_line.move_id.repair_id and move_line.consume_line_ids
         if not is_used:

--- a/addons/repair/models/stock_warehouse.py
+++ b/addons/repair/models/stock_warehouse.py
@@ -6,7 +6,7 @@ from odoo.exceptions import UserError
 
 
 class StockWarehouse(models.Model):
-    _inherit = 'stock.warehouse'
+    _inherit = ['stock.warehouse']
 
     repair_type_id = fields.Many2one('stock.picking.type', 'Repair Operation Type', check_company=True)
     repair_mto_pull_id = fields.Many2one(
