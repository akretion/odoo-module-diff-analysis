PR: https://github.com/odoo/odoo/pull/68857

From: 27538bca036a5c59809c5e77a4eab70889a5ab20
From: Barad Mahendra
Date: 2021-06-24 05:18:14

Breaking data model changes score: 2, change matches:
-    leave_timesheet_project_id = fields.Many2one(
-    leave_timesheet_project_id = fields.Many2one(

Total Changes: 75

[IMP] project,hr(_timesheet)_holidays: usability improvement for project

Purpose of the commit is to improve the usability and onboarding
of the project app.

So in this commit, done the below changes:
 - Rename column "Kanban state" in list view screens
 - Hide column "analytic account" when not needed
 - Do not show "Internal" project

PS: Moved leave_timesheet_project_id into hr_timesheet and rename
it as internal_project_id and we used it in the domain in the
kanban/action to the kanban in order not to have it in the result.

closes odoo/odoo#68857

Taskid: 2451722
Related: odoo/upgrade#2479
Signed-off-by: LTU-Odoo <IT-Ideas@users.noreply.github.com>

================================= pseudo patch: =================================

--- a/addons/project_timesheet_holidays/models/hr_holidays.py
+++ b/addons/project_timesheet_holidays/models/hr_holidays.py
@@ -10,7 +10,7 @@ class HolidaysType(models.Model):
 
     def _default_project_id(self):
         company = self.company_id if self.company_id else self.env.company
-        return company.leave_timesheet_project_id.id
+        return company.internal_project_id.id
 
     def _default_task_id(self):
         company = self.company_id if self.company_id else self.env.company

--- a/addons/project_timesheet_holidays/models/res_company.py
+++ b/addons/project_timesheet_holidays/models/res_company.py
@@ -1,50 +1,44 @@
 # -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
-from odoo import api, fields, models, _
-from odoo.exceptions import ValidationError
+from odoo import fields, models, _
 
 
 class Company(models.Model):
     _inherit = 'res.company'
 
-    leave_timesheet_project_id = fields.Many2one(
-        'project.project', string="Internal Project",
-        help="Default project value for timesheet generated from time off type.")
     leave_timesheet_task_id = fields.Many2one(
         'project.task', string="Time Off Task",
-        domain="[('project_id', '=', leave_timesheet_project_id)]")
-
-    @api.constrains('leave_timesheet_project_id')
-    def _check_leave_timesheet_project_id_company(self):
-        for company in self:
-            if company.leave_timesheet_project_id:
-                if company.leave_timesheet_project_id.sudo().company_id != company:
-                    raise ValidationError(_('The Internal Project of a company should be in that company.'))
+        domain="[('project_id', '=', internal_project_id)]")
 
     def init(self):
         type_ids = [(4, self.env.ref('hr_timesheet.internal_project_default_stage').id)]
-        for company in self.search([('leave_timesheet_project_id', '=', False)]):
+        companies = self.search(['|', ('internal_project_id', '=', False), ('leave_timesheet_task_id', '=', False)])
+        internal_projects_by_company_dict = None
+        Project = self.env['project.project']
+        for company in companies:
             company = company.with_company(company)
-            project = company.env['project.project'].search([
-                ('name', '=', _('Internal')),
-                ('allow_timesheets', '=', True),
-                ('company_id', '=', company.id),
-            ], limit=1)
-            if not project:
-                project = company.env['project.project'].create({
-                    'name': _('Internal'),
-                    'allow_timesheets': True,
-                    'company_id': company.id,
-                    'type_ids': type_ids,
-                })
-            company.write({
-                'leave_timesheet_project_id': project.id,
-            })
+            if not company.internal_project_id:
+                if not internal_projects_by_company_dict:
+                    internal_projects_by_company_read = Project.search_read([
+                        ('name', '=', _('Internal')),
+                        ('allow_timesheets', '=', True),
+                        ('company_id', 'in', companies.ids),
+                    ], ['company_id', 'id'])
+                    internal_projects_by_company_dict = {res['company_id'][0]: res['id'] for res in internal_projects_by_company_read}
+                project_id = internal_projects_by_company_dict.get(company.id, False)
+                if not project_id:
+                    project_id = Project.create({
+                        'name': _('Internal'),
+                        'allow_timesheets': True,
+                        'company_id': company.id,
+                        'type_ids': type_ids,
+                    }).id
+                company.write({'internal_project_id': project_id})
             if not company.leave_timesheet_task_id:
                 task = company.env['project.task'].create({
                     'name': _('Time Off'),
-                    'project_id': company.leave_timesheet_project_id.id,
+                    'project_id': company.internal_project_id.id,
                     'active': True,
                     'company_id': company.id,
                 })
@@ -57,17 +51,14 @@ class Company(models.Model):
         for project in projects:
             company = project.company_id
             company = company.with_company(company)
-            if not company.leave_timesheet_project_id:
-                company.write({
-                    'leave_timesheet_project_id': project.id,
-                })
             if not company.leave_timesheet_task_id:
                 task = company.env['project.task'].sudo().create({
                     'name': _('Time Off'),
-                    'project_id': company.leave_timesheet_project_id.id,
+                    'project_id': company.internal_project_id.id,
                     'active': True,
                     'company_id': company.id,
                 })
                 company.write({
                     'leave_timesheet_task_id': task.id,
                 })
+        return projects

--- a/addons/project_timesheet_holidays/models/res_config_settings.py
+++ b/addons/project_timesheet_holidays/models/res_config_settings.py
@@ -7,19 +7,19 @@ from odoo import api, fields, models
 class ResConfigSettings(models.TransientModel):
     _inherit = 'res.config.settings'
 
-    leave_timesheet_project_id = fields.Many2one(
-        related='company_id.leave_timesheet_project_id', required=True, string="Internal Project",
+    internal_project_id = fields.Many2one(
+        related='company_id.internal_project_id', required=True, string="Internal Project",
         domain="[('company_id', '=', company_id)]", readonly=False)
     leave_timesheet_task_id = fields.Many2one(
         related='company_id.leave_timesheet_task_id', string="Time Off Task", readonly=False,
-        domain="[('company_id', '=', company_id), ('project_id', '=?', leave_timesheet_project_id)]")
+        domain="[('company_id', '=', company_id), ('project_id', '=?', internal_project_id)]")
 
-    @api.onchange('leave_timesheet_project_id')
+    @api.onchange('internal_project_id')
     def _onchange_timesheet_project_id(self):
-        if self.leave_timesheet_project_id != self.leave_timesheet_task_id.project_id:
+        if self.internal_project_id != self.leave_timesheet_task_id.project_id:
             self.leave_timesheet_task_id = False
 
     @api.onchange('leave_timesheet_task_id')
     def _onchange_timesheet_task_id(self):
         if self.leave_timesheet_task_id:
-            self.leave_timesheet_project_id = self.leave_timesheet_task_id.project_id
+            self.internal_project_id = self.leave_timesheet_task_id.project_id
