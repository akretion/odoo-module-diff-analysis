PR: https://github.com/odoo/odoo/pull/104223

From: 77f9ff50db3cdb88397d0b1cc7042c772d0d417b
From: Florian Charlier
Date: 2023-06-30 21:37:50

Structural Changes: 1
Total Changes: 311

[REF] *: use onboarding module

* = account{_payment}, base, onboarding, payment{_stripe},
sale{_management}, web, website_sale

Use the dedicated onboarding module introduced in 16.0 instead of
the res.company model to store onboarding progress.

It allows
 * onboarding steps to be reused across panels
 * to support steps that should be completed per-database or per-company
 * to clean the res.company model from many fields and methods,
 * to remove many views, controllers, actions

Module-specific notes:
* account: We also clean the remaining two steps that are not
part of an accounting panel but make the most sense to be kept here.
* account_payment: Following 8e4e8eb8, the payment provider step is
added to the invoicing onboarding panel. We apply this change here too.
Also impacts the website_sale_dashboard panel (see related ENT PR).
(The "sale tax" one is currently used for to the website sale dashboard).
* payment: Note that the step was already not part of an onboarding
panel within this module.
* website_sale: We clean
  * a field not used (The website_sale dashboard onboarding panel used
  the payment_provider_onboarding_state field).
  * a method that was only called from website_sale_dashboard, so it is
  moved there. See related ENT PR.

Includes a few tests.

Moving views/templates/styling, as well as cleaning residual onboarding-related fields and methods in base, including populate.

This also includes restoring the "onboarding_complete" overlay panel
animating it to disappear after a few seconds so that it doesn't hide
text and block buttons to re-open steps.

Task-3025136

Part-of: odoo/odoo#104223

================================= pseudo patch: =================================

--- a/odoo/addons/base/__manifest__.py
+++ b/odoo/addons/base/__manifest__.py
@@ -72,7 +72,6 @@ The kernel of Odoo, needed for all installation.
         'views/ir_property_views.xml',
         'views/res_config_settings_views.xml',
         'views/report_paperformat_views.xml',
-        'views/onboarding_views.xml',
         'security/ir.model.access.csv',
     ],
     'demo': [

--- a/odoo/addons/base/models/res_company.py
+++ b/odoo/addons/base/models/res_company.py
@@ -68,8 +68,6 @@ class Company(models.Model):
     company_registry = fields.Char(related='partner_id.company_registry', string="Company ID", readonly=False)
     paperformat_id = fields.Many2one('report.paperformat', 'Paper format', default=lambda self: self.env.ref('base.paperformat_euro', raise_if_not_found=False))
     external_report_layout_id = fields.Many2one('ir.ui.view', 'Document Template')
-    base_onboarding_company_state = fields.Selection([
-        ('not_done', "Not done"), ('just_done', "Just done"), ('done', "Done")], string="State of the onboarding company step", default='not_done')
     font = fields.Selection([("Lato", "Lato"), ("Roboto", "Roboto"), ("Open_Sans", "Open Sans"), ("Montserrat", "Montserrat"), ("Oswald", "Oswald"), ("Raleway", "Raleway"), ('Tajawal', 'Tajawal')], default="Lato")
     primary_color = fields.Char()
     secondary_color = fields.Char()
@@ -284,40 +282,6 @@ class Company(models.Model):
             return (self.env['ir.actions.report'].search([('report_name', '=', report_name)], limit=1)
                         .report_action(docids))
 
-    @api.model
-    def action_open_base_onboarding_company(self):
-        """ Onboarding step for company basic information. """
-        action = self.env["ir.actions.actions"]._for_xml_id("base.action_open_base_onboarding_company")
-        action['res_id'] = self.env.company.id
-        return action
-
-    def set_onboarding_step_done(self, step_name):
-        if self[step_name] == 'not_done':
-            self[step_name] = 'just_done'
-
-    def _get_and_update_onboarding_state(self, onboarding_state, steps_states):
-        """ Needed to display onboarding animations only one time. """
-        old_values = {}
-        all_done = True
-        for step_state in steps_states:
-            old_values[step_state] = self[step_state]
-            if self[step_state] == 'just_done':
-                self[step_state] = 'done'
-            all_done = all_done and self[step_state] == 'done'
-
-        if all_done:
-            if self[onboarding_state] == 'not_done':
-                # string `onboarding_state` instead of variable name is not an error
-                old_values['onboarding_state'] = 'just_done'
-            else:
-                old_values['onboarding_state'] = 'done'
-            self[onboarding_state] = 'done'
-        return old_values
-
-    def action_save_onboarding_company_step(self):
-        if bool(self.street):
-            self.set_onboarding_step_done('base_onboarding_company_state')
-
     @api.model
     def _get_main_company(self):
         try:

--- a/odoo/addons/base/populate/res_company.py
+++ b/odoo/addons/base/populate/res_company.py
@@ -29,8 +29,6 @@ class Partner(models.Model):
             ('name', populate.constant('company_{counter}')),
             ('sequence', populate.randint(0, 100)),
             ('company_registry', populate.iterate([False, 'company_registry_{counter}'])),
-            ('base_onboarding_company_state', populate.iterate(
-                [False] + [e[0] for e in type(self).base_onboarding_company_state.selection])),
             ('primary_color', populate.iterate([False, '', '#ff7755'])),
             ('secondary_color', populate.iterate([False, '', '#ffff55'], seed='primary_color')),
             ('currency_id', populate.iterate(active_currencies)),

--- a/odoo/addons/base/static/src/scss/onboarding.scss
+++ b/None
@@ -1,136 +0,0 @@
-// = Onboarding Panel
-// ============================================================================
-$o-onboarding-step-width: map-get($container-max-widths, 'lg') / 4 !default;
-
-
-.o_onboarding_main {
-    background-color: $o-onboarding-main-bg;
-
-    .o_onboarding_wrap {
-        overflow-x: auto;
-    }
-
-    .o_onboarding_completed_message {
-        box-shadow: 0 -7px 20px -5px rgba(#000, 0.3);
-        animation: o_onboarding_slideInUp $o-onboarding-base-time ease-out;
-    }
-
-    // = Step Design
-    // ------------------------------------------------------------------------
-    .o_onboarding_step {
-        flex: 1 1 0;
-
-        @for $i from 1 through 5 {
-            &.o_onboarding_step__todo:nth-child(#{$i}) {
-                @include print-variable('o-onboarding-animation-delay', $i * .15s);
-            }
-        }
-
-        &:first-child, &:last-child {
-            .o_onboarding_line {
-                width: $o-onboarding-line-width / 2 ;
-            }
-        }
-
-        &:first-child {
-            .o_onboarding_line {
-                margin-left: $o-onboarding-line-width / 2;
-            }
-        }
-
-        &:last-child {
-            .o_onboarding_line {
-                margin-right: $o-onboarding-line-width / 2;
-            }
-        }
-
-        .o_onboarding_line {
-            background: linear-gradient(to right, $o-onboarding-color-orange 0%, $o-onboarding-color-blue 100%);
-            height: $o-onboarding-line-height;
-            width: $o-onboarding-line-width;
-            top: $o-onboarding-image-size / 2;
-            background-attachment: fixed;
-        }
-
-        .o_onboarding_step_content {
-            width: $o-onboarding-step-width;
-        }
-
-        .o_onboarding_step_side img {            
-            width: $o-onboarding-image-size;
-            height: $o-onboarding-image-size;
-        }
-
-        .o_onboarding_step_action {
-            min-width: $o-onboarding-step-width * .5;
-            border: $border-width solid #{$o-onboarding-color-blue};
-            color: $o-onboarding-color-blue;
-        }
-
-        .o_onboarding_step_action__done {
-            i {
-                background-color: $o-onboarding-color-orange;
-                color: #FFF;
-            }
-        }
-
-        // = "To do" Step Design
-        // --------------------------------------------------------------------
-        &[data-step-state="not_done"] {
-            .o_onboarding_step_content_info {
-                animation: o_onboarding_zoomIn ($o-onboarding-base-time * 1.5) both;
-                animation-delay: var(--o-onboarding-animation-delay, 0);
-            }
-
-            .o_onboarding_step_action {
-                animation: o_onboarding_slideInUp ($o-onboarding-base-time * 2) both;
-                animation-delay: var(--o-onboarding-animation-delay, 0);
-            }
-        }
-
-        // = "Just Done" Step Design
-        // --------------------------------------------------------------------
-        &[data-step-state="just_done"] {
-            .o_onboarding_step_content_info {
-                animation: o_onboarding_fadeIn ($o-onboarding-base-time * 3);
-            }
-
-            .o_onboarding_step_action__done {
-                animation: bounceIn ($o-onboarding-base-time * 2);
-            }
-
-            .o_onboarding_confetti {
-                animation: o_onboarding_fadeInOut ($o-onboarding-base-time * 3) ease 0s 1 forwards;
-            }
-        }
-    }
-
-    // = Animations
-    // ------------------------------------------------------------------------
-    @keyframes o_onboarding_slideInUp {
-        from {
-            transform: translate3d(0, 20%, 0);
-            opacity: 0;
-        }
-    }
-
-    @keyframes o_onboarding_zoomIn {
-        from {
-            transform: scale3d(0.8, 0.8, 0.8);
-            opacity: 0;
-        }
-        50% {
-            opacity: 1;
-        }
-    }
-
-    @keyframes o_onboarding_fadeIn {
-        10%, 66% { opacity: 0; }
-        0%, 100% { opacity: 1; }
-    }
-
-    @keyframes o_onboarding_fadeInOut {
-        10%, 66% { opacity: 1; }
-        0%, 100% { opacity: 0; }
-    }
-}

--- a/odoo/addons/base/static/src/scss/onboarding.variables.dark.scss
+++ b/None
@@ -1,7 +0,0 @@
-// = Onboarding Colors
-// ============================================================================
-// No CSS hacks, variables overrides only
-
-$o-onboarding-main-bg: $o-gray-100 !default;
-$o-onboarding-color-blue: #516db3 !default;
-$o-onboarding-color-orange: #c67c7a !default;

--- a/odoo/addons/base/static/src/scss/onboarding.variables.scss
+++ b/None
@@ -1,7 +0,0 @@
-$o-onboarding-base-time: 0.5s !default;
-$o-onboarding-image-size: 64px !default;
-$o-onboarding-line-height: 2px !default;
-$o-onboarding-line-width: 100% !default;
-$o-onboarding-main-bg: $o-gray-200 !default;
-$o-onboarding-color-blue: #374874 !default;
-$o-onboarding-color-orange: #F39D9B !default;

--- a/odoo/addons/base/views/onboarding_views.xml
+++ b/None
@@ -1,122 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<odoo>
-    <template id="onboarding_container">
-        <div class="modal o_onboarding_modal o_technical_modal" tabindex="-1" role="dialog">
-            <div class="modal-dialog" role="document">
-                <div class="modal-content">
-                    <div class="modal-header">
-                        <h5 class="modal-title">Onboarding Tips</h5>
-                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"/>
-                    </div>
-                    <div class="modal-body">
-                        <p>Are you sure you want to hide these onboarding tips?</p>
-                    </div>
-                    <div class="modal-footer justify-content-start">
-                        <a type="action" class="btn btn-primary" data-bs-dismiss="modal"
-                        data-o-hide-banner="true"
-                        t-att-data-model="close_model" t-att-data-method="close_method">
-                            Remove
-                        </a>
-                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
-                    </div>
-                </div>
-            </div>
-        </div>
-
-        <div class="o_onboarding_container collapse show">
-            <div class="o_onboarding_main position-relative border-bottom overflow-hidden">
-                <div class="o_onboarding_wrap py-3">
-                    <a href="#" data-bs-toggle="modal" data-bs-target=".o_onboarding_modal" class="o_onboarding_btn_close position-absolute top-0 end-0 py-2 px-3 h2 z-index-1" title="Close the onboarding panel"><i class="oi oi-close"/></a>
-                    <div class="o_onboarding_steps d-flex" t-out="0"/>
-
-
-                    <div t-if="state.get('onboarding_state') in ('done', 'just_done')"
-                         t-att-state="state.get('onboarding_state')"
-                         class="o_onboarding_completed_message position-absolute end-0 bottom-0 start-0 border-bottom py-4 bg-white d-flex align-items-center justify-content-center">
-                        <span class="h3 m-0">
-                            <i class="fa fa-check text-success me-3" />
-                            <t t-if="text_completed" t-out="text_completed" />
-                            <t t-else="">Nice work! Your configuration is done.</t>
-                        </span>
-                        <a type="action" class="btn btn-primary ms-4" data-bs-toggle="collapse" href=".o_onboarding_container" t-att-data-model="close_model" t-att-data-method="close_method">
-                            Close
-                        </a>
-                    </div>
-                </div>
-            </div>
-        </div>
-    </template>
-
-    <template id="onboarding_step">
-        <div class="o_onboarding_step position-relative d-flex flex-column align-items-center justify-content-start text-center" t-att-data-step-state="state">
-            <img t-if="state == 'just_done'" class="o_onboarding_confetti position-absolute w-100" src="/base/static/img/onboarding_confetti.svg" alt="o_onboarding_confetti"/>
-
-            <div class="o_onboarding_line position-absolute"/>
-            <div class="o_onboarding_step_side d-flex">
-                <img class="z-index-1" t-attf-src="#{image}" t-attf-alt="#{alt}"/>
-            </div>
-
-            <div class="o_onboarding_step_content position-relative pt-2 flex-grow-1 d-flex flex-column align-items-center justify-content-around">
-                <div class="o_onboarding_step_content_info flex-grow-1 mb-2">
-                    <a type="action" data-reload-on-close="true" role="button" t-att-data-method="method" t-att-data-model="model">
-                        <h5 class="o_onboarding_step_title mb-1" t-out="title"/>
-                    </a>
-                    <p class="m-0 small" t-out="description"/>
-                </div>
-                <a t-if="state == 'not_done'" class="o_onboarding_step_action btn px-4" type="action" data-reload-on-close="true" role="button" t-att-data-method="method" t-att-data-model="model">
-                    <span>
-                        <t t-if="btn_text" t-out="btn_text" />
-                        <t t-else="">Let's do it</t>
-                    </span>
-                </a>
-                <a t-else="" class="o_onboarding_step_action__done btn" type="action" data-reload-on-close="true" role="button" t-att-data-method="method" t-att-data-model="model">
-                    <span>
-                        <i t-attf-class="p-1 me-1 fa #{done_icon if done_icon else 'fa-check'} rounded-circle" />
-                        <t t-if="done_text" t-out="done_text" />
-                        <t t-else="">All done!</t>
-                    </span>
-                </a>
-            </div>
-        </div>
-    </template>
-
-    <!-- ONBOARDING STEPS -->
-    <template id="onboarding_company_step">
-        <t t-call="base.onboarding_step">
-            <t t-set="title">Company Data</t>
-            <t t-set="description">
-                Set your company's data for documents header/footer.
-            </t>
-            <t t-set="image" t-value="'/base/static/img/onboarding_company-data.png'"/>
-            <t t-set="alt" t-value="'Onboarding Company Data'"/>
-            <t t-set="btn_text">Let's start!</t>
-            <t t-set="method" t-value="'action_open_base_onboarding_company'" />
-            <t t-set="model" t-value="'res.company'" />
-            <t t-set="state" t-value="state.get('base_onboarding_company_state')" />
-        </t>
-    </template>
-    <!-- COMPANY FORM -->
-    <record id="base_onboarding_company_form" model="ir.ui.view">
-        <field name="name">base.company.onboarding.form</field>
-        <field name="model">res.company</field>
-        <field name="inherit_id" ref="base.view_company_form" />
-        <field name="mode">primary</field>
-        <field name="priority">1000</field>
-        <field name="arch" type="xml">
-            <xpath expr="//group[@name='social_media']" position="replace" />
-            <form position="inside">
-                <footer position="replace">
-                    <button name="action_save_onboarding_company_step" class="btn btn-primary" type="object" string="Apply" data-hotkey="q"/>
-                    <button special="cancel" data-hotkey="z" string="Cancel" />
-                </footer>
-            </form>
-        </field>
-    </record>
-    <record id="action_open_base_onboarding_company" model="ir.actions.act_window">
-        <field name="name">Set your company data</field>
-        <field name="res_model">res.company</field>
-        <field name="view_mode">form</field>
-        <field name="view_id" ref="base_onboarding_company_form" />
-        <field name="target">new</field>
-    </record>
-</odoo>
