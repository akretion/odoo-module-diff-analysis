PR: https://github.com/odoo/odoo/pull/159897

From: 5cec08e8553754ea44803ac64ef9312ddbf43687
From: Benoit Socias
Date: 2025-02-14 17:53:11

Breaking data model changes scores: del:10 + add:0, change matches:
-    header_overlay = fields.Boolean()
-    header_color = fields.Char()
-    header_text_color = fields.Char()
-    header_visible = fields.Boolean(default=True)
-    footer_visible = fields.Boolean(default=True)
-    header_overlay = fields.Boolean()
-    header_color = fields.Char()
-    header_text_color = fields.Char()
-    header_visible = fields.Boolean(default=True)
-    footer_visible = fields.Boolean(default=True)

Total Changes: 36

[IMP] website, *: allow to hide header/footer on blog posts and events

*: website_blog, website_event

This commit introduces the `WebsitePageOptionsMixin` for blog posts and
events. It enables the specification of the "Header Position" for
specific records. Right now, the "over the content" option will be
disabled though as the layout of events and blog posts might not fit
that possibility well (to reconsider later).

As a bonus, the footer's "Page Visibility" also becomes configurable
for those records.

task-3430319

closes odoo/odoo#159897

Signed-off-by: Quentin Smetz (qsm) <qsm@odoo.com>
Co-authored-by: qsm-odoo <qsm@odoo.com>

================================= pseudo patch: =================================

--- a/addons/website/models/mixins.py
+++ b/addons/website/models/mixins.py
@@ -153,6 +153,24 @@ class WebsiteCover_PropertiesMixin(models.AbstractModel):
         return True
 
 
+class WebsitePageVisibilityOptionsMixin(models.AbstractModel):
+    _name = 'website.page_visibility_options.mixin'
+    _description = "Website page/record specific visibility options"
+
+    header_visible = fields.Boolean(default=True)
+    footer_visible = fields.Boolean(default=True)
+
+
+class WebsitePageOptionsMixin(models.AbstractModel):
+    _name = 'website.page_options.mixin'
+    _inherit = ['website.page_visibility_options.mixin']
+    _description = "Website page/record specific options"
+
+    header_overlay = fields.Boolean()
+    header_color = fields.Char()
+    header_text_color = fields.Char()
+
+
 class WebsiteMultiMixin(models.AbstractModel):
     _name = 'website.multi.mixin'
 

--- a/addons/website/models/theme_models.py
+++ b/addons/website/models/theme_models.py
@@ -176,6 +176,9 @@ class ThemeWebsiteMenu(models.Model):
 class ThemeWebsitePage(models.Model):
     _name = 'theme.website.page'
     _description = 'Website Theme Page'
+    _inherit = [
+        'website.page_options.mixin',
+    ]
 
     url = fields.Char()
     view_id = fields.Many2one('theme.ir.ui.view', required=True, ondelete="cascade")
@@ -183,13 +186,6 @@ class ThemeWebsitePage(models.Model):
     is_published = fields.Boolean()
     is_new_page_template = fields.Boolean(string="New Page Template")
 
-    # Page options
-    header_overlay = fields.Boolean()
-    header_color = fields.Char()
-    header_text_color = fields.Char()
-    header_visible = fields.Boolean(default=True)
-    footer_visible = fields.Boolean(default=True)
-
     copy_ids = fields.One2many('website.page', 'theme_template_id', 'Page using a copy of me', copy=False, readonly=True)
 
     def _convert_to_base_model(self, website, **kwargs):

--- a/addons/website/models/website_page.py
+++ b/addons/website/models/website_page.py
@@ -15,6 +15,7 @@ class WebsitePage(models.Model):
     _inherit = [
         'website.published.multi.mixin',
         'website.searchable.mixin',
+        'website.page_options.mixin',
     ]
     _description = 'Page'
     _order = 'website_id'
@@ -29,13 +30,6 @@ class WebsitePage(models.Model):
     is_visible = fields.Boolean(compute='_compute_visible', string='Is Visible')
     is_new_page_template = fields.Boolean(string="New Page Template", help='Add this page to the "+New" page templates. It will be added to the "Custom" category.')
 
-    # Page options
-    header_overlay = fields.Boolean()
-    header_color = fields.Char()
-    header_text_color = fields.Char()
-    header_visible = fields.Boolean(default=True)
-    footer_visible = fields.Boolean(default=True)
-
     # don't use mixin website_id but use website_id on ir.ui.view instead
     website_id = fields.Many2one(related='view_id.website_id', store=True, readonly=False, ondelete='cascade')
     arch = fields.Text(related='view_id.arch', readonly=False, depends_context=('website_id',))
