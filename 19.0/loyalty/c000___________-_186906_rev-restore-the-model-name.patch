PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:3 + add:0, change matches:
-    _inherit = ['product.product']
-    _inherit = ['product.template']
-    _inherit = ['res.partner']

Total Changes: 12

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/loyalty/models/loyalty_card.py
+++ b/addons/loyalty/models/loyalty_card.py
@@ -8,6 +8,7 @@ from odoo.tools import format_amount
 
 
 class LoyaltyCard(models.Model):
+    _name = 'loyalty.card'
     _inherit = ['mail.thread']
     _description = 'Loyalty Coupon'
     _rec_name = 'code'

--- a/addons/loyalty/models/loyalty_history.py
+++ b/addons/loyalty/models/loyalty_history.py
@@ -4,6 +4,7 @@ from odoo import fields, models
 
 
 class LoyaltyHistory(models.Model):
+    _name = 'loyalty.history'
     _description = "History for Loyalty cards and Ewallets"
     _order = 'id desc'
 

--- a/addons/loyalty/models/loyalty_mail.py
+++ b/addons/loyalty/models/loyalty_mail.py
@@ -8,6 +8,7 @@ from odoo import fields, models
 
 
 class LoyaltyMail(models.Model):
+    _name = 'loyalty.mail'
     _description = 'Loyalty Communication'
 
     active = fields.Boolean(default=True)

--- a/addons/loyalty/models/loyalty_program.py
+++ b/addons/loyalty/models/loyalty_program.py
@@ -8,6 +8,7 @@ from odoo.exceptions import UserError, ValidationError
 
 
 class LoyaltyProgram(models.Model):
+    _name = 'loyalty.program'
     _description = 'Loyalty Program'
     _order = 'sequence'
     _rec_name = 'name'

--- a/addons/loyalty/models/loyalty_reward.py
+++ b/addons/loyalty/models/loyalty_reward.py
@@ -9,6 +9,7 @@ from odoo.osv import expression
 
 
 class LoyaltyReward(models.Model):
+    _name = 'loyalty.reward'
     _description = 'Loyalty Reward'
     _rec_name = 'description'
     _order = 'required_points asc'

--- a/addons/loyalty/models/loyalty_rule.py
+++ b/addons/loyalty/models/loyalty_rule.py
@@ -8,6 +8,7 @@ from odoo.osv import expression
 
 
 class LoyaltyRule(models.Model):
+    _name = 'loyalty.rule'
     _description = 'Loyalty Rule'
 
     @api.model

--- a/addons/loyalty/models/product_product.py
+++ b/addons/loyalty/models/product_product.py
@@ -5,7 +5,7 @@ from odoo.exceptions import UserError, ValidationError
 
 
 class ProductProduct(models.Model):
-    _inherit = ['product.product']
+    _inherit = 'product.product'
 
     def write(self, vals):
         if not vals.get('active', True) and any(product.active for product in self):

--- a/addons/loyalty/models/product_template.py
+++ b/addons/loyalty/models/product_template.py
@@ -5,7 +5,7 @@ from odoo.exceptions import UserError
 
 
 class ProductTemplate(models.Model):
-    _inherit = ['product.template']
+    _inherit = 'product.template'
 
     @api.ondelete(at_uninstall=False)
     def _unlink_except_loyalty_products(self):

--- a/addons/loyalty/models/res_partner.py
+++ b/addons/loyalty/models/res_partner.py
@@ -4,7 +4,7 @@ from odoo import fields, models
 
 
 class ResPartner(models.Model):
-    _inherit = ['res.partner']
+    _inherit = 'res.partner'
 
     loyalty_card_count = fields.Integer(
         string="Active loyalty cards",
