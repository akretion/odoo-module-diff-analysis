PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:5 + add:0, change matches:
-    _inherit = ['account.analytic.account']
-    _inherit = ['digest.digest']
-    _inherit = ['ir.ui.menu']
-    _inherit = ['mail.message']
-    _inherit = ['res.config.settings']

Total Changes: 19

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/project/models/account_analytic_account.py
+++ b/addons/project/models/account_analytic_account.py
@@ -6,7 +6,7 @@ from odoo.exceptions import UserError
 
 
 class AccountAnalyticAccount(models.Model):
-    _inherit = ['account.analytic.account']
+    _inherit = 'account.analytic.account'
     _description = 'Analytic Account'
 
     project_ids = fields.One2many('project.project', 'account_id', string='Projects', export_string_translation=False)

--- a/addons/project/models/digest_digest.py
+++ b/addons/project/models/digest_digest.py
@@ -6,7 +6,7 @@ from odoo.exceptions import AccessError
 
 
 class DigestDigest(models.Model):
-    _inherit = ['digest.digest']
+    _inherit = 'digest.digest'
 
     kpi_project_task_opened = fields.Boolean('Open Tasks')
     kpi_project_task_opened_value = fields.Integer(compute='_compute_project_task_opened_value', export_string_translation=False)

--- a/addons/project/models/ir_ui_menu.py
+++ b/addons/project/models/ir_ui_menu.py
@@ -5,7 +5,7 @@ from odoo import models
 
 
 class IrUiMenu(models.Model):
-    _inherit = ['ir.ui.menu']
+    _inherit = 'ir.ui.menu'
 
     def _load_menus_blacklist(self):
         res = super()._load_menus_blacklist()

--- a/addons/project/models/mail_message.py
+++ b/addons/project/models/mail_message.py
@@ -5,7 +5,7 @@ from odoo.tools.sql import create_index
 
 
 class MailMessage(models.Model):
-    _inherit = ['mail.message']
+    _inherit = 'mail.message'
 
     def init(self):
         super().init()

--- a/addons/project/models/project_collaborator.py
+++ b/addons/project/models/project_collaborator.py
@@ -4,6 +4,7 @@ from odoo import api, fields, models
 
 
 class ProjectCollaborator(models.Model):
+    _name = 'project.collaborator'
     _description = 'Collaborators in project shared'
 
     project_id = fields.Many2one('project.project', 'Project Shared', domain=[('privacy_visibility', '=', 'portal')], required=True, readonly=True, export_string_translation=False)

--- a/addons/project/models/project_milestone.py
+++ b/addons/project/models/project_milestone.py
@@ -10,6 +10,7 @@ from .project_task import CLOSED_STATES
 
 
 class ProjectMilestone(models.Model):
+    _name = 'project.milestone'
     _description = "Project Milestone"
     _inherit = ['mail.thread']
     _order = 'sequence, deadline, is_reached desc, name'

--- a/addons/project/models/project_project.py
+++ b/addons/project/models/project_project.py
@@ -17,6 +17,7 @@ from .project_task import CLOSED_STATES
 
 
 class ProjectProject(models.Model):
+    _name = 'project.project'
     _description = "Project"
     _inherit = [
         'portal.mixin',

--- a/addons/project/models/project_project_stage.py
+++ b/addons/project/models/project_project_stage.py
@@ -6,6 +6,7 @@ from odoo.exceptions import UserError
 
 
 class ProjectProjectStage(models.Model):
+    _name = 'project.project.stage'
     _description = 'Project Stage'
     _order = 'sequence, id'
 

--- a/addons/project/models/project_task.py
+++ b/addons/project/models/project_task.py
@@ -80,6 +80,7 @@ CLOSED_STATES = {
 
 
 class ProjectTask(models.Model):
+    _name = 'project.task'
     _description = "Task"
     _date_name = "date_assign"
     _inherit = [

--- a/addons/project/models/project_task_recurrence.py
+++ b/addons/project/models/project_task_recurrence.py
@@ -8,6 +8,7 @@ from dateutil.relativedelta import relativedelta
 
 
 class ProjectTaskRecurrence(models.Model):
+    _name = 'project.task.recurrence'
     _description = 'Task Recurrence'
 
     task_ids = fields.One2many('project.task', 'recurrence_id', copy=False)

--- a/addons/project/models/project_task_stage_personal.py
+++ b/addons/project/models/project_task_stage_personal.py
@@ -5,6 +5,7 @@ from odoo import fields, models
 
 
 class ProjectTaskStagePersonal(models.Model):
+    _name = 'project.task.stage.personal'
     _description = 'Personal Task Stage'
     _table = 'project_task_user_rel'
     _rec_name = 'stage_id'

--- a/addons/project/models/project_task_type.py
+++ b/addons/project/models/project_task_type.py
@@ -8,6 +8,7 @@ from odoo.exceptions import UserError
 
 
 class ProjectTaskType(models.Model):
+    _name = 'project.task.type'
     _description = 'Task Stage'
     _order = 'sequence, id'
 

--- a/addons/project/models/project_update.py
+++ b/addons/project/models/project_update.py
@@ -22,6 +22,7 @@ STATUS_COLOR = {
 
 
 class ProjectUpdate(models.Model):
+    _name = 'project.update'
     _description = 'Project Update'
     _order = 'id desc'
     _inherit = ['mail.thread.cc', 'mail.activity.mixin']

--- a/addons/project/models/res_config_settings.py
+++ b/addons/project/models/res_config_settings.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = ['res.config.settings']
+    _inherit = 'res.config.settings'
 
     module_hr_timesheet = fields.Boolean(string="Task Logs")
     group_project_rating = fields.Boolean("Customer Ratings", implied_group='project.group_project_rating')
