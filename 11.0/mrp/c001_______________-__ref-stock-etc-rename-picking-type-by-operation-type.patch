PR: https://github.com/odoo/odoo/pull/

From: 5c837dec2aa913e38f974a8d6c742199bda490ea
From: Dhaval Panchal
Date: 2017-02-17 12:21:58

Structural Changes: 3
Total Changes: 12

[REF] stock, etc: rename picking type by operation type

As picking types aren't always used in a picking context, and picking
aren't really meanigful for a lot of people, we rename this concept as
"operation type" in views and in the planner.

================================= pseudo patch: =================================

--- a/addons/mrp/models/mrp_bom.py
+++ b/addons/mrp/models/mrp_bom.py
@@ -52,9 +52,9 @@ class MrpBom(models.Model):
         ('asap', 'The components of 1st operation')], string='Manufacturing Readiness',
         default='asap', required=True)
     picking_type_id = fields.Many2one(
-        'stock.picking.type', 'Picking Type', domain=[('code', '=', 'mrp_operation')],
-        help="When a procurement has a ‘produce’ route with a picking type set, it will try to create "
-             "a Manufacturing Order for that product using a BoM of the same picking type. That allows "
+        'stock.picking.type', 'Operation Type', domain=[('code', '=', 'mrp_operation')],
+        help="When a procurement has a ‘produce’ route with a operation type set, it will try to create "
+             "a Manufacturing Order for that product using a BoM of the same operation type. That allows "
              "to define procurement rules which trigger different manufacturing orders with different BoMs. ")
     company_id = fields.Many2one(
         'res.company', 'Company',

--- a/addons/mrp/models/mrp_production.py
+++ b/addons/mrp/models/mrp_production.py
@@ -64,7 +64,7 @@ class MrpProduction(models.Model):
         oldname='product_uom', readonly=True, required=True,
         states={'confirmed': [('readonly', False)]})
     picking_type_id = fields.Many2one(
-        'stock.picking.type', 'Picking Type',
+        'stock.picking.type', 'Operation Type',
         default=_get_default_picking_type, required=True)
     location_src_id = fields.Many2one(
         'stock.location', 'Raw Materials Location',

--- a/addons/mrp/models/stock_move.py
+++ b/addons/mrp/models/stock_move.py
@@ -282,7 +282,7 @@ class StockMove(models.Model):
         self.ensure_one()
         view = self.env.ref('mrp.view_stock_move_lots')
         serial = (self.has_tracking == 'serial')
-        only_create = False  # Check picking type in theory
+        only_create = False  # Check operation type in theory
         show_reserved = any([x for x in self.move_lot_ids if x.quantity > 0.0])
         ctx.update({
             'serial': serial,

--- a/addons/mrp/models/stock_warehouse.py
+++ b/addons/mrp/models/stock_warehouse.py
@@ -13,7 +13,7 @@ class StockWarehouse(models.Model):
     manufacture_pull_id = fields.Many2one(
         'procurement.rule', 'Manufacture Rule')
     manu_type_id = fields.Many2one(
-        'stock.picking.type', 'Manufacturing Picking Type',
+        'stock.picking.type', 'Manufacturing Operation Type',
         domain=[('code', '=', 'mrp_operation')])
 
     def create_sequences_and_picking_types(self):
