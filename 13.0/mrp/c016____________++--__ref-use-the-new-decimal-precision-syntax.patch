PR: https://github.com/odoo/odoo/pull/

From: 9d710df076b85ebe0f3db4491676f005c31631fe
From: Mitali Patel
Date: 2019-07-03 11:16:24

Structural Changes: 11
Total Changes: 27

[REF] *: use the new decimal precision syntax

Since previous commit moved decimal_precision module's feature into base,
use the new syntax for fields declaration
Remove the imports to the removed module
Remove the module from dependency in manifest

sed -i "s|digits=dp.get_precision('\([A-Z a-z]*\)')|digits='\1'|" **.py
sed -i "/from odoo.tools import decimal_precision as dp/d" **py

================================= pseudo patch: =================================

--- a/addons/mrp/models/mrp_abstract_workorder.py
+++ b/addons/mrp/models/mrp_abstract_workorder.py
@@ -4,7 +4,6 @@
 from collections import defaultdict
 
 from odoo import api, fields, models, _
-from odoo.addons import decimal_precision as dp
 from odoo.exceptions import UserError
 from odoo.tools import float_compare, float_round, float_is_zero
 
@@ -15,7 +14,7 @@ class MrpAbstractWorkorder(models.AbstractModel):
 
     production_id = fields.Many2one('mrp.production', 'Manufacturing Order', required=True)
     product_id = fields.Many2one(related='production_id.product_id', readonly=True, store=True)
-    qty_producing = fields.Float(string='Currently Produced Quantity', digits=dp.get_precision('Product Unit of Measure'))
+    qty_producing = fields.Float(string='Currently Produced Quantity', digits='Product Unit of Measure')
     product_uom_id = fields.Many2one('uom.uom', 'Unit of Measure', required=True, readonly=True)
     finished_lot_id = fields.Many2one('stock.production.lot', string='Lot/Serial Number', domain="[('product_id', '=', product_id)]", oldname='final_lot_id')
     product_tracking = fields.Selection(related="product_id.tracking")
@@ -306,10 +305,10 @@ class MrpAbstractWorkorderLine(models.AbstractModel):
     product_id = fields.Many2one('product.product', 'Product', required=True)
     product_tracking = fields.Selection(related="product_id.tracking")
     lot_id = fields.Many2one('stock.production.lot', 'Lot/Serial Number')
-    qty_to_consume = fields.Float('To Consume', digits=dp.get_precision('Product Unit of Measure'))
+    qty_to_consume = fields.Float('To Consume', digits='Product Unit of Measure')
     product_uom_id = fields.Many2one('uom.uom', string='Unit of Measure')
-    qty_done = fields.Float('Consumed', digits=dp.get_precision('Product Unit of Measure'))
-    qty_reserved = fields.Float('Reserved', digits=dp.get_precision('Product Unit of Measure'))
+    qty_done = fields.Float('Consumed', digits='Product Unit of Measure')
+    qty_reserved = fields.Float('Reserved', digits='Product Unit of Measure')
 
     @api.onchange('lot_id')
     def _onchange_lot_id(self):

--- a/addons/mrp/models/mrp_bom.py
+++ b/addons/mrp/models/mrp_bom.py
@@ -2,7 +2,6 @@
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
 from odoo import api, fields, models, _
-from odoo.addons import decimal_precision as dp
 from odoo.exceptions import UserError, ValidationError
 from odoo.tools import float_round
 
@@ -39,7 +38,7 @@ class MrpBom(models.Model):
     byproduct_ids = fields.One2many('mrp.bom.byproduct', 'bom_id', 'By-products', copy=True)
     product_qty = fields.Float(
         'Quantity', default=1.0,
-        digits=dp.get_precision('Unit of Measure'), required=True)
+        digits='Unit of Measure', required=True)
     product_uom_id = fields.Many2one(
         'uom.uom', 'Product Unit of Measure',
         default=_get_default_product_uom_id, oldname='product_uom', required=True,
@@ -229,7 +228,7 @@ class MrpBomLine(models.Model):
     product_tmpl_id = fields.Many2one('product.template', 'Product Template', related='product_id.product_tmpl_id', readonly=False)
     product_qty = fields.Float(
         'Quantity', default=1.0,
-        digits=dp.get_precision('Product Unit of Measure'), required=True)
+        digits='Product Unit of Measure', required=True)
     product_uom_id = fields.Many2one(
         'uom.uom', 'Product Unit of Measure',
         default=_get_default_product_uom_id,
@@ -369,7 +368,7 @@ class MrpByProduct(models.Model):
     product_id = fields.Many2one('product.product', 'By-product', required=True)
     product_qty = fields.Float(
         'Quantity',
-        default=1.0, digits=dp.get_precision('Product Unit of Measure'), required=True)
+        default=1.0, digits='Product Unit of Measure', required=True)
     product_uom_id = fields.Many2one('uom.uom', 'Unit of Measure', required=True)
     bom_id = fields.Many2one('mrp.bom', 'BoM', ondelete='cascade')
     operation_id = fields.Many2one('mrp.routing.workcenter', 'Produced in Operation')

--- a/addons/mrp/models/mrp_production.py
+++ b/addons/mrp/models/mrp_production.py
@@ -5,7 +5,6 @@ import datetime
 from itertools import groupby
 
 from odoo import api, fields, models, _
-from odoo.addons import decimal_precision as dp
 from odoo.exceptions import AccessError, UserError
 from odoo.tools import date_utils, float_round, float_is_zero
 
@@ -65,7 +64,7 @@ class MrpProduction(models.Model):
     product_tmpl_id = fields.Many2one('product.template', 'Product Template', related='product_id.product_tmpl_id')
     product_qty = fields.Float(
         'Quantity To Produce',
-        default=1.0, digits=dp.get_precision('Product Unit of Measure'),
+        default=1.0, digits='Product Unit of Measure',
         readonly=True, required=True, tracking=True,
         states={'draft': [('readonly', False)]})
     product_uom_id = fields.Many2one(

--- a/addons/mrp/models/mrp_workorder.py
+++ b/addons/mrp/models/mrp_workorder.py
@@ -8,7 +8,6 @@ from collections import defaultdict
 from odoo import api, fields, models, _
 from odoo.exceptions import UserError
 from odoo.tools import float_compare, float_round
-from odoo.addons import decimal_precision as dp
 
 
 class MrpWorkorder(models.Model):
@@ -34,11 +33,11 @@ class MrpWorkorder(models.Model):
         related='production_id.state',
         help='Technical: used in views only.')
     qty_production = fields.Float('Original Production Quantity', readonly=True, related='production_id.product_qty')
-    qty_remaining = fields.Float('Quantity To Be Produced', compute='_compute_qty_remaining', digits=dp.get_precision('Product Unit of Measure'))
+    qty_remaining = fields.Float('Quantity To Be Produced', compute='_compute_qty_remaining', digits='Product Unit of Measure')
     qty_produced = fields.Float(
         'Quantity', default=0.0,
         readonly=True,
-        digits=dp.get_precision('Product Unit of Measure'),
+        digits='Product Unit of Measure',
         help="The number of products already handled by this work order")
     is_produced = fields.Boolean(string="Has Been Produced",
         compute='_compute_is_produced')

--- a/addons/mrp/models/stock_move.py
+++ b/addons/mrp/models/stock_move.py
@@ -4,7 +4,6 @@
 from odoo import api, exceptions, fields, models, _
 from odoo.exceptions import UserError
 from odoo.tools import float_compare, float_round
-from odoo.addons import decimal_precision as dp
 
 
 class StockMoveLine(models.Model):
@@ -14,7 +13,7 @@ class StockMoveLine(models.Model):
     production_id = fields.Many2one('mrp.production', 'Production Order')
     lot_produced_ids = fields.Many2many('stock.production.lot', string='Finished Lot/Serial Number')
     lot_produced_qty = fields.Float(
-        'Quantity Finished Product', digits=dp.get_precision('Product Unit of Measure'),
+        'Quantity Finished Product', digits='Product Unit of Measure',
         help="Informative, not used in matching")
     done_move = fields.Boolean('Move Done', related='move_id.is_done', readonly=False, store=True)  # TDE FIXME: naming
 
