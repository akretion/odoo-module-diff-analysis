PR: https://github.com/odoo/odoo/pull/

From: 3e97cff7797c4f7e695d20def6b920561b6a6525
From: Lucas Lef√®vre
Date: 2019-08-01 10:42:03

Structural Changes: 8
Total Changes: 8

[IMP] base: Remove customer and supplier fields from res.partner

Purpose
=======

Fields `customer` and `supplier` on `res.partner`
are mostly used in domains of many2x fields.

Those domains can confuse end users because they don't
see the partner they are looking for; and it's not obvious why.

Some identified problems:

1. It can lead to duplicated partners: the user does not find
   the partner, so he creates a new one.

2. The user imports supplier contacts in the Contacts app, so they
   don't get the `supplier` flag. Then the user wants to make a purchase order,
   and cannot find the new suppliers in the list

3. A user removes the customer flag on a prospect, because they don't think
   it's a customer yet - except now they can't make a quote for that customer...

Specification
=============

Remove the two mentioned fields.

Since fields `customer` and `supplier` have been removed, all partners
are now shown in many2one dropdowns.

But in some cases, not all partners are relevant or some are more likely
to be relevant than others. e.g. when creating a PO, top suppliers have a
higher priority than other partners.

So, adapt the places where those fields were used with the new mechanism to
display the searched the partners, according to the number purchase/sales
orders they made.

TaskID: 2031147

Co-authored-by: Yannick Tivisse <yti@odoo.com>

================================= pseudo patch: =================================

--- a/addons/fleet/models/fleet_vehicle_cost.py
+++ b/addons/fleet/models/fleet_vehicle_cost.py
@@ -308,9 +308,9 @@ class FleetVehicleLogFuel(models.Model):
 
     liter = fields.Float()
     price_per_liter = fields.Float()
-    purchaser_id = fields.Many2one('res.partner', 'Purchaser', domain="['|',('customer','=',True),('employee','=',True)]")
+    purchaser_id = fields.Many2one('res.partner', 'Purchaser')
     inv_ref = fields.Char('Invoice Reference', size=64)
-    vendor_id = fields.Many2one('res.partner', 'Vendor', domain="[('supplier','=',True)]")
+    vendor_id = fields.Many2one('res.partner', 'Vendor')
     notes = fields.Text()
     cost_id = fields.Many2one('fleet.vehicle.cost', 'Cost', required=True, ondelete='cascade')
     # we need to keep this field as a related with store=True because the graph view doesn't support
@@ -360,9 +360,9 @@ class FleetVehicleLogServices(models.Model):
         })
         return res
 
-    purchaser_id = fields.Many2one('res.partner', 'Purchaser', domain="['|',('customer','=',True),('employee','=',True)]")
+    purchaser_id = fields.Many2one('res.partner', 'Purchaser')
     inv_ref = fields.Char('Invoice Reference')
-    vendor_id = fields.Many2one('res.partner', 'Vendor', domain="[('supplier','=',True)]")
+    vendor_id = fields.Many2one('res.partner', 'Vendor')
     # we need to keep this field as a related with store=True because the graph view doesn't support
     # (1) to address fields from inherited table and (2) fields that aren't stored in database
     cost_amount = fields.Float(related='cost_id.amount', string='Amount', store=True, readonly=False)
