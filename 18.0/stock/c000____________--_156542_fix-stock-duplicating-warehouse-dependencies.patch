PR: https://github.com/odoo/odoo/pull/156542

From: 2fbfd8a3089b5e5621e27c7d145228e9a46b065c
From: Andrzej(pian)
Date: 2024-03-06 08:35:39

Structural Changes: 9
Total Changes: 22

[FIX] stock: duplicating warehouse dependencies

Before this commit when duplicating a warehouse, its operation types (picking.type)
wouldn't get copied. This commit ensures that new picking.types are created for
the duplicate warehouse.

[Reproduce]
- run odoo 17 with -i stock,mrp_subcontracting
- in Inventory/Configuration/Warehouses Duplicate a Warehouse
- Bug: in  Inventory/Configuration/OperationTypes picking types aren't duplicated
opw-3674614

closes odoo/odoo#156542

X-original-commit: c8dd587c28e15e0a2a57bb95938a1109d99fc648
Signed-off-by: William Henrotin (whe) <whe@odoo.com>

================================= pseudo patch: =================================

--- a/addons/stock/models/stock_warehouse.py
+++ b/addons/stock/models/stock_warehouse.py
@@ -53,7 +53,7 @@ class Warehouse(models.Model):
         'stock.route', 'stock_route_warehouse', 'warehouse_id', 'route_id',
         'Routes',
         domain="[('warehouse_selectable', '=', True), '|', ('company_id', '=', False), ('company_id', '=', company_id)]",
-        help='Defaults routes through the warehouse', check_company=True)
+        help='Defaults routes through the warehouse', check_company=True, copy=False)
     reception_steps = fields.Selection([
         ('one_step', 'Receive goods directly (1 step)'),
         ('two_steps', 'Receive goods in input and then stock (2 steps)'),
@@ -70,21 +70,21 @@ class Warehouse(models.Model):
     wh_qc_stock_loc_id = fields.Many2one('stock.location', 'Quality Control Location', check_company=True)
     wh_output_stock_loc_id = fields.Many2one('stock.location', 'Output Location', check_company=True)
     wh_pack_stock_loc_id = fields.Many2one('stock.location', 'Packing Location', check_company=True)
-    mto_pull_id = fields.Many2one('stock.rule', 'MTO rule')
-    pick_type_id = fields.Many2one('stock.picking.type', 'Pick Type', check_company=True)
-    pack_type_id = fields.Many2one('stock.picking.type', 'Pack Type', check_company=True)
-    out_type_id = fields.Many2one('stock.picking.type', 'Out Type', check_company=True)
-    in_type_id = fields.Many2one('stock.picking.type', 'In Type', check_company=True)
-    int_type_id = fields.Many2one('stock.picking.type', 'Internal Type', check_company=True)
-    crossdock_route_id = fields.Many2one('stock.route', 'Crossdock Route', ondelete='restrict')
-    reception_route_id = fields.Many2one('stock.route', 'Receipt Route', ondelete='restrict')
-    delivery_route_id = fields.Many2one('stock.route', 'Delivery Route', ondelete='restrict')
+    mto_pull_id = fields.Many2one('stock.rule', 'MTO rule', copy=False)
+    pick_type_id = fields.Many2one('stock.picking.type', 'Pick Type', check_company=True, copy=False)
+    pack_type_id = fields.Many2one('stock.picking.type', 'Pack Type', check_company=True, copy=False)
+    out_type_id = fields.Many2one('stock.picking.type', 'Out Type', check_company=True, copy=False)
+    in_type_id = fields.Many2one('stock.picking.type', 'In Type', check_company=True, copy=False)
+    int_type_id = fields.Many2one('stock.picking.type', 'Internal Type', check_company=True, copy=False)
+    crossdock_route_id = fields.Many2one('stock.route', 'Crossdock Route', ondelete='restrict', copy=False)
+    reception_route_id = fields.Many2one('stock.route', 'Receipt Route', ondelete='restrict', copy=False)
+    delivery_route_id = fields.Many2one('stock.route', 'Delivery Route', ondelete='restrict', copy=False)
     resupply_wh_ids = fields.Many2many(
         'stock.warehouse', 'stock_wh_resupply_table', 'supplied_wh_id', 'supplier_wh_id',
         'Resupply From', help="Routes will be created automatically to resupply this warehouse from the warehouses ticked")
     resupply_route_ids = fields.One2many(
         'stock.route', 'supplied_wh_id', 'Resupply Routes',
-        help="Routes will be created for these resupply warehouses and you can select them on products and product categories")
+        help="Routes will be created for these resupply warehouses and you can select them on products and product categories", copy=False)
     sequence = fields.Integer(default=10,
         help="Gives the sequence of this line when displaying the warehouses.")
     _sql_constraints = [
