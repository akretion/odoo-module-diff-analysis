PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:12 + add:0, change matches:
-    _inherit = ['account.fiscal.position']
-    _inherit = ["pos.category"]
-    _inherit = ["pos.config"]
-    _inherit = ["pos.order.line"]
-    _inherit = ["pos.order"]
-    _inherit = ["pos.payment.method"]
-    _inherit = ["restaurant.table"]
-    _inherit = ["restaurant.floor"]
-    _inherit = ['pos.session']
-    _inherit = ['product.template']
-    _inherit = ["product.product"]
-    _inherit = ["res.config.settings"]

Total Changes: 31

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/pos_self_order/models/account_fiscal_position.py
+++ b/addons/pos_self_order/models/account_fiscal_position.py
@@ -2,7 +2,7 @@ from odoo import models
 
 
 class AccountFiscalPosition(models.Model):
-    _inherit = ['account.fiscal.position']
+    _inherit = 'account.fiscal.position'
 
     def _load_pos_self_data(self, data):
         return self._load_pos_data(data)

--- a/addons/pos_self_order/models/ir_binary.py
+++ b/addons/pos_self_order/models/ir_binary.py
@@ -2,7 +2,7 @@ from odoo import models
 
 
 class IrBinary(models.AbstractModel):
-    _inherit = ["ir.binary"]
+    _inherit = "ir.binary"
 
     def _find_record_check_access(self, record, access_token, field):
         if record._name in ["product.product", "pos.category"] and field in ["image_128", "image_512"]:

--- a/addons/pos_self_order/models/ir_http.py
+++ b/addons/pos_self_order/models/ir_http.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class IrHttp(models.AbstractModel):
-    _inherit = ["ir.http"]
+    _inherit = "ir.http"
 
     @classmethod
     def _get_translation_frontend_modules_name(cls):

--- a/addons/pos_self_order/models/pos_category.py
+++ b/addons/pos_self_order/models/pos_category.py
@@ -6,7 +6,7 @@ from odoo import models, fields, api, _
 
 
 class PosCategory(models.Model):
-    _inherit = ["pos.category"]
+    _inherit = "pos.category"
 
 
     hour_until = fields.Float(string='Availability Until', default=24.0, help="The product will be available until this hour.")

--- a/addons/pos_self_order/models/pos_config.py
+++ b/addons/pos_self_order/models/pos_config.py
@@ -11,7 +11,7 @@ from odoo.tools import file_open, split_every
 
 
 class PosConfig(models.Model):
-    _inherit = ["pos.config"]
+    _inherit = "pos.config"
 
     def _self_order_kiosk_default_languages(self):
         return self.env["res.lang"].get_installed()

--- a/addons/pos_self_order/models/pos_load_mixin.py
+++ b/addons/pos_self_order/models/pos_load_mixin.py
@@ -3,7 +3,7 @@ from odoo import models, api
 
 
 class PosLoadMixin(models.AbstractModel):
-    _inherit = ["pos.load.mixin"]
+    _inherit = "pos.load.mixin"
 
     @api.model
     def _load_pos_self_data_domain(self, data):

--- a/addons/pos_self_order/models/pos_order.py
+++ b/addons/pos_self_order/models/pos_order.py
@@ -7,7 +7,7 @@ from odoo import models, fields, api
 
 
 class PosOrderLine(models.Model):
-    _inherit = ["pos.order.line"]
+    _inherit = "pos.order.line"
 
     combo_id = fields.Many2one('product.combo', string='Combo reference')
 
@@ -33,7 +33,7 @@ class PosOrderLine(models.Model):
 
 
 class PosOrder(models.Model):
-    _inherit = ["pos.order"]
+    _inherit = "pos.order"
 
     table_stand_number = fields.Char(string="Table Stand Number")
 

--- a/addons/pos_self_order/models/pos_payment_method.py
+++ b/addons/pos_self_order/models/pos_payment_method.py
@@ -2,7 +2,7 @@ from odoo import models, api
 
 
 class PosPaymentMethod(models.Model):
-    _inherit = ["pos.payment.method"]
+    _inherit = "pos.payment.method"
 
     # will be overridden.
     def _payment_request_from_kiosk(self, order):

--- a/addons/pos_self_order/models/pos_restaurant.py
+++ b/addons/pos_self_order/models/pos_restaurant.py
@@ -8,7 +8,7 @@ from odoo import api, fields, models
 
 
 class RestaurantTable(models.Model):
-    _inherit = ["restaurant.table"]
+    _inherit = "restaurant.table"
 
     identifier = fields.Char(
         "Security Token",
@@ -37,7 +37,7 @@ class RestaurantTable(models.Model):
 
 
 class RestaurantFloor(models.Model):
-    _inherit = ["restaurant.floor"]
+    _inherit = "restaurant.floor"
 
     @api.model
     def _load_pos_self_data_fields(self, config_id):

--- a/addons/pos_self_order/models/pos_self_order_custom_link.py
+++ b/addons/pos_self_order/models/pos_self_order_custom_link.py
@@ -7,6 +7,7 @@ from markupsafe import escape
 
 
 class Pos_Self_OrderCustom_Link(models.Model):
+    _name = 'pos_self_order.custom_link'
     _inherit = ["pos.load.mixin"]
     _description = (
         "Custom links that the restaurant can configure to be displayed on the self order screen"

--- a/addons/pos_self_order/models/pos_session.py
+++ b/addons/pos_self_order/models/pos_session.py
@@ -5,7 +5,7 @@ from odoo import models, api, _, fields
 
 
 class PosSession(models.Model):
-    _inherit = ['pos.session']
+    _inherit = 'pos.session'
 
     @api.model
     def _load_pos_self_data_domain(self, data):

--- a/addons/pos_self_order/models/product_product.py
+++ b/addons/pos_self_order/models/product_product.py
@@ -5,7 +5,7 @@ from odoo import api, models, fields
 
 
 class ProductTemplate(models.Model):
-    _inherit = ['product.template']
+    _inherit = 'product.template'
 
     self_order_available = fields.Boolean(
         string="Available in Self Order",
@@ -72,7 +72,7 @@ class ProductTemplate(models.Model):
 
 
 class ProductProduct(models.Model):
-    _inherit = ["product.product"]
+    _inherit = "product.product"
 
     def _filter_applicable_attributes(self, attributes_by_ptal_id: Dict) -> List[Dict]:
         """

--- a/addons/pos_self_order/models/res_config_settings.py
+++ b/addons/pos_self_order/models/res_config_settings.py
@@ -12,7 +12,7 @@ from werkzeug.urls import url_unquote
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = ["res.config.settings"]
+    _inherit = "res.config.settings"
 
     pos_self_ordering_takeaway = fields.Boolean(related="pos_config_id.self_ordering_takeaway", readonly=False)
     pos_self_ordering_service_mode = fields.Selection(related="pos_config_id.self_ordering_service_mode", readonly=False, required=True)
