PR: https://github.com/odoo/odoo/pull/67331

From: 04522f01e6fdbf82a657b32b312449fd7d756f79
From: Nicolas (vin)
Date: 2021-06-03 10:00:26

Structural Changes: 2
Total Changes: 59

[IMP] account: allows multiple payment acquirers on a journal.

Users may want to be able to have transactions coming from multiple
payment acquirers to be registered in the same journal.

This will allows that.

Task id #2414749

closes odoo/odoo#67331

Related: odoo/upgrade#2500
Related: odoo/enterprise#17258
Signed-off-by: William Andr√© (wan) <wan@odoo.com>

================================= pseudo patch: =================================

--- a/addons/account_check_printing/models/__init__.py
+++ b/addons/account_check_printing/models/__init__.py
@@ -4,6 +4,7 @@
 from . import account_journal
 from . import account_move
 from . import account_payment
+from . import account_payment_method
 from . import res_company
 from . import res_config_settings
 from . import res_partner

--- a/addons/account_check_printing/models/account_journal.py
+++ b/addons/account_check_printing/models/account_journal.py
@@ -5,9 +5,16 @@ import re
 from odoo import models, fields, api, _
 from odoo.exceptions import ValidationError
 
+
 class AccountJournal(models.Model):
     _inherit = "account.journal"
 
+    def _default_outbound_payment_methods(self):
+        res = super()._default_outbound_payment_methods()
+        if self.type == 'bank':
+            res |= self.env.ref('account_check_printing.account_payment_method_check')
+        return res
+
     check_manual_sequencing = fields.Boolean(
         string='Manual Numbering',
         default=False,
@@ -26,10 +33,6 @@ class AccountJournal(models.Model):
         inverse='_inverse_check_next_number',
         help="Sequence number of the next printed check.",
     )
-    check_printing_payment_method_selected = fields.Boolean(
-        compute='_compute_check_printing_payment_method_selected',
-        help="Technical feature used to know whether check printing was enabled as payment method.",
-    )
 
     @api.depends('check_manual_sequencing')
     def _compute_check_next_number(self):
@@ -54,22 +57,6 @@ class AccountJournal(models.Model):
                 journal.check_sequence_id.sudo().number_next_actual = int(journal.check_next_number)
                 journal.check_sequence_id.sudo().padding = len(journal.check_next_number)
 
-    @api.depends('type')
-    def _compute_outbound_payment_method_ids(self):
-        super()._compute_outbound_payment_method_ids()
-        for journal in self:
-            if journal.type == 'cash':
-                check_method = self.env.ref('account_check_printing.account_payment_method_check')
-                journal.outbound_payment_method_ids -= check_method
-
-    @api.depends('outbound_payment_method_ids')
-    def _compute_check_printing_payment_method_selected(self):
-        for journal in self:
-            journal.check_printing_payment_method_selected = any(
-                pm.code == 'check_printing'
-                for pm in journal.outbound_payment_method_ids
-            )
-
     @api.model
     def create(self, vals):
         rec = super(AccountJournal, self).create(vals)
@@ -94,20 +81,6 @@ class AccountJournal(models.Model):
                 'company_id': journal.company_id.id,
             })
 
-    def _default_outbound_payment_methods(self):
-        methods = super(AccountJournal, self)._default_outbound_payment_methods()
-        return methods + self.env.ref('account_check_printing.account_payment_method_check')
-
-    @api.model
-    def _enable_check_printing_on_bank_journals(self):
-        """ Enables check printing payment method and add a check sequence on bank journals.
-            Called upon module installation via data file.
-        """
-        check_method = self.env.ref('account_check_printing.account_payment_method_check')
-        for bank_journal in self.search([('type', '=', 'bank')]):
-            bank_journal._create_check_sequence()
-            bank_journal.outbound_payment_method_ids += check_method
-
     def get_journal_dashboard_datas(self):
         domain_checks_to_print = [
             ('journal_id', '=', self.id),

--- a/addons/account_check_printing/models/account_payment.py
+++ b/addons/account_check_printing/models/account_payment.py
@@ -93,7 +93,8 @@ class AccountPayment(models.Model):
         super()._compute_payment_method_id()
         for record in self:
             preferred = record.partner_id.with_company(record.company_id).property_payment_method_id
-            if record.payment_type == 'outbound' and preferred in record.journal_id.outbound_payment_method_ids:
+            if (record.payment_type == 'outbound'
+                    and preferred in record.journal_id.outbound_payment_method_line_ids.mapped('payment_method_id')):
                 record.payment_method_id = preferred
 
     def action_post(self):

--- a/None
+++ b/addons/account_check_printing/models/account_payment_method.py
@@ -0,0 +1,14 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import api, models
+
+
+class AccountPaymentMethod(models.Model):
+    _inherit = 'account.payment.method'
+
+    @api.model
+    def _get_payment_method_information(self):
+        res = super()._get_payment_method_information()
+        res['check_printing'] = {'mode': 'multi', 'domain': [('type', '=', 'bank')]}
+        return res
