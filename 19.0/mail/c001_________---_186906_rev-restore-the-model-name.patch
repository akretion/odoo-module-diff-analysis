PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:15 + add:0, change matches:
-    _inherit = ['bus.presence']
-    _inherit = ["ir.attachment"]
-    _inherit = ["mail.message"]
-    _inherit = ["res.groups"]
-    _inherit = ["res.partner"]
-    _inherit = ["res.users"]
-    _inherit = ['ir.actions.act_window.view']
-    _inherit = ['ir.attachment']
-    _inherit = ['ir.mail_server']
-    _inherit = ['ir.model']
-    _inherit = ['ir.model.fields']
-    _inherit = ['ir.ui.menu']
-    _inherit = ['ir.ui.view']
-    _inherit = ['res.company']
-    _inherit = ['res.users.settings']

Total Changes: 67

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/mail/models/bus_listener_mixin.py
+++ b/addons/mail/models/bus_listener_mixin.py
@@ -5,7 +5,7 @@ from odoo.addons.mail.tools.discuss import Store
 
 
 class BusListenerMixin(models.AbstractModel):
-    _inherit = ["bus.listener.mixin"]
+    _inherit = "bus.listener.mixin"
 
     def _bus_send_store(
         self, /, *args, notification_type="mail.record/insert", subchannel=None, **kwargs

--- a/addons/mail/models/bus_presence.py
+++ b/addons/mail/models/bus_presence.py
@@ -4,7 +4,7 @@ from odoo import fields, models
 
 
 class BusPresence(models.Model):
-    _inherit = ['bus.presence']
+    _inherit = 'bus.presence'
 
     guest_id = fields.Many2one('mail.guest', 'Guest', ondelete='cascade')
 

--- a/addons/mail/models/discuss/bus_listener_mixin.py
+++ b/addons/mail/models/discuss/bus_listener_mixin.py
@@ -7,7 +7,7 @@ from odoo.addons.mail.tools.discuss import Store
 
 
 class BusListenerMixin(models.AbstractModel):
-    _inherit = ["bus.listener.mixin"]
+    _inherit = "bus.listener.mixin"
 
     def _bus_send_transient_message(self, channel, content):
         """Posts a fake message in the given ``channel``, only visible for ``self`` listeners."""

--- a/addons/mail/models/discuss/discuss_channel.py
+++ b/addons/mail/models/discuss/discuss_channel.py
@@ -26,6 +26,7 @@ group_avatar = '''<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 530.06 53
 
 
 class DiscussChannel(models.Model):
+    _name = 'discuss.channel'
     _description = 'Discussion Channel'
     _mail_flat_thread = False
     _mail_post_access = 'read'

--- a/addons/mail/models/discuss/discuss_channel_member.py
+++ b/addons/mail/models/discuss/discuss_channel_member.py
@@ -18,6 +18,7 @@ SFU_MODE_THRESHOLD = 3
 
 
 class DiscussChannelMember(models.Model):
+    _name = 'discuss.channel.member'
     _inherit = ["bus.listener.mixin"]
     _description = "Channel Member"
     _rec_names_search = ["channel_id", "partner_id", "guest_id"]

--- a/addons/mail/models/discuss/discuss_channel_rtc_session.py
+++ b/addons/mail/models/discuss/discuss_channel_rtc_session.py
@@ -14,6 +14,7 @@ _logger = logging.getLogger(__name__)
 
 
 class DiscussChannelRtcSession(models.Model):
+    _name = 'discuss.channel.rtc.session'
     _inherit = ["bus.listener.mixin"]
     _description = 'Mail RTC session'
     _rec_name = 'channel_member_id'

--- a/addons/mail/models/discuss/discuss_gif_favorite.py
+++ b/addons/mail/models/discuss/discuss_gif_favorite.py
@@ -4,6 +4,7 @@ from odoo import fields, models
 
 
 class DiscussGifFavorite(models.Model):
+    _name = 'discuss.gif.favorite'
     _description = "Save favorite GIF from Tenor API"
 
     tenor_gif_id = fields.Char("GIF id from Tenor", required=True)

--- a/addons/mail/models/discuss/discuss_voice_metadata.py
+++ b/addons/mail/models/discuss/discuss_voice_metadata.py
@@ -4,6 +4,7 @@ from odoo import fields, models
 
 
 class DiscussVoiceMetadata(models.Model):
+    _name = 'discuss.voice.metadata'
     _description = "Metadata for voice attachments"
 
     attachment_id = fields.Many2one(

--- a/addons/mail/models/discuss/ir_attachment.py
+++ b/addons/mail/models/discuss/ir_attachment.py
@@ -5,7 +5,7 @@ from odoo.addons.mail.tools.discuss import Store
 
 
 class IrAttachment(models.Model):
-    _inherit = ["ir.attachment"]
+    _inherit = "ir.attachment"
 
     voice_ids = fields.One2many("discuss.voice.metadata", "attachment_id")
 

--- a/addons/mail/models/discuss/ir_binary.py
+++ b/addons/mail/models/discuss/ir_binary.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class IrBinary(models.AbstractModel):
-    _inherit = ["ir.binary"]
+    _inherit = "ir.binary"
 
     def _find_record_check_access(self, record, access_token, field):
         if record._name in ["res.partner", "mail.guest"] and field == "avatar_128":

--- a/addons/mail/models/discuss/ir_websocket.py
+++ b/addons/mail/models/discuss/ir_websocket.py
@@ -8,7 +8,7 @@ from odoo.addons.mail.tools.discuss import Store
 
 
 class IrWebsocket(models.AbstractModel):
-    _inherit = ["ir.websocket"]
+    _inherit = "ir.websocket"
 
     def _get_missed_presences_identity_domains(self, presence_channels):
         identity_domain = super()._get_missed_presences_identity_domains(presence_channels)

--- a/addons/mail/models/discuss/mail_guest.py
+++ b/addons/mail/models/discuss/mail_guest.py
@@ -41,6 +41,7 @@ def add_guest_to_context(func):
 
 
 class MailGuest(models.Model):
+    _name = 'mail.guest'
     _description = "Guest"
     _inherit = ["avatar.mixin", "bus.listener.mixin"]
     _avatar_name_field = "name"

--- a/addons/mail/models/discuss/mail_message.py
+++ b/addons/mail/models/discuss/mail_message.py
@@ -5,7 +5,7 @@ from odoo.addons.mail.tools.discuss import Store
 
 
 class MailMessage(models.Model):
-    _inherit = ["mail.message"]
+    _inherit = "mail.message"
 
     def _extras_to_store(self, store: Store, format_reply):
         super()._extras_to_store(store, format_reply=format_reply)

--- a/addons/mail/models/discuss/res_groups.py
+++ b/addons/mail/models/discuss/res_groups.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class ResGroups(models.Model):
-    _inherit = ["res.groups"]
+    _inherit = "res.groups"
 
     def write(self, vals):
         res = super().write(vals)

--- a/addons/mail/models/discuss/res_partner.py
+++ b/addons/mail/models/discuss/res_partner.py
@@ -7,7 +7,7 @@ from odoo.addons.mail.tools.discuss import Store
 
 
 class ResPartner(models.Model):
-    _inherit = ["res.partner"]
+    _inherit = "res.partner"
 
     channel_ids = fields.Many2many(
         "discuss.channel",

--- a/addons/mail/models/discuss/res_users.py
+++ b/addons/mail/models/discuss/res_users.py
@@ -5,7 +5,7 @@ from odoo.addons.base.models.res_users import is_selection_groups
 
 
 class ResUsers(models.Model):
-    _inherit = ["res.users"]
+    _inherit = "res.users"
 
     @api.model_create_multi
     def create(self, vals_list):

--- a/addons/mail/models/ir_action_act_window.py
+++ b/addons/mail/models/ir_action_act_window.py
@@ -3,7 +3,7 @@ from odoo import fields, models
 
 
 class IrActionsAct_WindowView(models.Model):
-    _inherit = ['ir.actions.act_window.view']
+    _inherit = 'ir.actions.act_window.view'
 
     view_mode = fields.Selection(selection_add=[
         ('activity', 'Activity')

--- a/addons/mail/models/ir_attachment.py
+++ b/addons/mail/models/ir_attachment.py
@@ -10,7 +10,7 @@ from odoo.addons.mail.tools.discuss import Store
 
 
 class IrAttachment(models.Model):
-    _inherit = ['ir.attachment']
+    _inherit = 'ir.attachment'
 
     def _check_attachments_access(self, attachment_tokens):
         """This method relies on access rules/rights and therefore it should not be called from a sudo env."""

--- a/addons/mail/models/ir_binary.py
+++ b/addons/mail/models/ir_binary.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class IrBinary(models.AbstractModel):
-    _inherit = ["ir.binary"]
+    _inherit = "ir.binary"
 
     def _find_record_check_access(self, record, access_token, field):
         if record._name in ["res.partner", "mail.guest"] and field == "avatar_128":

--- a/addons/mail/models/ir_cron.py
+++ b/addons/mail/models/ir_cron.py
@@ -4,7 +4,7 @@ from odoo import models, SUPERUSER_ID
 
 
 class IrCron(models.AbstractModel):
-    _inherit = ['ir.cron']
+    _inherit = 'ir.cron'
 
     def _notify_admin(self, message):
         """ Send a notification to the admin users. """

--- a/addons/mail/models/ir_http.py
+++ b/addons/mail/models/ir_http.py
@@ -7,7 +7,7 @@ from odoo.addons.mail.tools.discuss import Store
 
 
 class IrHttp(models.AbstractModel):
-    _inherit = ['ir.http']
+    _inherit = 'ir.http'
 
     def session_info(self):
         """Override to add the current user data (partner or guest) if applicable."""

--- a/addons/mail/models/ir_mail_server.py
+++ b/addons/mail/models/ir_mail_server.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class IrMail_Server(models.Model):
-    _inherit = ['ir.mail_server']
+    _inherit = 'ir.mail_server'
 
     mail_template_ids = fields.One2many(
         comodel_name='mail.template',

--- a/addons/mail/models/ir_model.py
+++ b/addons/mail/models/ir_model.py
@@ -6,7 +6,7 @@ from odoo.exceptions import UserError
 
 
 class IrModel(models.Model):
-    _inherit = ['ir.model']
+    _inherit = 'ir.model'
     _order = 'is_mail_thread DESC, name ASC'
 
     is_mail_thread = fields.Boolean(

--- a/addons/mail/models/ir_model_fields.py
+++ b/addons/mail/models/ir_model_fields.py
@@ -6,7 +6,7 @@ from odoo.tools import groupby
 
 
 class IrModelFields(models.Model):
-    _inherit = ['ir.model.fields']
+    _inherit = 'ir.model.fields'
 
     tracking = fields.Integer(
         string="Enable Ordered Tracking",

--- a/addons/mail/models/ir_ui_menu.py
+++ b/addons/mail/models/ir_ui_menu.py
@@ -7,7 +7,7 @@ from odoo.exceptions import AccessError
 
 
 class IrUiMenu(models.Model):
-    _inherit = ['ir.ui.menu']
+    _inherit = 'ir.ui.menu'
 
     @api.model
     def _get_best_backend_root_menu_id_for_model(self, res_model):

--- a/addons/mail/models/ir_ui_view.py
+++ b/addons/mail/models/ir_ui_view.py
@@ -3,7 +3,7 @@ from odoo import fields, models
 
 
 class IrUiView(models.Model):
-    _inherit = ['ir.ui.view']
+    _inherit = 'ir.ui.view'
 
     type = fields.Selection(selection_add=[('activity', 'Activity')])
 

--- a/addons/mail/models/mail_activity_plan.py
+++ b/addons/mail/models/mail_activity_plan.py
@@ -5,6 +5,7 @@ from odoo import _, api, fields, models
 
 
 class MailActivityPlan(models.Model):
+    _name = 'mail.activity.plan'
     _description = 'Activity Plan'
     _order = 'id DESC'
 

--- a/addons/mail/models/mail_activity_plan_template.py
+++ b/addons/mail/models/mail_activity_plan_template.py
@@ -8,6 +8,7 @@ from odoo.exceptions import ValidationError
 
 
 class MailActivityPlanTemplate(models.Model):
+    _name = 'mail.activity.plan.template'
     _order = 'sequence,id'
     _description = 'Activity plan template'
     _rec_name = 'summary'

--- a/addons/mail/models/mail_ice_server.py
+++ b/addons/mail/models/mail_ice_server.py
@@ -7,6 +7,7 @@ import requests
 
 
 class MailIceServer(models.Model):
+    _name = 'mail.ice.server'
     _description = 'ICE server'
 
     server_type = fields.Selection([('stun', 'stun:'), ('turn', 'turn:')], string='Type', required=True, default='stun')

--- a/addons/mail/models/mail_link_preview.py
+++ b/addons/mail/models/mail_link_preview.py
@@ -13,6 +13,7 @@ from odoo.addons.mail.tools.link_preview import get_link_preview_from_url
 
 
 class MailLinkPreview(models.Model):
+    _name = 'mail.link.preview'
     _inherit = ["bus.listener.mixin"]
     _description = "Store link preview data"
 

--- a/addons/mail/models/mail_message_reaction.py
+++ b/addons/mail/models/mail_message_reaction.py
@@ -6,6 +6,7 @@ from odoo.addons.mail.tools.discuss import Store
 
 
 class MailMessageReaction(models.Model):
+    _name = 'mail.message.reaction'
     _description = 'Message Reaction'
     _order = 'id desc'
     _log_access = False

--- a/addons/mail/models/mail_message_translation.py
+++ b/addons/mail/models/mail_message_translation.py
@@ -6,6 +6,7 @@ from odoo import api, fields, models
 
 
 class MailMessageTranslation(models.Model):
+    _name = 'mail.message.translation'
     _description = "Message Translation"
 
     message_id = fields.Many2one("mail.message", "Message", required=True, ondelete="cascade")

--- a/addons/mail/models/mail_notification.py
+++ b/addons/mail/models/mail_notification.py
@@ -10,6 +10,7 @@ from odoo.addons.mail.tools.discuss import Store
 
 
 class MailNotification(models.Model):
+    _name = 'mail.notification'
     _table = 'mail_notification'
     _rec_name = 'res_partner_id'
     _log_access = False

--- a/addons/mail/models/mail_push.py
+++ b/addons/mail/models/mail_push.py
@@ -12,6 +12,7 @@ _logger = logging.getLogger(__name__)
 
 
 class MailPush(models.Model):
+    _name = 'mail.push'
     _description = "Push Notifications"
 
     mail_push_device_id = fields.Many2one('mail.push.device', string='devices', required=True, ondelete="cascade")

--- a/addons/mail/models/mail_push_device.py
+++ b/addons/mail/models/mail_push_device.py
@@ -11,6 +11,7 @@ _logger = logger.getLogger(__name__)
 
 
 class MailPushDevice(models.Model):
+    _name = 'mail.push.device'
     _description = "Push Notification Device"
 
     partner_id = fields.Many2one(

--- a/addons/mail/models/mail_render_mixin.py
+++ b/addons/mail/models/mail_render_mixin.py
@@ -41,6 +41,7 @@ def format_time(env, time, tz=False, time_format='medium', lang_code=False):
 
 
 class MailRenderMixin(models.AbstractModel):
+    _name = 'mail.render.mixin'
     _description = 'Mail Render Mixin'
 
     # If True, we trust the value on the model for rendering

--- a/addons/mail/models/mail_thread_cc.py
+++ b/addons/mail/models/mail_thread_cc.py
@@ -5,6 +5,7 @@ from odoo import _, api, fields, models, tools
 
 
 class MailThreadCc(models.AbstractModel):
+    _name = 'mail.thread.cc'
     _inherit = ['mail.thread']
     _description = 'Email CC management'
 

--- a/addons/mail/models/mail_tracking_duration_mixin.py
+++ b/addons/mail/models/mail_tracking_duration_mixin.py
@@ -4,6 +4,7 @@ from odoo import _, fields, models
 
 
 class MailTrackingDurationMixin(models.AbstractModel):
+    _name = 'mail.tracking.duration.mixin'
     _description = "Mixin to compute the time a record has spent in each value a many2one field can take"
 
     duration_tracking = fields.Json(

--- a/addons/mail/models/mail_tracking_value.py
+++ b/addons/mail/models/mail_tracking_value.py
@@ -7,6 +7,7 @@ from odoo import api, fields, models
 
 
 class MailTrackingValue(models.Model):
+    _name = 'mail.tracking.value'
     _description = 'Mail Tracking Value'
     _rec_name = 'field_id'
     _order = 'id DESC'

--- a/addons/mail/models/models.py
+++ b/addons/mail/models/models.py
@@ -15,7 +15,7 @@ _logger = logging.getLogger(__name__)
 
 
 class Base(models.AbstractModel):
-    _inherit = ['base']
+    _inherit = 'base'
     _mail_defaults_to_email = False
 
     def _valid_field_parameter(self, field, name):

--- a/addons/mail/models/res_company.py
+++ b/addons/mail/models/res_company.py
@@ -5,7 +5,7 @@ from odoo import api, models, fields, tools
 
 
 class ResCompany(models.Model):
-    _inherit = ['res.company']
+    _inherit = 'res.company'
 
     def _default_alias_domain_id(self):
         return self.env['mail.alias.domain'].search([], limit=1)

--- a/addons/mail/models/res_users_settings.py
+++ b/addons/mail/models/res_users_settings.py
@@ -4,7 +4,7 @@ from odoo import api, fields, models
 
 
 class ResUsersSettings(models.Model):
-    _inherit = ['res.users.settings']
+    _inherit = 'res.users.settings'
 
     is_discuss_sidebar_category_channel_open = fields.Boolean(string="Is discuss sidebar category channel open?", default=True)
     is_discuss_sidebar_category_chat_open = fields.Boolean(string="Is discuss sidebar category chat open?", default=True)

--- a/addons/mail/models/template_reset_mixin.py
+++ b/addons/mail/models/template_reset_mixin.py
@@ -14,6 +14,7 @@ from odoo.tools.translate import TranslationImporter, get_po_paths
 
 
 class TemplateResetMixin(models.AbstractModel):
+    _name = 'template.reset.mixin'
     _description = 'Template Reset Mixin'
 
     template_fs = fields.Char(

--- a/addons/mail/models/update.py
+++ b/addons/mail/models/update.py
@@ -16,6 +16,7 @@ _logger = logging.getLogger(__name__)
 
 
 class Publisher_WarrantyContract(AbstractModel):
+    _name = 'publisher_warranty.contract'
     _description = 'Publisher Warranty Contract'
 
     @api.model
