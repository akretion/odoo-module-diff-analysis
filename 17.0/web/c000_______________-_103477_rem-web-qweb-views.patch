PR: https://github.com/odoo/odoo/pull/103477

From: 4edbe5445631e964eb83fc2558de2a10aa907531
From: fdardenne
Date: 2022-11-15 17:25:12

Structural Changes: 2
Total Changes: 34

[REM] web: qweb views

QWeb views allowed to render QWeb templates rendered by the server in
a view.

Today, QWeb views are only used in website to see the hierarchy of
their views. The use case of website has now more sense in a client
action rather than an extension of a QWeb view.

This commit removes this view because it is not used anymore and will
probably not find any useful use case in the future.

closes odoo/odoo#103477

Related: odoo/upgrade#4016
Signed-off-by: Aaron Bohy (aab) <aab@odoo.com>

================================= pseudo patch: =================================

--- a/addons/web/models/models.py
+++ b/addons/web/models/models.py
@@ -33,14 +33,6 @@ DISPLAY_DATE_FORMATS = {
 }
 
 
-class IrActionsActWindowView(models.Model):
-    _inherit = 'ir.actions.act_window.view'
-
-    view_mode = fields.Selection(selection_add=[
-        ('qweb', 'QWeb')
-    ], ondelete={'qweb': 'cascade'})
-
-
 class Base(models.AbstractModel):
     _inherit = 'base'
 
@@ -221,32 +213,6 @@ class Base(models.AbstractModel):
 
         return records_values
 
-    ##### qweb view hooks #####
-    @api.model
-    def qweb_render_view(self, view_id, domain):
-        assert view_id
-        return self.env['ir.qweb']._render(
-            view_id,
-            {
-                'model': self,
-                'domain': domain,
-                # not necessarily necessary as env is already part of the
-                # non-minimal qcontext
-                'context': self.env.context,
-                'records': lazy(self.search, domain),
-            })
-
-    @api.model
-    def _get_view(self, view_id=None, view_type='form', **options):
-        arch, view = super()._get_view(view_id, view_type, **options)
-        # avoid leaking the raw (un-rendered) template, also avoids bloating
-        # the response payload for no reason. Only send the root node,
-        # to send attributes such as `js_class`.
-        if view_type == 'qweb':
-            root = arch
-            arch = etree.Element('qweb', root.attrib)
-        return arch, view
-
     @api.model
     def _search_panel_field_image(self, field_name, **kwargs):
         """
