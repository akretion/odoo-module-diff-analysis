PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:9 + add:0, change matches:
-    _inherit = ['purchase.order']
-    _inherit = ['res.company']
-    _inherit = ['sale.order']
-    _inherit = ['sale.order.line']
-    _inherit = ['stock.rule']
-    _inherit = ["procurement.group"]
-    _inherit = ['stock.picking']
-    _inherit = ['stock.picking.type']
-    _inherit = ['stock.lot']

Total Changes: 20

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/stock_dropshipping/models/purchase.py
+++ b/addons/stock_dropshipping/models/purchase.py
@@ -5,7 +5,7 @@ from odoo import api, models, fields
 
 
 class PurchaseOrder(models.Model):
-    _inherit = ['purchase.order']
+    _inherit = 'purchase.order'
 
     dropship_picking_count = fields.Integer("Dropship Count", compute='_compute_incoming_picking_count')
 

--- a/addons/stock_dropshipping/models/res_company.py
+++ b/addons/stock_dropshipping/models/res_company.py
@@ -5,7 +5,7 @@ from odoo import api, models
 
 
 class ResCompany(models.Model):
-    _inherit = ['res.company']
+    _inherit = 'res.company'
 
     # -------------------------------------------------------------------------
     # Sequences

--- a/addons/stock_dropshipping/models/sale.py
+++ b/addons/stock_dropshipping/models/sale.py
@@ -5,7 +5,7 @@ from odoo import models, fields, api
 
 
 class SaleOrder(models.Model):
-    _inherit = ['sale.order']
+    _inherit = 'sale.order'
 
     dropship_picking_count = fields.Integer("Dropship Count", compute='_compute_picking_ids')
 
@@ -25,7 +25,7 @@ class SaleOrder(models.Model):
 
 
 class SaleOrderLine(models.Model):
-    _inherit = ['sale.order.line']
+    _inherit = 'sale.order.line'
 
     def _compute_is_mto(self):
         super(SaleOrderLine, self)._compute_is_mto()

--- a/addons/stock_dropshipping/models/stock.py
+++ b/addons/stock_dropshipping/models/stock.py
@@ -6,7 +6,7 @@ from odoo.osv import expression
 
 
 class StockRule(models.Model):
-    _inherit = ['stock.rule']
+    _inherit = 'stock.rule'
 
     @api.model
     def _get_procurements_to_merge_groupby(self, procurement):
@@ -23,7 +23,7 @@ class StockRule(models.Model):
 
 
 class ProcurementGroup(models.Model):
-    _inherit = ["procurement.group"]
+    _inherit = "procurement.group"
 
     @api.model
     def _get_rule_domain(self, location, values):
@@ -34,7 +34,7 @@ class ProcurementGroup(models.Model):
 
 
 class StockPicking(models.Model):
-    _inherit = ['stock.picking']
+    _inherit = 'stock.picking'
 
     is_dropship = fields.Boolean("Is a Dropship", compute='_compute_is_dropship')
 
@@ -51,7 +51,7 @@ class StockPicking(models.Model):
 
 
 class StockPickingType(models.Model):
-    _inherit = ['stock.picking.type']
+    _inherit = 'stock.picking.type'
 
     code = fields.Selection(
         selection_add=[('dropship', 'Dropship')], ondelete={'dropship': lambda recs: recs.write({'code': 'outgoing', 'active': False})})
@@ -84,7 +84,7 @@ class StockPickingType(models.Model):
 
 
 class StockLot(models.Model):
-    _inherit = ['stock.lot']
+    _inherit = 'stock.lot'
 
     def _compute_last_delivery_partner_id(self):
         super()._compute_last_delivery_partner_id()

--- a/addons/stock_dropshipping/models/stock_replenish_mixin.py
+++ b/addons/stock_dropshipping/models/stock_replenish_mixin.py
@@ -5,7 +5,7 @@ from odoo.osv import expression
 
 
 class StockReplenishMixin(models.AbstractModel):
-    _inherit = ['stock.replenish.mixin']
+    _inherit = 'stock.replenish.mixin'
 
     def _get_allowed_route_domain(self):
         domains = super()._get_allowed_route_domain()
