PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:5 + add:0, change matches:
-    _inherit = 'event.event'
-    _inherit = 'event.event.ticket'
-    _inherit = 'event.type.ticket'
-    _inherit = 'product.product'
-    _inherit = 'product.template'

Total Changes: 20

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/event_product/models/event_event.py
+++ b/addons/event_product/models/event_event.py
@@ -1,8 +1,8 @@
 from odoo import fields, models
 
 
-class Event(models.Model):
-    _inherit = 'event.event'
+class EventEvent(models.Model):
+    _inherit = ['event.event']
 
     currency_id = fields.Many2one(
         'res.currency', string='Currency',

--- a/addons/event_product/models/event_event_ticket.py
+++ b/addons/event_product/models/event_event_ticket.py
@@ -2,8 +2,8 @@
 from odoo import api, models, fields
 
 
-class EventTicket(models.Model):
-    _inherit = 'event.event.ticket'
+class EventEventTicket(models.Model):
+    _inherit = ['event.event.ticket']
     _order = "event_id, sequence, price, name, id"
 
     price_reduce_taxinc = fields.Float(
@@ -18,7 +18,7 @@ class EventTicket(models.Model):
         inactive_product_tickets = self.filtered(lambda ticket: not ticket.product_id.active)
         for ticket in inactive_product_tickets:
             ticket.sale_available = False
-        super(EventTicket, self - inactive_product_tickets)._compute_sale_available()
+        super(EventEventTicket, self - inactive_product_tickets)._compute_sale_available()
 
     def _compute_price_reduce_taxinc(self):
         for event in self:

--- a/addons/event_product/models/event_type_ticket.py
+++ b/addons/event_product/models/event_type_ticket.py
@@ -8,8 +8,8 @@ from odoo.addons.product.models.product_template import PRICE_CONTEXT_KEYS
 _logger = logging.getLogger(__name__)
 
 
-class EventTemplateTicket(models.Model):
-    _inherit = 'event.type.ticket'
+class EventTypeTicket(models.Model):
+    _inherit = ['event.type.ticket']
     _order = "sequence, price, name, id"
 
     def _default_product_id(self):

--- a/addons/event_product/models/product_product.py
+++ b/addons/event_product/models/product_product.py
@@ -1,7 +1,7 @@
 from odoo import fields, models
 
 
-class Product(models.Model):
-    _inherit = 'product.product'
+class ProductProduct(models.Model):
+    _inherit = ['product.product']
 
     event_ticket_ids = fields.One2many('event.event.ticket', 'product_id', string='Event Tickets')

--- a/addons/event_product/models/product_template.py
+++ b/addons/event_product/models/product_template.py
@@ -2,7 +2,7 @@ from odoo import fields, models
 
 
 class ProductTemplate(models.Model):
-    _inherit = 'product.template'
+    _inherit = ['product.template']
 
     service_tracking = fields.Selection(selection_add=[
         ('event', 'Event Registration'),
