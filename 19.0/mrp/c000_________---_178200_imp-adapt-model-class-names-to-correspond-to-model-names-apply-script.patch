PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:19 + add:0, change matches:
-    _inherit = "ir.attachment"
-    _inherit = "product.template"
-    _inherit = "product.product"
-    _inherit = 'product.document'
-    _inherit = 'res.company'
-    _inherit = 'res.config.settings'
-    _inherit = 'stock.lot'
-    _inherit = 'stock.move.line'
-    _inherit = 'stock.move'
-    _inherit = 'stock.warehouse.orderpoint'
-    _inherit = 'stock.picking.type'
-    _inherit = 'stock.picking'
-    _inherit = 'stock.quant'
-    _inherit = 'stock.rule'
-    _inherit = 'procurement.group'
-    _inherit = 'stock.scrap'
-    _inherit = 'stock.traceability.report'
-    _inherit = 'stock.warehouse'
-    _inherit = "stock.warehouse.orderpoint"

Total Changes: 79

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/mrp/models/ir_attachment.py
+++ b/addons/mrp/models/ir_attachment.py
@@ -4,8 +4,7 @@ from odoo import models
 
 
 class IrAttachment(models.Model):
-    _name = "ir.attachment"
-    _inherit = "ir.attachment"
+    _inherit = ["ir.attachment"]
 
     def _post_add_create(self, **kwargs):
         super()._post_add_create(**kwargs)

--- a/addons/mrp/models/mrp_bom.py
+++ b/addons/mrp/models/mrp_bom.py
@@ -12,7 +12,6 @@ from collections import defaultdict
 
 class MrpBom(models.Model):
     """ Defines bills of material for a product or a product template """
-    _name = 'mrp.bom'
     _description = 'Bill of Material'
     _inherit = ['mail.thread', 'product.catalog.mixin']
     _rec_name = 'product_tmpl_id'
@@ -516,7 +515,6 @@ class MrpBom(models.Model):
 
 
 class MrpBomLine(models.Model):
-    _name = 'mrp.bom.line'
     _order = "sequence, id"
     _rec_name = "product_id"
     _description = 'Bill of Material Line'
@@ -721,8 +719,7 @@ class MrpBomLine(models.Model):
         }
 
 
-class MrpByProduct(models.Model):
-    _name = 'mrp.bom.byproduct'
+class MrpBomByproduct(models.Model):
     _description = 'Byproduct'
     _rec_name = "product_id"
     _check_company_auto = True

--- a/addons/mrp/models/mrp_production.py
+++ b/addons/mrp/models/mrp_production.py
@@ -24,7 +24,6 @@ SIZE_BACK_ORDER_NUMERING = 3
 
 class MrpProduction(models.Model):
     """ Manufacturing Orders """
-    _name = 'mrp.production'
     _description = 'Manufacturing Order'
     _date_name = 'date_start'
     _inherit = ['mail.thread', 'mail.activity.mixin', 'product.catalog.mixin']

--- a/addons/mrp/models/mrp_routing.py
+++ b/addons/mrp/models/mrp_routing.py
@@ -7,7 +7,6 @@ from odoo.tools import float_round
 
 
 class MrpRoutingWorkcenter(models.Model):
-    _name = 'mrp.routing.workcenter'
     _description = 'Work Center Usage'
     _inherit = ['mail.thread', 'mail.activity.mixin']
 

--- a/addons/mrp/models/mrp_unbuild.py
+++ b/addons/mrp/models/mrp_unbuild.py
@@ -9,7 +9,6 @@ from odoo.tools.misc import clean_context
 
 
 class MrpUnbuild(models.Model):
-    _name = "mrp.unbuild"
     _description = "Unbuild Order"
     _inherit = ['mail.thread', 'mail.activity.mixin']
     _order = 'id desc'

--- a/addons/mrp/models/mrp_workcenter.py
+++ b/addons/mrp/models/mrp_workcenter.py
@@ -18,7 +18,6 @@ from odoo.tools.misc import get_lang
 
 
 class MrpWorkcenter(models.Model):
-    _name = 'mrp.workcenter'
     _description = 'Work Center'
     _order = "sequence, id"
     _inherit = ['mail.thread', 'resource.mixin']
@@ -401,8 +400,7 @@ class MrpWorkcenter(models.Model):
         return capacity.time_start + capacity.time_stop if capacity else self.time_start + self.time_stop
 
 
-class WorkcenterTag(models.Model):
-    _name = 'mrp.workcenter.tag'
+class MrpWorkcenterTag(models.Model):
     _description = 'Add tag for the workcenter'
     _order = 'name'
 
@@ -419,7 +417,6 @@ class WorkcenterTag(models.Model):
 
 
 class MrpWorkcenterProductivityLossType(models.Model):
-    _name = "mrp.workcenter.productivity.loss.type"
     _description = 'MRP Workorder productivity losses'
     _rec_name = 'loss_type'
 
@@ -439,7 +436,6 @@ class MrpWorkcenterProductivityLossType(models.Model):
 
 
 class MrpWorkcenterProductivityLoss(models.Model):
-    _name = "mrp.workcenter.productivity.loss"
     _description = "Workcenter Productivity Losses"
     _order = "sequence, id"
 
@@ -464,8 +460,8 @@ class MrpWorkcenterProductivityLoss(models.Model):
                 duration = max(duration, (date_stop - date_start).total_seconds() / 60.0)
         return round(duration, 2)
 
+
 class MrpWorkcenterProductivity(models.Model):
-    _name = "mrp.workcenter.productivity"
     _description = "Workcenter Productivity Log"
     _order = "id desc"
     _rec_name = "loss_id"
@@ -571,8 +567,7 @@ class MrpWorkcenterProductivity(models.Model):
             underperformance_timers.write({'loss_id': underperformance_type.id})
 
 
-class MrpWorkCenterCapacity(models.Model):
-    _name = 'mrp.workcenter.capacity'
+class MrpWorkcenterCapacity(models.Model):
     _description = 'Work Center Capacity'
     _check_company_auto = True
 

--- a/addons/mrp/models/mrp_workorder.py
+++ b/addons/mrp/models/mrp_workorder.py
@@ -11,7 +11,6 @@ from odoo.tools import float_compare, format_datetime, float_is_zero, float_roun
 
 
 class MrpWorkorder(models.Model):
-    _name = 'mrp.workorder'
     _description = 'Work Order'
     _order = 'sequence, leave_id, date_start, id'
 

--- a/addons/mrp/models/product.py
+++ b/addons/mrp/models/product.py
@@ -18,8 +18,9 @@ OPERATORS = {
     '!=': py_operator.ne
 }
 
+
 class ProductTemplate(models.Model):
-    _inherit = "product.template"
+    _inherit = ["product.template"]
 
     bom_line_ids = fields.One2many('mrp.bom.line', 'product_tmpl_id', 'BoM Components')
     bom_ids = fields.One2many('mrp.bom', 'product_tmpl_id', 'Bill of Materials')
@@ -112,7 +113,7 @@ class ProductTemplate(models.Model):
 
 
 class ProductProduct(models.Model):
-    _inherit = "product.product"
+    _inherit = ["product.product"]
 
     variant_bom_ids = fields.One2many('mrp.bom', 'product_id', 'BOM Product Variants')
     bom_line_ids = fields.One2many('mrp.bom.line', 'product_id', 'BoM Components')

--- a/addons/mrp/models/product_document.py
+++ b/addons/mrp/models/product_document.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class ProductDocument(models.Model):
-    _inherit = 'product.document'
+    _inherit = ['product.document']
 
     def _default_attached_on_mrp(self):
         return "bom" if self.env.context.get('attached_on_bom') else "hidden"

--- a/addons/mrp/models/res_company.py
+++ b/addons/mrp/models/res_company.py
@@ -4,8 +4,8 @@
 from odoo import api, fields, models
 
 
-class Company(models.Model):
-    _inherit = 'res.company'
+class ResCompany(models.Model):
+    _inherit = ['res.company']
 
     manufacturing_lead = fields.Float(
         'Manufacturing Lead Time', default=0.0, required=True,
@@ -34,5 +34,5 @@ class Company(models.Model):
         company_todo_sequence._create_unbuild_sequence()
 
     def _create_per_company_sequences(self):
-        super(Company, self)._create_per_company_sequences()
+        super()._create_per_company_sequences()
         self._create_unbuild_sequence()

--- a/addons/mrp/models/res_config_settings.py
+++ b/addons/mrp/models/res_config_settings.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = 'res.config.settings'
+    _inherit = ['res.config.settings']
 
     manufacturing_lead = fields.Float(related='company_id.manufacturing_lead', string="Manufacturing Lead Time", readonly=False)
     use_manufacturing_lead = fields.Boolean(string="Default Manufacturing Lead Time", config_parameter='mrp.use_manufacturing_lead')

--- a/addons/mrp/models/stock_lot.py
+++ b/addons/mrp/models/stock_lot.py
@@ -6,7 +6,7 @@ from odoo.exceptions import UserError
 
 
 class StockLot(models.Model):
-    _inherit = 'stock.lot'
+    _inherit = ['stock.lot']
 
     def _check_create(self):
         active_mo_id = self.env.context.get('active_mo_id')

--- a/addons/mrp/models/stock_move.py
+++ b/addons/mrp/models/stock_move.py
@@ -10,7 +10,7 @@ from odoo.exceptions import ValidationError
 
 
 class StockMoveLine(models.Model):
-    _inherit = 'stock.move.line'
+    _inherit = ['stock.move.line']
 
     workorder_id = fields.Many2one('mrp.workorder', 'Work Order', check_company=True)
     production_id = fields.Many2one('mrp.production', 'Production Order', check_company=True)
@@ -181,7 +181,7 @@ class StockMoveLine(models.Model):
 
 
 class StockMove(models.Model):
-    _inherit = 'stock.move'
+    _inherit = ['stock.move']
 
     created_production_id = fields.Many2one('mrp.production', 'Created Production Order', check_company=True, index=True)
     production_id = fields.Many2one(

--- a/addons/mrp/models/stock_orderpoint.py
+++ b/addons/mrp/models/stock_orderpoint.py
@@ -9,7 +9,7 @@ from datetime import datetime, time
 
 
 class StockWarehouseOrderpoint(models.Model):
-    _inherit = 'stock.warehouse.orderpoint'
+    _inherit = ['stock.warehouse.orderpoint']
 
     show_bom = fields.Boolean('Show BoM column', compute='_compute_show_bom')
     bom_id = fields.Many2one(

--- a/addons/mrp/models/stock_picking.py
+++ b/addons/mrp/models/stock_picking.py
@@ -8,7 +8,7 @@ from odoo.osv import expression
 
 
 class StockPickingType(models.Model):
-    _inherit = 'stock.picking.type'
+    _inherit = ['stock.picking.type']
 
     code = fields.Selection(selection_add=[
         ('mrp_operation', 'Manufacturing')
@@ -116,8 +116,9 @@ class StockPickingType(models.Model):
         mrp_records = [(i, d, self.env._('Confirmed')) for i, d in picking_type_id_to_dates.items()]
         return records + mrp_records
 
+
 class StockPicking(models.Model):
-    _inherit = 'stock.picking'
+    _inherit = ['stock.picking']
 
     has_kits = fields.Boolean(compute='_compute_has_kits')
     production_count = fields.Integer(

--- a/addons/mrp/models/stock_quant.py
+++ b/addons/mrp/models/stock_quant.py
@@ -3,7 +3,7 @@ from odoo.exceptions import UserError
 
 
 class StockQuant(models.Model):
-    _inherit = 'stock.quant'
+    _inherit = ['stock.quant']
 
     @api.constrains('product_id')
     def _check_kits(self):

--- a/addons/mrp/models/stock_replenish_mixin.py
+++ b/addons/mrp/models/stock_replenish_mixin.py
@@ -3,8 +3,8 @@
 from odoo import api, fields, models
 
 
-class ProductReplenishMixin(models.AbstractModel):
-    _inherit = 'stock.replenish.mixin'
+class StockReplenishMixin(models.AbstractModel):
+    _inherit = ['stock.replenish.mixin']
 
     bom_id = fields.Many2one('mrp.bom', string="Bill of Material")
     show_bom = fields.Boolean(compute='_compute_show_bom')

--- a/addons/mrp/models/stock_rule.py
+++ b/addons/mrp/models/stock_rule.py
@@ -11,7 +11,7 @@ from odoo.tools import float_compare, OrderedSet
 
 
 class StockRule(models.Model):
-    _inherit = 'stock.rule'
+    _inherit = ['stock.rule']
     action = fields.Selection(selection_add=[
         ('manufacture', 'Manufacture')
     ], ondelete={'manufacture': 'cascade'})
@@ -233,7 +233,7 @@ class StockRule(models.Model):
 
 
 class ProcurementGroup(models.Model):
-    _inherit = 'procurement.group'
+    _inherit = ['procurement.group']
 
     mrp_production_ids = fields.One2many('mrp.production', 'procurement_group_id')
 

--- a/addons/mrp/models/stock_scrap.py
+++ b/addons/mrp/models/stock_scrap.py
@@ -5,7 +5,7 @@ from odoo import _, api, fields, models
 
 
 class StockScrap(models.Model):
-    _inherit = 'stock.scrap'
+    _inherit = ['stock.scrap']
 
     production_id = fields.Many2one(
         'mrp.production', 'Manufacturing Order',

--- a/addons/mrp/models/stock_traceability.py
+++ b/addons/mrp/models/stock_traceability.py
@@ -1,11 +1,12 @@
 from odoo import models, api
 
-class MrpStockReport(models.TransientModel):
-    _inherit = 'stock.traceability.report'
+
+class StockTraceabilityReport(models.TransientModel):
+    _inherit = ['stock.traceability.report']
 
     @api.model
     def _get_reference(self, move_line):
-        res_model, res_id, ref = super(MrpStockReport, self)._get_reference(move_line)
+        res_model, res_id, ref = super()._get_reference(move_line)
         if move_line.move_id.production_id and not move_line.move_id.scrapped:
             res_model = 'mrp.production'
             res_id = move_line.move_id.production_id.id
@@ -26,7 +27,7 @@ class MrpStockReport(models.TransientModel):
 
     @api.model
     def _get_linked_move_lines(self, move_line):
-        move_lines, is_used = super(MrpStockReport, self)._get_linked_move_lines(move_line)
+        move_lines, is_used = super()._get_linked_move_lines(move_line)
         if not move_lines:
             move_lines = (move_line.move_id.consume_unbuild_id and move_line.produce_line_ids) or (move_line.move_id.production_id and move_line.consume_line_ids)
         if not is_used:

--- a/addons/mrp/models/stock_warehouse.py
+++ b/addons/mrp/models/stock_warehouse.py
@@ -7,7 +7,7 @@ from odoo.tools import split_every
 
 
 class StockWarehouse(models.Model):
-    _inherit = 'stock.warehouse'
+    _inherit = ['stock.warehouse']
 
     manufacture_to_resupply = fields.Boolean(
         'Manufacture to Resupply', default=True,
@@ -279,8 +279,9 @@ class StockWarehouse(models.Model):
                 warehouse.manufacture_pull_id.write({'name': warehouse.manufacture_pull_id.name.replace(warehouse.name, name, 1)})
         return res
 
-class Orderpoint(models.Model):
-    _inherit = "stock.warehouse.orderpoint"
+
+class StockWarehouseOrderpoint(models.Model):
+    _inherit = ["stock.warehouse.orderpoint"]
 
     @api.constrains('product_id')
     def check_product_is_not_kit(self):
