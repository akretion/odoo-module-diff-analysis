PR: https://github.com/odoo/odoo/pull/

From: 1909a70cee43755ddde782cd0268ad8f3ebe8627
From: Mitali Patel
Date: 2018-07-19 09:26:47

Structural Changes: 3
Total Changes: 31

[IMP] sale_management: implement digest KPIs / tips

Purpose of this commit is to send sales details KPIs in digest email. Those are
added in the default digest template.

This commit is linked to task ID 30655 and PR #18318.

================================= pseudo patch: =================================

--- a/None
+++ b/addons/sale_management/models/__init__.py
@@ -0,0 +1,3 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+from . import digest

--- a/None
+++ b/addons/sale_management/models/digest.py
@@ -0,0 +1,28 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import fields, models, _
+from odoo.exceptions import AccessError
+
+
+class Digest(models.Model):
+    _inherit = 'digest.digest'
+
+    kpi_all_sale_total = fields.Boolean('All Sales')
+    kpi_all_sale_total_value = fields.Monetary(compute='_compute_kpi_sale_total_value')
+
+    def _compute_kpi_sale_total_value(self):
+        if not self.env.user.has_group('sales_team.group_sale_salesman_all_leads'):
+            raise AccessError(_("Do not have access, skip this data for user's digest email"))
+        for record in self:
+            start, end, company = record._get_kpi_compute_parameters()
+            all_channels_sales = self.env['sale.report'].read_group([
+                ('confirmation_date', '>=', start),
+                ('confirmation_date', '<', end),
+                ('company_id', '=', company.id)], ['price_total'], ['price_total'])
+            record.kpi_all_sale_total_value = sum([channel_sale['price_total'] for channel_sale in all_channels_sales])
+
+    def compute_kpis_actions(self, company, user):
+        res = super(Digest, self).compute_kpis_actions(company, user)
+        res['kpi_all_sale_total'] = 'sale.report_all_channels_sales_action&menu_id=%s' % self.env.ref('sale.sale_menu_root').id
+        return res
