PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:4 + add:0, change matches:
-    _inherit = ['iap.account']
-    _inherit = ['ir.model']
-    _inherit = ['mail.followers']
-    _inherit = ['mail.notification']

Total Changes: 12

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/sms/models/iap_account.py
+++ b/addons/sms/models/iap_account.py
@@ -4,7 +4,7 @@ from odoo import fields, models, _
 
 
 class IapAccount(models.Model):
-    _inherit = ['iap.account']
+    _inherit = 'iap.account'
 
     sender_name = fields.Char(help="This is the name that will be displayed as the sender of the SMS.", readonly=True)
 

--- a/addons/sms/models/ir_model.py
+++ b/addons/sms/models/ir_model.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class IrModel(models.Model):
-    _inherit = ['ir.model']
+    _inherit = 'ir.model'
 
     is_mail_thread_sms = fields.Boolean(
         string="Mail Thread SMS", default=False,

--- a/addons/sms/models/mail_followers.py
+++ b/addons/sms/models/mail_followers.py
@@ -5,7 +5,7 @@ from odoo import models
 
 
 class MailFollowers(models.Model):
-    _inherit = ['mail.followers']
+    _inherit = 'mail.followers'
 
     def _get_recipient_data(self, records, message_type, subtype_id, pids=None):
         recipients_data = super()._get_recipient_data(records, message_type, subtype_id, pids=pids)

--- a/addons/sms/models/mail_notification.py
+++ b/addons/sms/models/mail_notification.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class MailNotification(models.Model):
-    _inherit = ['mail.notification']
+    _inherit = 'mail.notification'
 
     notification_type = fields.Selection(selection_add=[
         ('sms', 'SMS')

--- a/addons/sms/models/mail_thread.py
+++ b/addons/sms/models/mail_thread.py
@@ -11,7 +11,7 @@ _logger = logging.getLogger(__name__)
 
 
 class MailThread(models.AbstractModel):
-    _inherit = ['mail.thread']
+    _inherit = 'mail.thread'
 
     message_has_sms_error = fields.Boolean(
         'SMS Delivery error', compute='_compute_message_has_sms_error', search='_search_message_has_sms_error',

--- a/addons/sms/models/res_partner.py
+++ b/addons/sms/models/res_partner.py
@@ -5,4 +5,5 @@ from odoo import models
 
 
 class ResPartner(models.Model):
+    _name = 'res.partner'
     _inherit = ['mail.thread.phone', 'res.partner']

--- a/addons/sms/models/sms_sms.py
+++ b/addons/sms/models/sms_sms.py
@@ -14,6 +14,7 @@ _logger = logging.getLogger(__name__)
 
 
 class SmsSms(models.Model):
+    _name = 'sms.sms'
     _description = 'Outgoing SMS'
     _rec_name = 'number'
     _order = 'id DESC'
