PR: https://github.com/odoo/odoo/pull/

From: 3da477dfc5f98f092cda1ead73ea87372fac6bd2
From: Adrian Torres
Date: 2019-11-07 08:39:17

Structural Changes: 8
Total Changes: 8

[FIX] *: adapt code to comply with new ondelete policy

The ondelete policy must be explicitly set for m2o fields whose inverse
is a reflection model (ir.*)

================================= pseudo patch: =================================

--- a/odoo/addons/base/models/ir_actions.py
+++ b/odoo/addons/base/models/ir_actions.py
@@ -576,7 +576,7 @@ class IrServerObjectLines(models.Model):
     _sequence = 'ir_actions_id_seq'
 
     server_id = fields.Many2one('ir.actions.server', string='Related Server Action', ondelete='cascade')
-    col1 = fields.Many2one('ir.model.fields', string='Field', required=True)
+    col1 = fields.Many2one('ir.model.fields', string='Field', required=True, ondelete='cascade')
     value = fields.Text(required=True, help="Expression containing a value specification. \n"
                                             "When Formula type is selected, this field may be a Python expression "
                                             " that can use the same values as for the code field on the server action.\n"

--- a/odoo/addons/base/models/ir_model.py
+++ b/odoo/addons/base/models/ir_model.py
@@ -1201,7 +1201,7 @@ class IrModelConstraint(models.Model):
     definition = fields.Char(help="PostgreSQL constraint definition")
     message = fields.Char(help="Error message returned when the constraint is violated.", translate=True)
     model = fields.Many2one('ir.model', required=True, ondelete="cascade", index=True)
-    module = fields.Many2one('ir.module.module', required=True, index=True)
+    module = fields.Many2one('ir.module.module', required=True, index=True, ondelete='cascade')
     type = fields.Char(string='Constraint Type', required=True, size=1, index=True,
                        help="Type of the constraint: `f` for a foreign key, "
                             "`u` for other constraints.")
@@ -1337,8 +1337,8 @@ class IrModelRelation(models.Model):
 
     name = fields.Char(string='Relation Name', required=True, index=True,
                        help="PostgreSQL table name implementing a many2many relation.")
-    model = fields.Many2one('ir.model', required=True, index=True)
-    module = fields.Many2one('ir.module.module', required=True, index=True)
+    model = fields.Many2one('ir.model', required=True, index=True, ondelete='cascade')
+    module = fields.Many2one('ir.module.module', required=True, index=True, ondelete='cascade')
     write_date = fields.Datetime()
     create_date = fields.Datetime()
 
