PR: https://github.com/odoo/odoo/pull/121812

From: baefb74b04386641742993b9a51cacb85353d385
From: Ricardo Gomes Rodrigues (rigr)
Date: 2023-05-19 14:42:02

Structural Changes: 6
Total Changes: 39

[IMP] account: deferred management

This commit refactors completely how deferred revenues and expenses are managed:
- they are now completely unrelated to the model of Assets:
    - the link is directly done between the original move and its deferred moves
    - no need to create an deferred models in advance
- a new option to group deferred entries together is available
    - this is specially useful for big DBs with lots of subscriptions for instance
- two new reports are available to have an overview of all deferred revenues and expenses for each account
    - where the user can also generate the grouped deferred entries manually

task-id 3225099

closes odoo/odoo#121812

X-original-commit: e3d5c06a59fae862add2f36373882f696c225310
Related: odoo/enterprise#41255
Signed-off-by: William Andr√© (wan) <wan@odoo.com>

================================= pseudo patch: =================================

--- a/addons/account/models/account_move.py
+++ b/addons/account/models/account_move.py
@@ -3404,6 +3404,21 @@ class AccountMove(models.Model):
 
         return reverse_moves
 
+    def _unlink_or_reverse(self):
+        if not self:
+            return
+        to_reverse = self.env['account.move']
+        to_cancel = self.env['account.move']
+        lock_date = self.company_id._get_user_fiscal_lock_date()
+        for move in self:
+            if move.inalterable_hash or move.date <= lock_date:
+                to_reverse += move
+            else:
+                to_cancel += move
+        to_reverse._reverse_moves(cancel=True)
+        to_cancel.button_draft()
+        to_cancel.filtered(lambda m: m.state == 'draft').unlink()
+
     def _post(self, soft=True):
         """Post/Validate the documents.
 

--- a/addons/account/models/company.py
+++ b/addons/account/models/company.py
@@ -61,11 +61,11 @@ class ResCompany(models.Model):
     chart_template = fields.Selection(selection='_chart_template_selection')
     bank_account_code_prefix = fields.Char(string='Prefix of the bank accounts')
     cash_account_code_prefix = fields.Char(string='Prefix of the cash accounts')
-    default_cash_difference_income_account_id = fields.Many2one('account.account', string="Cash Difference Income Account")
-    default_cash_difference_expense_account_id = fields.Many2one('account.account', string="Cash Difference Expense Account")
+    default_cash_difference_income_account_id = fields.Many2one('account.account', string="Cash Difference Income")
+    default_cash_difference_expense_account_id = fields.Many2one('account.account', string="Cash Difference Expense")
     account_journal_suspense_account_id = fields.Many2one('account.account', string='Journal Suspense Account')
-    account_journal_payment_debit_account_id = fields.Many2one('account.account', string='Journal Outstanding Receipts Account')
-    account_journal_payment_credit_account_id = fields.Many2one('account.account', string='Journal Outstanding Payments Account')
+    account_journal_payment_debit_account_id = fields.Many2one('account.account', string='Journal Outstanding Receipts')
+    account_journal_payment_credit_account_id = fields.Many2one('account.account', string='Journal Outstanding Payments')
     account_journal_early_pay_discount_gain_account_id = fields.Many2one(comodel_name='account.account', string='Cash Discount Write-Off Gain Account')
     account_journal_early_pay_discount_loss_account_id = fields.Many2one(comodel_name='account.account', string='Cash Discount Write-Off Loss Account')
     transfer_account_code_prefix = fields.Char(string='Prefix of the transfer accounts')

--- a/addons/account/models/res_config_settings.py
+++ b/addons/account/models/res_config_settings.py
@@ -19,14 +19,14 @@ class ResConfigSettings(models.TransientModel):
     income_currency_exchange_account_id = fields.Many2one(
         comodel_name="account.account",
         related="company_id.income_currency_exchange_account_id",
-        string="Gain Account",
+        string="Gain Exchange Rate Account",
         readonly=False,
         domain="[('deprecated', '=', False), ('company_id', '=', company_id),\
                 ('account_type', 'in', ('income', 'income_other'))]")
     expense_currency_exchange_account_id = fields.Many2one(
         comodel_name="account.account",
         related="company_id.expense_currency_exchange_account_id",
-        string="Loss Account",
+        string="Loss Exchange Rate Account",
         readonly=False,
         domain="[('deprecated', '=', False), ('company_id', '=', company_id),\
                 ('account_type', '=', 'expense')]")
@@ -38,7 +38,7 @@ class ResConfigSettings(models.TransientModel):
         related='company_id.tax_calculation_rounding_method', string='Tax calculation rounding method', readonly=False)
     account_journal_suspense_account_id = fields.Many2one(
         comodel_name='account.account',
-        string='Bank Suspense Account',
+        string='Bank Suspense',
         readonly=False,
         related='company_id.account_journal_suspense_account_id',
         domain="[('deprecated', '=', False), ('company_id', '=', company_id), ('account_type', 'in', ('asset_current', 'liability_current'))]",
@@ -47,7 +47,7 @@ class ResConfigSettings(models.TransientModel):
              'Reconciliation replaces the latter by the definitive account(s).')
     account_journal_payment_debit_account_id = fields.Many2one(
         comodel_name='account.account',
-        string='Outstanding Receipts Account',
+        string='Outstanding Receipts',
         readonly=False,
         related='company_id.account_journal_payment_debit_account_id',
         domain="[('deprecated', '=', False), ('company_id', '=', company_id), ('account_type', '=', 'asset_current')]",
@@ -57,14 +57,14 @@ class ResConfigSettings(models.TransientModel):
              'Account.')
     account_journal_payment_credit_account_id = fields.Many2one(
         comodel_name='account.account',
-        string='Outstanding Payments Account',
+        string='Outstanding Payments',
         readonly=False,
         related='company_id.account_journal_payment_credit_account_id',
         domain="[('deprecated', '=', False), ('company_id', '=', company_id), ('account_type', '=', 'asset_current')]",
         help='Outgoing Payments are posted on an Outstanding Payments Account. '
              'In the bank reconciliation widget, they appear as blue lines.\n'
              'Bank transactions are then reconciled on the Outstanding Payments Account rather the Payable Account.')
-    transfer_account_id = fields.Many2one('account.account', string="Internal Transfer Account",
+    transfer_account_id = fields.Many2one('account.account', string="Internal Transfer",
         related='company_id.transfer_account_id', readonly=False,
         domain="[('reconcile', '=', True), ('account_type', '=', 'asset_current')]",
         help="Intermediary account used when moving from a liquidity account to another.")
@@ -146,7 +146,7 @@ class ResConfigSettings(models.TransientModel):
 
     account_journal_early_pay_discount_loss_account_id = fields.Many2one(
         comodel_name='account.account',
-        string='Cash Discount Loss account',
+        string='Cash Discount Loss',
         help='Account for the difference amount after the expense discount has been granted',
         readonly=False,
         related='company_id.account_journal_early_pay_discount_loss_account_id',
@@ -154,7 +154,7 @@ class ResConfigSettings(models.TransientModel):
     )
     account_journal_early_pay_discount_gain_account_id = fields.Many2one(
         comodel_name='account.account',
-        string='Cash Discount Gain account',
+        string='Cash Discount Gain',
         help='Account for the difference amount after the income discount has been granted',
         readonly=False,
         related='company_id.account_journal_early_pay_discount_gain_account_id',
