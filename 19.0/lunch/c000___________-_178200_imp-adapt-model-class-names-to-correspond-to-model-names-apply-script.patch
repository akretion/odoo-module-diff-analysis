PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:5 + add:0, change matches:
-    _inherit = 'image.mixin'
-    _inherit = 'image.mixin'
-    _inherit = 'res.company'
-    _inherit = 'res.config.settings'
-    _inherit = 'res.users'

Total Changes: 23

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/lunch/models/lunch_alert.py
+++ b/addons/lunch/models/lunch_alert.py
@@ -19,7 +19,6 @@ CRON_DEPENDS = {'name', 'active', 'mode', 'until', 'notification_time', 'notific
 class LunchAlert(models.Model):
     """ Alerts to display during a lunch order. An alert can be specific to a
     given day, weekly or daily. The alert is displayed from start to end hour. """
-    _name = 'lunch.alert'
     _description = 'Lunch Alert'
     _order = 'write_date desc, id'
 

--- a/addons/lunch/models/lunch_cashmove.py
+++ b/addons/lunch/models/lunch_cashmove.py
@@ -5,9 +5,8 @@ from odoo import api, fields, models, _
 from odoo.tools import float_round
 
 
-class LunchCashMove(models.Model):
+class LunchCashmove(models.Model):
     """ Two types of cashmoves: payment (credit) or order (debit) """
-    _name = 'lunch.cashmove'
     _description = 'Lunch Cashmove'
     _order = 'date desc'
 

--- a/addons/lunch/models/lunch_location.py
+++ b/addons/lunch/models/lunch_location.py
@@ -5,7 +5,6 @@ from odoo import fields, models
 
 
 class LunchLocation(models.Model):
-    _name = 'lunch.location'
     _description = 'Lunch Locations'
 
     name = fields.Char('Location Name', required=True)

--- a/addons/lunch/models/lunch_order.py
+++ b/addons/lunch/models/lunch_order.py
@@ -7,7 +7,6 @@ from odoo.osv.expression import AND
 
 
 class LunchOrder(models.Model):
-    _name = 'lunch.order'
     _description = 'Lunch Order'
     _order = 'id desc'
     _display_name = 'product_id'

--- a/addons/lunch/models/lunch_product.py
+++ b/addons/lunch/models/lunch_product.py
@@ -12,9 +12,8 @@ from odoo.osv import expression
 
 class LunchProduct(models.Model):
     """ Products available to order. A product is linked to a specific vendor. """
-    _name = 'lunch.product'
     _description = 'Lunch Product'
-    _inherit = 'image.mixin'
+    _inherit = ['image.mixin']
     _order = 'name'
     _check_company_auto = True
 

--- a/addons/lunch/models/lunch_product_category.py
+++ b/addons/lunch/models/lunch_product_category.py
@@ -10,8 +10,7 @@ from odoo.tools.misc import file_open
 
 class LunchProductCategory(models.Model):
     """ Category of the product such as pizza, sandwich, pasta, chinese, burger... """
-    _name = 'lunch.product.category'
-    _inherit = 'image.mixin'
+    _inherit = ['image.mixin']
     _description = 'Lunch Product Category'
 
     @api.model

--- a/addons/lunch/models/lunch_supplier.py
+++ b/addons/lunch/models/lunch_supplier.py
@@ -30,8 +30,8 @@ def float_to_time(hours, moment='am'):
 def time_to_float(t):
     return float_round(t.hour + t.minute/60 + t.second/3600, precision_digits=2)
 
+
 class LunchSupplier(models.Model):
-    _name = 'lunch.supplier'
     _description = 'Lunch Supplier'
     _inherit = ['mail.thread', 'mail.activity.mixin']
 

--- a/addons/lunch/models/lunch_topping.py
+++ b/addons/lunch/models/lunch_topping.py
@@ -7,7 +7,6 @@ from odoo.tools import formatLang
 
 
 class LunchTopping(models.Model):
-    _name = 'lunch.topping'
     _description = 'Lunch Extras'
 
     name = fields.Char('Name', required=True)

--- a/addons/lunch/models/res_company.py
+++ b/addons/lunch/models/res_company.py
@@ -4,8 +4,8 @@
 from odoo import models, fields
 
 
-class Company(models.Model):
-    _inherit = 'res.company'
+class ResCompany(models.Model):
+    _inherit = ['res.company']
 
     lunch_minimum_threshold = fields.Float()
     lunch_notify_message = fields.Html(

--- a/addons/lunch/models/res_config_settings.py
+++ b/addons/lunch/models/res_config_settings.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = 'res.config.settings'
+    _inherit = ['res.config.settings']
 
     currency_id = fields.Many2one('res.currency', related='company_id.currency_id')
     company_lunch_minimum_threshold = fields.Float(string="Maximum Allowed Overdraft", readonly=False, related='company_id.lunch_minimum_threshold')

--- a/addons/lunch/models/res_users.py
+++ b/addons/lunch/models/res_users.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class ResUsers(models.Model):
-    _inherit = 'res.users'
+    _inherit = ['res.users']
 
     last_lunch_location_id = fields.Many2one('lunch.location')
     favorite_lunch_product_ids = fields.Many2many('lunch.product', 'lunch_product_favorite_user_rel', 'user_id', 'product_id')
