PR: https://github.com/odoo/odoo/pull/

From: 960360afe478a8f7b9c456721b5591154952a37d
From: Raphael Collet
Date: 2018-08-06 12:37:19

Structural Changes: 8
Total Changes: 16

[REF] *: use native date/datetime for Date/Datetime fields

From this commit onwards, Date fields will return datetime.date objects and Datetime fields will return datetime.datetime objects, this implies a number of things that are clearly explained both in the ORM API for master.

This commit also introduces a number of helper functions for dates and datetimes that are exposed in tools.date_utils and fields.Date[time], explained in the documentation as well.

Task-ID: 47189

================================= pseudo patch: =================================

--- a/addons/hr_holidays/models/hr_leave.py
+++ b/addons/hr_holidays/models/hr_leave.py
@@ -376,12 +376,12 @@ class HolidaysRequest(models.Model):
     def _check_leave_type_validity(self):
         for leave in self:
             if leave.holiday_status_id.validity_start and leave.holiday_status_id.validity_stop:
-                vstart = fields.Datetime.from_string(leave.holiday_status_id.validity_start)
-                vstop  = fields.Datetime.from_string(leave.holiday_status_id.validity_stop)
-                dfrom  = fields.Datetime.from_string(leave.date_from)
-                dto    = fields.Datetime.from_string(leave.date_to)
+                vstart = leave.holiday_status_id.validity_start
+                vstop  = leave.holiday_status_id.validity_stop
+                dfrom  = leave.date_from
+                dto    = leave.date_to
 
-                if dfrom and dto and (dfrom < vstart or dto > vstop):
+                if dfrom and dto and (dfrom.date() < vstart or dto.date() > vstop):
                     raise UserError(_('You can take %s only between %s and %s') % (leave.holiday_status_id.display_name, \
                                                                                   leave.holiday_status_id.validity_start, leave.holiday_status_id.validity_stop))
 

--- a/addons/hr_holidays/models/hr_leave_allocation.py
+++ b/addons/hr_holidays/models/hr_leave_allocation.py
@@ -288,9 +288,9 @@ class HolidaysAllocation(models.Model):
     def _check_leave_type_validity(self):
         for allocation in self:
             if allocation.holiday_status_id.validity_start and allocation.holiday_status_id.validity_stop:
-                vstart = fields.Datetime.from_string(allocation.holiday_status_id.validity_start)
-                vstop = fields.Datetime.from_string(allocation.holiday_status_id.validity_stop)
-                today = fields.Datetime.from_string(fields.Datetime.now())
+                vstart = allocation.holiday_status_id.validity_start
+                vstop = allocation.holiday_status_id.validity_stop
+                today = fields.Date.today()
 
                 if vstart > today or vstop < today:
                     raise UserError(_('You can allocate %s only between %s and %s') % (allocation.holiday_status_id.display_name,
