PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:6 + add:0, change matches:
-    _inherit = 'ir.actions.report'
-    _inherit = 'mail.message'
-    _inherit = 'mail.notification'
-    _inherit = "res.company"
-    _inherit = 'res.config.settings'
-    _inherit = "res.partner"

Total Changes: 22

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/snailmail/models/ir_actions_report.py
+++ b/addons/snailmail/models/ir_actions_report.py
@@ -4,7 +4,7 @@ from odoo import api, models
 
 
 class IrActionsReport(models.Model):
-    _inherit = 'ir.actions.report'
+    _inherit = ['ir.actions.report']
 
     def retrieve_attachment(self, record):
         # Override this method in order to force to re-render the pdf in case of

--- a/addons/snailmail/models/mail_message.py
+++ b/addons/snailmail/models/mail_message.py
@@ -2,8 +2,8 @@
 from odoo import api, fields, models
 
 
-class Message(models.Model):
-    _inherit = 'mail.message'
+class MailMessage(models.Model):
+    _inherit = ['mail.message']
 
     snailmail_error = fields.Boolean(
         string="Snailmail message in error",

--- a/addons/snailmail/models/mail_notification.py
+++ b/addons/snailmail/models/mail_notification.py
@@ -3,8 +3,8 @@
 from odoo import fields, models
 
 
-class Notification(models.Model):
-    _inherit = 'mail.notification'
+class MailNotification(models.Model):
+    _inherit = ['mail.notification']
 
     notification_type = fields.Selection(selection_add=[('snail', 'Snailmail')], ondelete={'snail': 'cascade'})
     letter_id = fields.Many2one('snailmail.letter', string="Snailmail Letter", index='btree_not_null', ondelete='cascade')

--- a/addons/snailmail/models/mail_thread.py
+++ b/addons/snailmail/models/mail_thread.py
@@ -6,7 +6,7 @@ from odoo import api
 
 
 class MailThread(models.AbstractModel):
-    _inherit = 'mail.thread'
+    _inherit = ['mail.thread']
 
     def _notify_cancel_snail(self):
         author_id = self.env.user.id

--- a/addons/snailmail/models/res_company.py
+++ b/addons/snailmail/models/res_company.py
@@ -3,8 +3,9 @@
 
 from odoo import fields, models
 
-class Company(models.Model):
-    _inherit = "res.company"
+
+class ResCompany(models.Model):
+    _inherit = ["res.company"]
 
     snailmail_color = fields.Boolean(default=True)
     snailmail_cover = fields.Boolean(string='Add a Cover Page', default=False)

--- a/addons/snailmail/models/res_config_settings.py
+++ b/addons/snailmail/models/res_config_settings.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class ResConfigSettings(models.TransientModel):	
-    _inherit = 'res.config.settings'	
+    _inherit = ['res.config.settings']
 
     snailmail_color = fields.Boolean(string='Print In Color', related='company_id.snailmail_color', readonly=False)
     snailmail_cover = fields.Boolean(string='Add a Cover Page', related='company_id.snailmail_cover', readonly=False)

--- a/addons/snailmail/models/res_partner.py
+++ b/addons/snailmail/models/res_partner.py
@@ -7,7 +7,7 @@ from odoo.addons.snailmail.country_utils import SNAILMAIL_COUNTRIES
 
 
 class ResPartner(models.Model):
-    _inherit = "res.partner"
+    _inherit = ["res.partner"]
 
     def write(self, vals):
         letter_address_vals = {}

--- a/addons/snailmail/models/snailmail_letter.py
+++ b/addons/snailmail/models/snailmail_letter.py
@@ -32,7 +32,6 @@ ERROR_CODES = [
 
 
 class SnailmailLetter(models.Model):
-    _name = 'snailmail.letter'
     _description = 'Snailmail Letter'
 
     user_id = fields.Many2one('res.users', 'Sent by')
