PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:20 + add:0, change matches:
-    _inherit = ['account.move']
-    _inherit = ['account.move.line']
-    _inherit = ["product.category"]
-    _inherit = ['product.template']
-    _inherit = ['product.product']
-    _inherit = ['product.supplierinfo']
-    _inherit = ['purchase.order']
-    _inherit = ['purchase.order.line']
-    _inherit = ['res.company']
-    _inherit = ['res.config.settings']
-    _inherit = ['res.partner']
-    _inherit = ['stock.picking']
-    _inherit = ['stock.warehouse']
-    _inherit = ["stock.return.picking"]
-    _inherit = ["stock.warehouse.orderpoint"]
-    _inherit = ['stock.lot']
-    _inherit = ['procurement.group']
-    _inherit = ['stock.move']
-    _inherit = ['stock.rule']
-    _inherit = ['stock.valuation.layer']

Total Changes: 42

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/purchase_stock/models/account_invoice.py
+++ b/addons/purchase_stock/models/account_invoice.py
@@ -7,7 +7,7 @@ from odoo.tools.misc import unique
 
 
 class AccountMove(models.Model):
-    _inherit = ['account.move']
+    _inherit = 'account.move'
 
     def _stock_account_prepare_anglo_saxon_in_lines_vals(self):
         ''' Prepare values used to create the journal items (account.move.line) corresponding to the price difference

--- a/addons/purchase_stock/models/account_move_line.py
+++ b/addons/purchase_stock/models/account_move_line.py
@@ -8,7 +8,7 @@ from collections import defaultdict
 
 
 class AccountMoveLine(models.Model):
-    _inherit = ['account.move.line']
+    _inherit = 'account.move.line'
 
     def _get_valued_in_moves(self):
         self.ensure_one()

--- a/addons/purchase_stock/models/product.py
+++ b/addons/purchase_stock/models/product.py
@@ -6,7 +6,7 @@ from odoo.osv import expression
 
 
 class ProductCategory(models.Model):
-    _inherit = ["product.category"]
+    _inherit = "product.category"
 
     property_account_creditor_price_difference_categ = fields.Many2one(
         'account.account', string="Price Difference Account",
@@ -15,7 +15,7 @@ class ProductCategory(models.Model):
 
 
 class ProductTemplate(models.Model):
-    _inherit = ['product.template']
+    _inherit = 'product.template'
 
     property_account_creditor_price_difference = fields.Many2one(
         'account.account', string="Price Difference Account", company_dependent=True, ondelete='restrict',
@@ -33,7 +33,7 @@ class ProductTemplate(models.Model):
 
 
 class ProductProduct(models.Model):
-    _inherit = ['product.product']
+    _inherit = 'product.product'
 
     purchase_order_line_ids = fields.One2many('purchase.order.line', 'product_id', string="PO Lines") # used to compute quantities
 
@@ -90,7 +90,7 @@ class ProductProduct(models.Model):
 
 
 class ProductSupplierinfo(models.Model):
-    _inherit = ['product.supplierinfo']
+    _inherit = 'product.supplierinfo'
 
     last_purchase_date = fields.Date('Last Purchase', compute='_compute_last_purchase_date')
     show_set_supplier_button = fields.Boolean(

--- a/addons/purchase_stock/models/purchase_order.py
+++ b/addons/purchase_stock/models/purchase_order.py
@@ -10,7 +10,7 @@ from odoo.tools.misc import OrderedSet
 
 
 class PurchaseOrder(models.Model):
-    _inherit = ['purchase.order']
+    _inherit = 'purchase.order'
 
     @api.model
     def _default_picking_type(self):

--- a/addons/purchase_stock/models/purchase_order_line.py
+++ b/addons/purchase_stock/models/purchase_order_line.py
@@ -6,7 +6,7 @@ from odoo.exceptions import UserError
 
 
 class PurchaseOrderLine(models.Model):
-    _inherit = ['purchase.order.line']
+    _inherit = 'purchase.order.line'
 
     def _ondelete_stock_moves(self):
         modified_fields = ['qty_received_manual', 'qty_received_method']

--- a/addons/purchase_stock/models/res_company.py
+++ b/addons/purchase_stock/models/res_company.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class ResCompany(models.Model):
-    _inherit = ['res.company']
+    _inherit = 'res.company'
 
     days_to_purchase = fields.Float(
         string='Days to Purchase',

--- a/addons/purchase_stock/models/res_config_settings.py
+++ b/addons/purchase_stock/models/res_config_settings.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = ['res.config.settings']
+    _inherit = 'res.config.settings'
 
     module_stock_dropshipping = fields.Boolean("Dropshipping")
     days_to_purchase = fields.Float(

--- a/addons/purchase_stock/models/res_partner.py
+++ b/addons/purchase_stock/models/res_partner.py
@@ -8,7 +8,7 @@ from odoo import api, fields, models
 
 
 class ResPartner(models.Model):
-    _inherit = ['res.partner']
+    _inherit = 'res.partner'
 
     purchase_line_ids = fields.One2many('purchase.order.line', 'partner_id', string="Purchase Lines")
     on_time_rate = fields.Float(

--- a/addons/purchase_stock/models/stock.py
+++ b/addons/purchase_stock/models/stock.py
@@ -7,7 +7,7 @@ from odoo.osv.expression import AND
 
 
 class StockPicking(models.Model):
-    _inherit = ['stock.picking']
+    _inherit = 'stock.picking'
 
     purchase_id = fields.Many2one(
         'purchase.order', related='move_ids.purchase_line_id.order_id',
@@ -40,7 +40,7 @@ class StockPicking(models.Model):
 
 
 class StockWarehouse(models.Model):
-    _inherit = ['stock.warehouse']
+    _inherit = 'stock.warehouse'
 
     buy_to_resupply = fields.Boolean('Buy to Resupply', default=True,
                                      help="When products are bought, they can be delivered to this warehouse")
@@ -103,7 +103,7 @@ class StockWarehouse(models.Model):
 
 
 class StockReturnPicking(models.TransientModel):
-    _inherit = ["stock.return.picking"]
+    _inherit = "stock.return.picking"
 
     def _prepare_move_default_values(self, return_line, new_picking):
         vals = super()._prepare_move_default_values(return_line, new_picking)
@@ -119,7 +119,7 @@ class StockReturnPicking(models.TransientModel):
 
 
 class StockWarehouseOrderpoint(models.Model):
-    _inherit = ["stock.warehouse.orderpoint"]
+    _inherit = "stock.warehouse.orderpoint"
 
     show_supplier = fields.Boolean('Show supplier column', compute='_compute_show_suppplier')
     supplier_id = fields.Many2one(
@@ -245,7 +245,7 @@ class StockWarehouseOrderpoint(models.Model):
 
 
 class StockLot(models.Model):
-    _inherit = ['stock.lot']
+    _inherit = 'stock.lot'
 
     purchase_order_ids = fields.Many2many('purchase.order', string="Purchase Orders", compute='_compute_purchase_order_ids', readonly=True, store=False)
     purchase_order_count = fields.Integer('Purchase order count', compute='_compute_purchase_order_ids')
@@ -270,7 +270,7 @@ class StockLot(models.Model):
 
 
 class ProcurementGroup(models.Model):
-    _inherit = ['procurement.group']
+    _inherit = 'procurement.group'
 
     purchase_line_ids = fields.One2many('purchase.order.line', 'group_id', string='Linked Purchase Order Lines', copy=False)
 

--- a/addons/purchase_stock/models/stock_move.py
+++ b/addons/purchase_stock/models/stock_move.py
@@ -8,7 +8,7 @@ from odoo.exceptions import UserError
 
 
 class StockMove(models.Model):
-    _inherit = ['stock.move']
+    _inherit = 'stock.move'
 
     purchase_line_id = fields.Many2one(
         'purchase.order.line', 'Purchase Order Line',

--- a/addons/purchase_stock/models/stock_replenish_mixin.py
+++ b/addons/purchase_stock/models/stock_replenish_mixin.py
@@ -4,7 +4,7 @@ from odoo import api, fields, models
 
 
 class StockReplenishMixin(models.AbstractModel):
-    _inherit = ['stock.replenish.mixin']
+    _inherit = 'stock.replenish.mixin'
 
     supplier_id = fields.Many2one('product.supplierinfo', string="Vendor")
     show_vendor = fields.Boolean(compute='_compute_show_vendor')

--- a/addons/purchase_stock/models/stock_rule.py
+++ b/addons/purchase_stock/models/stock_rule.py
@@ -12,7 +12,7 @@ from odoo.tools import groupby
 
 
 class StockRule(models.Model):
-    _inherit = ['stock.rule']
+    _inherit = 'stock.rule'
 
     action = fields.Selection(selection_add=[
         ('buy', 'Buy')

--- a/addons/purchase_stock/models/stock_valuation_layer.py
+++ b/addons/purchase_stock/models/stock_valuation_layer.py
@@ -2,7 +2,7 @@ from odoo import models
 
 
 class StockValuationLayer(models.Model):
-    _inherit = ['stock.valuation.layer']
+    _inherit = 'stock.valuation.layer'
 
     def _get_layer_price_unit(self):
         """ This function returns the value of product in a layer per unit, relative to the aml
