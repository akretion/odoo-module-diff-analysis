PR: https://github.com/odoo/odoo/pull/58120

From: 76489303c867e3b3f9bacf49543c7281026f5248
From: Laurent Stukkens (LTU)
Date: 2020-11-03 15:08:45

Structural Changes: 5
Total Changes: 26

[IMP] hr_contract: ease contract management through contract history

Before this commit:

    It was complicated to manage the contracts as they were all displayed in
    one view.
    When the contract was a time credit one (which is by definition a temporary
    situation) the data used was based on the time credit and not on the full time
    equivalent. This usually forced the HR to create fake new contracts without
    time credit for the appraisals.

After this commit:

    A new report will ease the followup of contracts with the time running.
    It comes with a new view that highlight the reference information which
    allow to easily manage credit time. Simulation is also made on FTE data which
    eases HR work.
    This commit also fixes a bug in the simulation with the meal voucher (only one
    was taken into account in the summary right panel.
    The wage on signature is now populated when the document is signed.

Closes odoo/odoo#58120
Related PR: odoo/enterprise#13384, odoo/upgrade#1802

task-2326407

Signed-off-by: Yannick Tivisse (yti) <yti@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr_contract/models/hr_contract.py
+++ b/addons/hr_contract/models/hr_contract.py
@@ -23,7 +23,7 @@ class Contract(models.Model):
     job_id = fields.Many2one('hr.job', compute='_compute_employee_contract', store=True, readonly=False,
         domain="['|', ('company_id', '=', False), ('company_id', '=', company_id)]", string='Job Position')
     date_start = fields.Date('Start Date', required=True, default=fields.Date.today, tracking=True,
-        help="Start date of the contract.")
+        help="Start date of the contract.", index=True)
     date_end = fields.Date('End Date', tracking=True,
         help="End date of the contract (if it's a fixed-term contract).")
     trial_date_end = fields.Date('End of Trial Period',
@@ -44,6 +44,7 @@ class Contract(models.Model):
     company_id = fields.Many2one('res.company', compute='_compute_employee_contract', store=True, readonly=False,
         default=lambda self: self.env.company, required=True)
     company_country_id = fields.Many2one('res.country', string="Company country", related='company_id.country_id', readonly=True)
+    contract_type_id = fields.Many2one('hr.contract.type', "Contract Type")
 
     """
         kanban_state:
@@ -230,3 +231,12 @@ class Contract(models.Model):
         elif 'state' in init_values and self.state == 'close':
             return self.env.ref('hr_contract.mt_contract_close')
         return super(Contract, self)._track_subtype(init_values)
+
+    def action_open_contract_form(self):
+        self.ensure_one()
+        return {
+            "type": "ir.actions.act_window",
+            "res_model": "hr.contract",
+            "views": [[False, "form"]],
+            "res_id": self.id,
+        }

--- a/addons/hr_contract/models/hr_contract_type.py
+++ b/addons/hr_contract/models/hr_contract_type.py
@@ -4,6 +4,12 @@
 from odoo import fields, models
 
 
+class ContractType(models.Model):
+    _name = 'hr.contract.type'
+    _description = 'Contract Type'
+
+    name = fields.Char(required=True)
+
 class HrPayrollStructureType(models.Model):
     _name = 'hr.payroll.structure.type'
     _description = 'Contract Type'

--- a/addons/hr_contract/models/hr_employee.py
+++ b/addons/hr_contract/models/hr_employee.py
@@ -15,7 +15,7 @@ class Employee(models.Model):
     calendar_mismatch = fields.Boolean(related='contract_id.calendar_mismatch')
     contracts_count = fields.Integer(compute='_compute_contracts_count', string='Contract Count')
     contract_warning = fields.Boolean(string='Contract Warning', store=True, compute='_compute_contract_warning', groups="hr.group_hr_user")
-    first_contract_date = fields.Date(compute='_compute_first_contract_date', groups="hr.group_hr_user")
+    first_contract_date = fields.Date(compute='_compute_first_contract_date', groups="hr.group_hr_user", store=True)
 
     @api.depends('contract_ids.state')
     def _compute_first_contract_date(self):
@@ -71,3 +71,9 @@ class Employee(models.Model):
                 employee.resource_calendar_id.transfer_leaves_to(employee.contract_id.resource_calendar_id, employee.resource_id)
                 employee.resource_calendar_id = employee.contract_id.resource_calendar_id
         return res
+
+    def action_open_contract_history(self):
+        self.ensure_one()
+        action = self.env["ir.actions.actions"]._for_xml_id('hr_contract.hr_contract_history_view_form_action')
+        action['res_id'] = self.id
+        return action
