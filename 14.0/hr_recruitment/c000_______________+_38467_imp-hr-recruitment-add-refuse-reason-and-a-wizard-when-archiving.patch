PR: https://github.com/odoo/odoo/pull/38467

From: b2a2d0a73055cb3a7cc2fb823d399407019fac9f
From: jbm-odoo
Date: 2019-11-06 11:55:34

Structural Changes: 3
Total Changes: 42

[IMP] hr_recruitment: Add refuse reason and a wizard when archiving

Purpose
=======

Like in crm, having a refusal reason to get some metrics on recruitment
+ recruitement dashboard

id=2003841

closes odoo/odoo#38467

Signed-off-by: Yannick Tivisse (yti) <yti@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr_recruitment/models/hr_recruitment.py
+++ b/addons/hr_recruitment/models/hr_recruitment.py
@@ -165,6 +165,7 @@ class Applicant(models.Model):
     legend_normal = fields.Char(related='stage_id.legend_normal', string='Kanban Ongoing', readonly=False)
     application_count = fields.Integer(compute='_compute_application_count', help='Applications with the same email')
     meeting_count = fields.Integer(compute='_compute_meeting_count', help='Meeting Count')
+    refuse_reason_id = fields.Many2one('hr.applicant.refuse.reason', string='Refuse Reason', tracking=True)
 
     @api.depends('date_open', 'date_closed')
     def _compute_day(self):
@@ -488,12 +489,39 @@ class Applicant(models.Model):
         return dict_act_window
 
     def archive_applicant(self):
-        self.write({'active': False})
+        return {
+            'type': 'ir.actions.act_window',
+            'name': _('Refuse Reason'),
+            'res_model': 'applicant.get.refuse.reason',
+            'view_mode': 'form',
+            'target': 'new',
+            'context': {'default_applicant_ids': self.ids, 'active_test': False},
+            'views': [[False, 'form']]
+        }
 
     def reset_applicant(self):
         """ Reinsert the applicant into the recruitment pipe in the first stage"""
-        default_stage_id = self._default_stage_id()
-        self.write({'active': True, 'stage_id': default_stage_id})
+        default_stage = dict()
+        for job_id in self.mapped('job_id'):
+            default_stage[job_id.id] = self.env['hr.recruitment.stage'].search(
+                ['|',
+                    ('job_ids', '=', False),
+                    ('job_ids', '=', job_id.id),
+                    ('fold', '=', False)
+                ], order='sequence asc', limit=1).id
+        for applicant in self:
+            applicant.write(
+                {'stage_id': default_stage[applicant.job_id.id], 'refuse_reason_id': False})
+
+    def toggle_active(self):
+        res = super(Applicant, self).toggle_active()
+        applicant_active = self.filtered(lambda applicant: applicant.active)
+        if applicant_active:
+            applicant_active.reset_applicant()
+        applicant_inactive = self.filtered(lambda applicant: not applicant.active)
+        if applicant_inactive:
+            return applicant_inactive.archive_applicant()
+        return res
 
 
 class ApplicantCategory(models.Model):
@@ -506,3 +534,11 @@ class ApplicantCategory(models.Model):
     _sql_constraints = [
             ('name_uniq', 'unique (name)', "Tag name already exists !"),
     ]
+
+
+class ApplicantRefuseReason(models.Model):
+    _name = "hr.applicant.refuse.reason"
+    _description = 'Refuse Reason of Applicant'
+
+    name = fields.Char('Description', required=True, translate=True)
+    active = fields.Boolean('Active', default=True)
