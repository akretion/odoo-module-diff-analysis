PR: https://github.com/odoo/odoo/pull/50284

From: dadcec593d8328727b17f218c69fa1bc1433686f
From: Yannick Tivisse (yti)
Date: 2020-06-02 12:11:57

Structural Changes: 2
Total Changes: 62

[IMP] project: Improve global UX (back2basics)

Improve the onboarding of new users and clean a few screens.

Task ID: 2237996

closes odoo/odoo#50284

Related: odoo/enterprise#10536
Signed-off-by: Yannick Tivisse (yti) <yti@odoo.com>
Co-authored-by: dmonzonis <mod@odoo.com>

================================= pseudo patch: =================================

--- a/addons/sale_timesheet/models/project_overview.py
+++ b/addons/sale_timesheet/models/project_overview.py
@@ -396,24 +396,19 @@ class Project(models.Model):
 
     def _plan_get_stat_button(self):
         stat_buttons = []
-        if len(self) == 1:
-            edit_project = self.env.ref('project.edit_project')
-            stat_buttons.append({
-                'name': _('Project'),
-                'icon': 'fa fa-puzzle-piece',
-                'action': _to_action_data('project.project', res_id=self.id,
-                    views=[[edit_project.id, 'form']])
-            })
-        ts_tree = self.env.ref('hr_timesheet.hr_timesheet_line_tree')
-        ts_form = self.env.ref('hr_timesheet.hr_timesheet_line_form')
+        num_projects = len(self)
+        if num_projects == 1:
+            action_data = _to_action_data('project.project', res_id=self.id,
+                                          views=[[self.env.ref('project.edit_project').id, 'form']])
+        else:
+            action_data = _to_action_data(action=self.env.ref('project.open_view_project_all_config'),
+                                          domain=[('id', 'in', self.ids)])
+
         stat_buttons.append({
-            'name': _('Timesheets'),
-            'icon': 'fa fa-calendar',
-            'action': _to_action_data(
-                'account.analytic.line',
-                domain=[('project_id', 'in', self.ids)],
-                views=[(ts_tree.id, 'list'), (ts_form.id, 'form')],
-            )
+            'name': _('Project') if num_projects == 1 else _('Projects'),
+            'count': num_projects,
+            'icon': 'fa fa-puzzle-piece',
+            'action': action_data
         })
 
         # if only one project, add it in the context as default value
@@ -439,7 +434,7 @@ class Project(models.Model):
             )
         })
         stat_buttons.append({
-            'name': _("Late Tasks"),
+            'name': [_("Tasks"), _("Late")],
             'count': self.env['project.task'].search_count(late_tasks_domain),
             'icon': 'fa fa-tasks',
             'action': _to_action_data(
@@ -449,7 +444,7 @@ class Project(models.Model):
             ),
         })
         stat_buttons.append({
-            'name': _("Tasks in Overtime"),
+            'name': [_("Tasks"), _("in Overtime")],
             'count': self.env['project.task'].search_count(overtime_tasks_domain),
             'icon': 'fa fa-tasks',
             'action': _to_action_data(
@@ -495,6 +490,25 @@ class Project(models.Model):
                             context={'create': False, 'delete': False}
                         )
                     })
+
+        ts_tree = self.env.ref('hr_timesheet.hr_timesheet_line_tree')
+        ts_form = self.env.ref('hr_timesheet.hr_timesheet_line_form')
+        if self.env.company.timesheet_encode_uom_id == self.env.ref('uom.product_uom_day'):
+            timesheet_label = [_('Days'), _('Recorded')]
+        else:
+            timesheet_label = [_('Hours'), _('Recorded')]
+
+        stat_buttons.append({
+            'name': timesheet_label,
+            'count': sum(self.mapped('total_timesheet_time')),
+            'icon': 'fa fa-calendar',
+            'action': _to_action_data(
+                'account.analytic.line',
+                domain=[('project_id', 'in', self.ids)],
+                views=[(ts_tree.id, 'list'), (ts_form.id, 'form')],
+            )
+        })
+
         return stat_buttons
 
 

--- a/addons/sale_timesheet/models/sale_order.py
+++ b/addons/sale_timesheet/models/sale_order.py
@@ -14,7 +14,7 @@ class SaleOrder(models.Model):
     # override domain
     project_id = fields.Many2one(domain="[('billable_type', 'in', ('no', 'task_rate')), ('analytic_account_id', '!=', False), ('company_id', '=', company_id)]")
     timesheet_encode_uom_id = fields.Many2one('uom.uom', related='company_id.timesheet_encode_uom_id')
-    timesheet_total_duration = fields.Float("Timesheet Total Duration", compute='_compute_timesheet_total_duration', help="Total recorded duration, expressed in the encoding UoM")
+    timesheet_total_duration = fields.Integer("Timesheet Total Duration", compute='_compute_timesheet_total_duration', help="Total recorded duration, expressed in the encoding UoM, and rounded to the unit")
 
     @api.depends('analytic_account_id.line_ids')
     def _compute_timesheet_ids(self):
@@ -32,7 +32,13 @@ class SaleOrder(models.Model):
     def _compute_timesheet_total_duration(self):
         for sale_order in self:
             timesheets = sale_order.timesheet_ids if self.user_has_groups('hr_timesheet.group_hr_timesheet_approver') else sale_order.timesheet_ids.filtered(lambda t: t.user_id.id == self.env.uid)
-            sale_order.timesheet_total_duration = sum([timesheet.unit_amount for timesheet in timesheets])
+            total_time = 0.0
+            for timesheet in timesheets:
+                # Timesheets may be stored in a different unit of measure, so first we convert all of them to the reference unit
+                total_time += timesheet.unit_amount * timesheet.product_uom_id.factor_inv
+            # Now convert to the proper unit of measure
+            total_time *= sale_order.timesheet_encode_uom_id.factor
+            sale_order.timesheet_total_duration = total_time
 
     def action_view_project_ids(self):
         self.ensure_one()
