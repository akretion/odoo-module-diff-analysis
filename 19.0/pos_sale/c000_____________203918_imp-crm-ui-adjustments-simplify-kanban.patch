PR: https://github.com/odoo/odoo/pull/203918

From: 4b7f91f14a68235346fc15a1db8c703fd7cc348d
From: Renaud Thiry
Date: 2025-04-17 07:54:30

Breaking data model changes scores: del:2 + add:0, change matches:
-    pos_sessions_open_count = fields.Integer(string='Open POS Sessions', compute='_compute_pos_sessions_open_count')
-    pos_order_amount_total = fields.Float(string="Session Sale Amount", compute='_compute_pos_order_amount_total')

Total Changes: 26

[IMP] crm: UI adjustments, simplify kanban

The kanban view for teams is mainly use to navigate between pipelines.

We remove all of the aggregated stats, which can be found using
grouping/pivot views. And we make clicking the team go directly to the
pipeline.

This declutters the views and ensures we don't compute all these values
for no reason every time a user simply wants to check a pipe.

Additionally:
* make "teams" menu accessible to all
* re-allign some fields in modal views
* random team colors
* some rewordings

Because random team colors updates the state of the random generator
a test with fixed seed is updated to match the new values at compute time.
Results are still as expected.

Seed 1870 no longer gives funny results :(

task-4568114

Part-of: odoo/odoo#203918
Related: odoo/enterprise#82421
Related: odoo/upgrade#7467
Signed-off-by: Thibault Delavallee (tde) <tde@openerp.com>

================================= pseudo patch: =================================

--- a/addons/pos_sale/models/crm_team.py
+++ b/addons/pos_sale/models/crm_team.py
@@ -1,31 +1,7 @@
-# -*- coding: utf-8 -*-
-# Part of Odoo. See LICENSE file for full copyright and licensing details.
-
-from odoo import api, fields, models, _
-from odoo.exceptions import UserError, ValidationError
-from datetime import datetime
-import pytz
+from odoo import fields, models
 
 
 class CrmTeam(models.Model):
     _inherit = 'crm.team'
 
     pos_config_ids = fields.One2many('pos.config', 'crm_team_id', string="Point of Sales")
-    pos_sessions_open_count = fields.Integer(string='Open POS Sessions', compute='_compute_pos_sessions_open_count')
-    pos_order_amount_total = fields.Float(string="Session Sale Amount", compute='_compute_pos_order_amount_total')
-
-    def _compute_pos_sessions_open_count(self):
-        for team in self:
-            team.pos_sessions_open_count = self.env['pos.session'].search_count([('config_id.crm_team_id', 'in', team.ids), ('state', '=', 'opened')])
-
-    def _compute_pos_order_amount_total(self):
-        data = self.env['report.pos.order']._read_group([
-            ('session_id.state', '=', 'opened'),
-            ('config_id.crm_team_id', 'in', self.ids),
-        ], ['config_id'], ['price_total:sum'])
-        rg_results = {config.id: price_total_sum for config, price_total_sum in data}
-        for team in self:
-            team.pos_order_amount_total = sum([
-                rg_results.get(config.id, 0.0)
-                for config in team.pos_config_ids
-            ])
