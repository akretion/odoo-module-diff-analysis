PR: https://github.com/odoo/odoo/pull/

From: 0d2be38333d8fe5a4cbef4161ac92cac00e47eb1
From: qmo-odoo
Date: 2019-07-30 11:46:30

Structural Changes: 5
Total Changes: 22

[IMP] crm,sale,*: Improve UX

This commit improves the ux in CRM by changing a few things:
  - Restore the use_leads and use_quotations fields
    along with their features as they were in 12.0.
  - Hide the email alias if use_upportunities and use_leads
    are unchecked.
  - Show a link to the general settings instead of the alias_domain
    if no alias_domain has been configured.
  - fixes the "unassigned lead(s)" link so that
    it redirects the user to the actually unassigned leads

Task: #1962182
PR: #32372

================================= pseudo patch: =================================

--- a/addons/crm/models/crm_team.py
+++ b/addons/crm/models/crm_team.py
@@ -12,8 +12,10 @@ class Team(models.Model):
     _name = 'crm.team'
     _inherit = ['mail.alias.mixin', 'crm.team']
     _description = 'Sales Team'
-    use_opportunities = fields.Boolean('Manage a pipeline', default=True, help="Check this box to manage a presales process with opportunities.")
-    alias_id = fields.Many2one('mail.alias', string='Alias', ondelete="restrict", required=True, help="The email address associated with this channel. New emails received will automatically create new leads assigned to the channel.")    
+
+    use_leads = fields.Boolean('Leads', help="Check this box to filter and qualify incoming requests as leads before converting them into opportunities and assigning them to a salesperson.")
+    use_opportunities = fields.Boolean('Pipeline', default=True, help="Check this box to manage a presales process with opportunities.")
+    alias_id = fields.Many2one('mail.alias', string='Alias', ondelete="restrict", required=True, help="The email address associated with this channel. New emails received will automatically create new leads assigned to the channel.")
 
     unassigned_leads_count = fields.Integer(
         compute='_compute_unassigned_leads_count',
@@ -76,10 +78,10 @@ class Team(models.Model):
         for team in self:
             team.overdue_opportunities_count = counts.get(team.id, 0)
             team.overdue_opportunities_amount = amounts.get(team.id, 0)
-    
-    @api.onchange('use_opportunities')
-    def _onchange_opportunities(self):
-        if not self.use_opportunities:
+
+    @api.onchange('use_leads', 'use_opportunities')
+    def _onchange_use_leads_opportunities(self):
+        if not self.use_leads and not self.use_opportunities:
             self.alias_name = False
 
     def get_alias_model_name(self, vals):
@@ -89,13 +91,13 @@ class Team(models.Model):
         has_group_use_lead = self.env.user.has_group('crm.group_use_lead')
         values = super(Team, self).get_alias_values()
         values['alias_defaults'] = defaults = safe_eval(self.alias_defaults or "{}")
-        defaults['type'] = 'lead' if has_group_use_lead  else 'opportunity'
+        defaults['type'] = 'lead' if has_group_use_lead and self.use_leads else 'opportunity'
         defaults['team_id'] = self.id
-        return values   
+        return values
 
     def write(self, vals):
         result = super(Team, self).write(vals)
-        if 'alias_defaults' in vals:
+        if 'use_leads' in vals or 'alias_defaults' in vals:
             for team in self:
                 team.alias_id.write(team.get_alias_values())
         return result
@@ -130,7 +132,7 @@ class Team(models.Model):
         if self.use_opportunities:
             return self.env.ref('crm.crm_case_form_view_salesteams_opportunity').read()[0]
         return super(Team,self).action_primary_channel_button()
-    
+
     def _graph_get_model(self):
         if self.use_opportunities:
             return 'crm.lead'
