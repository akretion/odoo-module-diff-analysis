PR: https://github.com/odoo/odoo/pull/

From: 8fa9f7d6d4bc75bb78547358c3cb1c398b1a52ca
From: Yannick Tivisse
Date: 2017-01-03 18:11:06

Breaking data model changes scores: del:5 + add:0, change matches:
-    email_from = fields.Char('From', related='template_id.email_from', readonly=True)
-    email_to = fields.Char('To (Emails)', related='template_id.email_to', readonly=True)
-    partner_to = fields.Char('To (Partners)', related='template_id.partner_to', readonly=True)
-    subject = fields.Char('Subject', related='template_id.subject', readonly=True)
-    body_html = fields.Html('Body', related='template_id.body_html', readonly=True)

Total Changes: 5

[REF] ir_actions: refactor and simplify ir.actions.server

Main idea of this commit is to simplify the various options of
ir.actions.server model. Purpose is to make it a simple tool to
execute some actions or python code. This has two main consequences

 * create and update server actions are simplified to update only the
   current record. Complex options can always be achieved by python code
   instead of error-prone option building mechanism;
 * condition of server actions is removed. If a condition is necessary it
   can either be included in a code server action, or integrated in an
   automated action;

This commit features :

 * remove 'client_action' server action type. Indeed this can be achieved
   with a code server action returning an action;
 * remove 'condition' on ir_actions_server model. From now on conditions
   and triggers are managed in server action code or using automated
   or scheduled action;
 * clean 'create and copy a record'. Create and link are the proposed
   options. Copy of the record or of a selected record is removed. Link
   is simplified by removing the parsed expression that allowed complex
   path update. It is simpler to write code than write python-like
   expression in char fields;
 * remove 'use_write' options. It now simply updates a record;
 * remove 'write_expression' as it is replaced by code actions;
 * remove 'ref_object' not used anymore with the removal of "choose
   a record";
 * remove helper to build an expression not used anymore with the removal
   of "write expression";
 * remove object ID finder;
 * removed template display when choosing an email template; just go
   on the template if you want more details;
 * refactor server action form view to reflect changes. It will be used
   in future commits as base view for automated and scheduled actions;
 * add 'sequence' in list view;
 * add new 'usage' selection field allowing to distinguish which model
   uses the server action. Indeed as server action will soon be used
   in scheduled or automated actions having a clue about the usage
   is always helpful;

Thanks to @fpodoo for the original idea and preliminary work. Thanks to
@jpr-odoo for first developments. Thanks to @jem-odoo and @rco-odoo
for reviewing.

================================= pseudo patch: =================================

--- a/addons/mail/models/ir_actions.py
+++ b/addons/mail/models/ir_actions.py
@@ -11,11 +11,6 @@ class ServerActions(models.Model):
     _inherit = ['ir.actions.server']
 
     state = fields.Selection(selection_add=[('email', 'Send Email')])
-    email_from = fields.Char('From', related='template_id.email_from', readonly=True)
-    email_to = fields.Char('To (Emails)', related='template_id.email_to', readonly=True)
-    partner_to = fields.Char('To (Partners)', related='template_id.partner_to', readonly=True)
-    subject = fields.Char('Subject', related='template_id.subject', readonly=True)
-    body_html = fields.Html('Body', related='template_id.body_html', readonly=True)
     template_id = fields.Many2one(
         'mail.template', 'Email Template', ondelete='set null',
         domain="[('model_id', '=', model_id)]",
