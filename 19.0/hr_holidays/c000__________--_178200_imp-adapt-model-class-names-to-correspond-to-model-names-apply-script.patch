PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:8 + add:0, change matches:
-    _inherit = 'calendar.event'
-    _inherit = 'hr.department'
-    _inherit = 'hr.employee'
-    _inherit = 'mail.message.subtype'
-    _inherit = 'res.partner'
-    _inherit = "res.users"
-    _inherit = "resource.calendar.leaves"
-    _inherit = "resource.calendar"

Total Changes: 73

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/hr_holidays/models/calendar_event.py
+++ b/addons/hr_holidays/models/calendar_event.py
@@ -2,7 +2,7 @@ from odoo import models
 
 
 class CalendarEvent(models.Model):
-    _inherit = 'calendar.event'
+    _inherit = ['calendar.event']
 
     def _need_video_call(self):
         """ Determine if the event needs a video call or not depending

--- a/addons/hr_holidays/models/hr_department.py
+++ b/addons/hr_holidays/models/hr_department.py
@@ -8,9 +8,9 @@ from odoo.osv import expression
 import ast
 
 
-class Department(models.Model):
+class HrDepartment(models.Model):
 
-    _inherit = 'hr.department'
+    _inherit = ['hr.department']
 
     absence_of_today = fields.Integer(
         compute='_compute_leave_count', string='Absence by Today')

--- a/addons/hr_holidays/models/hr_employee.py
+++ b/addons/hr_holidays/models/hr_employee.py
@@ -12,7 +12,7 @@ from odoo.addons.resource.models.utils import HOURS_PER_DAY
 
 
 class HrEmployeeBase(models.AbstractModel):
-    _inherit = "hr.employee.base"
+    _inherit = ["hr.employee.base"]
 
     leave_manager_id = fields.Many2one(
         'res.users', string='Time Off',
@@ -271,8 +271,9 @@ class HrEmployeeBase(models.AbstractModel):
             allocations.write(hr_vals)
         return res
 
+
 class HrEmployee(models.Model):
-    _inherit = 'hr.employee'
+    _inherit = ['hr.employee']
 
     current_leave_id = fields.Many2one('hr.leave.type', compute='_compute_current_leave', string="Current Time Off Type",
                                        groups="hr.group_hr_user")

--- a/addons/hr_holidays/models/hr_employee_base.py
+++ b/addons/hr_holidays/models/hr_employee_base.py
@@ -5,7 +5,7 @@ from odoo import models
 
 
 class HrEmployeeBase(models.AbstractModel):
-    _inherit = "hr.employee.base"
+    _inherit = ["hr.employee.base"]
 
     def _compute_presence_state(self):
         super()._compute_presence_state()

--- a/addons/hr_holidays/models/hr_leave.py
+++ b/addons/hr_holidays/models/hr_leave.py
@@ -31,7 +31,8 @@ def get_employee_from_context(values, context, user_employee_id):
     employee_id_value = employee_ids[0] if employee_ids else False
     return employee_id_value or context.get('default_employee_id', context.get('employee_id', user_employee_id))
 
-class HolidaysRequest(models.Model):
+
+class HrLeave(models.Model):
     """ Time Off Requests Access specifications
 
      - a regular employee / user
@@ -66,7 +67,6 @@ class HolidaysRequest(models.Model):
     On top of that multicompany rules apply based on company defined on the
     leave request leave type.
     """
-    _name = "hr.leave"
     _description = "Time Off"
     _order = "date_from desc"
     _inherit = ['mail.thread.main.attachment', 'mail.activity.mixin']
@@ -74,7 +74,7 @@ class HolidaysRequest(models.Model):
 
     @api.model
     def default_get(self, fields_list):
-        defaults = super(HolidaysRequest, self).default_get(fields_list)
+        defaults = super().default_get(fields_list)
         defaults = self._default_get_request_dates(defaults)
 
         lt = self.env['hr.leave.type']
@@ -226,7 +226,7 @@ class HolidaysRequest(models.Model):
     ]
 
     def _auto_init(self):
-        res = super(HolidaysRequest, self)._auto_init()
+        res = super()._auto_init()
         tools.create_index(self._cr, 'hr_leave_date_to_date_from_index',
                            self._table, ['date_to', 'date_from'])
         return res
@@ -727,7 +727,7 @@ Attempting to double-book your time off won't magically make your vacation 2x be
                 if mapped_validation_type[leave_type_id] == 'both':
                     self._check_double_validation_rules(employee_id, values.get('state', False))
 
-        holidays = super(HolidaysRequest, self.with_context(mail_create_nosubscribe=True)).create(vals_list)
+        holidays = super(HrLeave, self.with_context(mail_create_nosubscribe=True)).create(vals_list)
         holidays._check_validity()
 
         for holiday in holidays:
@@ -776,7 +776,7 @@ Attempting to double-book your time off won't magically make your vacation 2x be
                 values['request_date_from'] = values['date_from']
             if 'date_to' in values:
                 values['request_date_to'] = values['date_to']
-        result = super(HolidaysRequest, self).write(values)
+        result = super().write(values)
         if any(field in values for field in ['request_date_from', 'date_from', 'request_date_from', 'date_to', 'holiday_status_id', 'employee_id', 'state']):
             self._check_validity()
         if not self.env.context.get('leave_fast_create'):
@@ -804,7 +804,7 @@ Attempting to double-book your time off won't magically make your vacation 2x be
 
     def unlink(self):
         self.sudo()._post_leave_cancel()
-        return super(HolidaysRequest, self.with_context(leave_skip_date_check=True)).unlink()
+        return super(HrLeave, self.with_context(leave_skip_date_check=True)).unlink()
 
     def copy_data(self, default=None):
         vals_list = super().copy_data(default=default)
@@ -1318,7 +1318,7 @@ Attempting to double-book your time off won't magically make your vacation 2x be
         if 'state' in init_values and self.state == 'validate':
             leave_notif_subtype = self.holiday_status_id.leave_notif_subtype_id
             return leave_notif_subtype or self.env.ref('hr_holidays.mt_leave')
-        return super(HolidaysRequest, self)._track_subtype(init_values)
+        return super()._track_subtype(init_values)
 
     def _notify_get_recipients_groups(self, message, model_description, msg_vals=None):
         """ Handle HR users and officers recipients that can validate or refuse holidays
@@ -1360,8 +1360,8 @@ Attempting to double-book your time off won't magically make your vacation 2x be
         # due to record rule can not allow to add follower and mention on validated leave so subscribe through sudo
         if any(holiday.state in ['validate', 'validate1'] for holiday in self):
             self.check_access('read')
-            return super(HolidaysRequest, self.sudo()).message_subscribe(partner_ids=partner_ids, subtype_ids=subtype_ids)
-        return super(HolidaysRequest, self).message_subscribe(partner_ids=partner_ids, subtype_ids=subtype_ids)
+            return super(HrLeave, self.sudo()).message_subscribe(partner_ids=partner_ids, subtype_ids=subtype_ids)
+        return super().message_subscribe(partner_ids=partner_ids, subtype_ids=subtype_ids)
 
     @api.model
     def get_unusual_days(self, date_from, date_to=None):

--- a/addons/hr_holidays/models/hr_leave_accrual_plan.py
+++ b/addons/hr_holidays/models/hr_leave_accrual_plan.py
@@ -10,8 +10,7 @@ DAY_SELECT_VALUES = [str(i) for i in range(1, 29)] + ['last']
 DAY_SELECT_SELECTION_NO_LAST = tuple(zip(DAY_SELECT_VALUES, (str(i) for i in range(1, 29))))
 
 
-class AccrualPlan(models.Model):
-    _name = "hr.leave.accrual.plan"
+class HrLeaveAccrualPlan(models.Model):
     _description = "Accrual Plan"
 
     active = fields.Boolean(default=True)

--- a/addons/hr_holidays/models/hr_leave_accrual_plan_level.py
+++ b/addons/hr_holidays/models/hr_leave_accrual_plan_level.py
@@ -16,8 +16,7 @@ def _get_selection_days(self):
     return DAY_SELECT_SELECTION_NO_LAST + (("last", _("last day")),)
 
 
-class AccrualPlanLevel(models.Model):
-    _name = "hr.leave.accrual.level"
+class HrLeaveAccrualLevel(models.Model):
     _description = "Accrual Plan Level"
     _order = 'sequence asc'
 

--- a/addons/hr_holidays/models/hr_leave_allocation.py
+++ b/addons/hr_holidays/models/hr_leave_allocation.py
@@ -15,9 +15,9 @@ from odoo.tools.date_utils import get_timedelta
 
 MONTHS_TO_INTEGER = {"jan": 1, "feb": 2, "mar": 3, "apr": 4, "may": 5, "jun": 6, "jul": 7, "aug": 8, "sep": 9, "oct": 10, "nov": 11, "dec": 12}
 
-class HolidaysAllocation(models.Model):
+
+class HrLeaveAllocation(models.Model):
     """ Allocation Requests Access specifications: similar to leave requests """
-    _name = "hr.leave.allocation"
     _description = "Time Off Allocation"
     _order = "create_date desc"
     _inherit = ['mail.thread', 'mail.activity.mixin']
@@ -670,7 +670,7 @@ class HolidaysAllocation(models.Model):
             employee_id = values.get('employee_id', False)
             if not values.get('department_id'):
                 values.update({'department_id': self.env['hr.employee'].browse(employee_id).department_id.id})
-        allocations = super(HolidaysAllocation, self.with_context(mail_create_nosubscribe=True)).create(vals_list)
+        allocations = super(HrLeaveAllocation, self.with_context(mail_create_nosubscribe=True)).create(vals_list)
         allocations._add_lastcalls()
         for allocation in allocations:
             partners_to_subscribe = set()
@@ -936,7 +936,7 @@ class HolidaysAllocation(models.Model):
         if 'state' in init_values and self.state == 'validate':
             allocation_notif_subtype_id = self.holiday_status_id.allocation_notif_subtype_id
             return allocation_notif_subtype_id or self.env.ref('hr_holidays.mt_leave_allocation')
-        return super(HolidaysAllocation, self)._track_subtype(init_values)
+        return super()._track_subtype(init_values)
 
     def _notify_get_recipients_groups(self, message, model_description, msg_vals=None):
         """ Handle HR users and officers recipients that can validate or refuse holidays
@@ -975,5 +975,5 @@ class HolidaysAllocation(models.Model):
         # due to record rule can not allow to add follower and mention on validated leave so subscribe through sudo
         if any(state in ['validate'] for state in self.mapped('state')):
             self.check_access('read')
-            return super(HolidaysAllocation, self.sudo()).message_subscribe(partner_ids=partner_ids, subtype_ids=subtype_ids)
+            return super(HrLeaveAllocation, self.sudo()).message_subscribe(partner_ids=partner_ids, subtype_ids=subtype_ids)
         return super().message_subscribe(partner_ids=partner_ids, subtype_ids=subtype_ids)

--- a/addons/hr_holidays/models/hr_leave_mandatory_day.py
+++ b/addons/hr_holidays/models/hr_leave_mandatory_day.py
@@ -4,8 +4,7 @@ from random import randint
 from odoo import fields, models
 
 
-class MandatoryDay(models.Model):
-    _name = 'hr.leave.mandatory.day'
+class HrLeaveMandatoryDay(models.Model):
     _description = 'Mandatory Day'
     _order = 'start_date desc, end_date desc'
 

--- a/addons/hr_holidays/models/hr_leave_type.py
+++ b/addons/hr_holidays/models/hr_leave_type.py
@@ -18,8 +18,7 @@ from odoo.tools.float_utils import float_round
 _logger = logging.getLogger(__name__)
 
 
-class HolidaysType(models.Model):
-    _name = "hr.leave.type"
+class HrLeaveType(models.Model):
     _description = "Time Off Type"
     _order = 'sequence'
 

--- a/addons/hr_holidays/models/mail_message_subtype.py
+++ b/addons/hr_holidays/models/mail_message_subtype.py
@@ -9,7 +9,7 @@ _logger = logging.getLogger(__name__)
 
 
 class MailMessageSubtype(models.Model):
-    _inherit = 'mail.message.subtype'
+    _inherit = ['mail.message.subtype']
 
     def _get_department_subtype(self):
         return self.search([

--- a/addons/hr_holidays/models/res_partner.py
+++ b/addons/hr_holidays/models/res_partner.py
@@ -5,7 +5,7 @@ from odoo.addons.mail.tools.discuss import Store
 
 
 class ResPartner(models.Model):
-    _inherit = 'res.partner'
+    _inherit = ['res.partner']
 
     def _compute_im_status(self):
         super(ResPartner, self)._compute_im_status()

--- a/addons/hr_holidays/models/res_users.py
+++ b/addons/hr_holidays/models/res_users.py
@@ -4,8 +4,8 @@
 from odoo import api, fields, models, Command
 
 
-class User(models.Model):
-    _inherit = "res.users"
+class ResUsers(models.Model):
+    _inherit = ["res.users"]
 
     leave_manager_id = fields.Many2one(related='employee_id.leave_manager_id')
     show_leaves = fields.Boolean(related='employee_id.show_leaves')
@@ -32,7 +32,7 @@ class User(models.Model):
         ]
 
     def _compute_im_status(self):
-        super(User, self)._compute_im_status()
+        super()._compute_im_status()
         on_leave_user_ids = self._get_on_leave_ids()
         for user in self:
             if user.id in on_leave_user_ids:

--- a/addons/hr_holidays/models/resource.py
+++ b/addons/hr_holidays/models/resource.py
@@ -6,8 +6,9 @@ from odoo.osv import expression
 import pytz
 from datetime import datetime
 
-class CalendarLeaves(models.Model):
-    _inherit = "resource.calendar.leaves"
+
+class ResourceCalendarLeaves(models.Model):
+    _inherit = ["resource.calendar.leaves"]
 
     holiday_id = fields.Many2one("hr.leave", string='Time Off Request')
 
@@ -153,8 +154,9 @@ class CalendarLeaves(models.Model):
 
         return res
 
+
 class ResourceCalendar(models.Model):
-    _inherit = "resource.calendar"
+    _inherit = ["resource.calendar"]
 
     associated_leaves_count = fields.Integer("Time Off Count", compute='_compute_associated_leaves_count')
 
