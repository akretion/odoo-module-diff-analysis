PR: https://github.com/odoo/odoo/pull/

From: 0c4bae5b5e86ae05a73316ae83861de6733c3d2d
From: Victor Feyens
Date: 2019-09-30 16:20:40

Structural Changes: 5
Total Changes: 11

[IMP] sale*: multi company checks

================================= pseudo patch: =================================

--- a/addons/sale_timesheet/models/sale_order.py
+++ b/addons/sale_timesheet/models/sale_order.py
@@ -19,7 +19,8 @@ class SaleOrder(models.Model):
 
     visible_project = fields.Boolean('Display project', compute='_compute_visible_project', readonly=True)
     project_id = fields.Many2one(
-        'project.project', 'Project', domain="[('billable_type', 'in', ('no', 'task_rate')), ('analytic_account_id', '!=', False), ('company_id', '=', company_id)]",
+        'project.project', 'Project',
+        domain="[('billable_type', 'in', ('no', 'task_rate')), ('analytic_account_id', '!=', False), ('company_id', '=', company_id)]",
         readonly=True, states={'draft': [('readonly', False)], 'sent': [('readonly', False)]},
         help='Select a non billable project on which tasks can be created.')
     project_ids = fields.Many2many('project.project', compute="_compute_project_ids", string='Projects', copy=False, groups="project.group_project_user", help="Projects used in this sales order.")
@@ -150,8 +151,12 @@ class SaleOrderLine(models.Model):
     _inherit = "sale.order.line"
 
     qty_delivered_method = fields.Selection(selection_add=[('timesheet', 'Timesheets')])
-    project_id = fields.Many2one('project.project', 'Generated Project', index=True, copy=False, help="Project generated by the sales order item")
-    task_id = fields.Many2one('project.task', 'Generated Task', index=True, copy=False, help="Task generated by the sales order item")
+    project_id = fields.Many2one(
+        'project.project', 'Generated Project',
+        index=True, copy=False, help="Project generated by the sales order item")
+    task_id = fields.Many2one(
+        'project.task', 'Generated Task',
+        index=True, copy=False, help="Task generated by the sales order item")
     is_service = fields.Boolean("Is a Service", compute='_compute_is_service', store=True, compute_sudo=True, help="Sales Order item should generate a task and/or a project, depending on the product settings.")
     analytic_line_ids = fields.One2many(domain=[('project_id', '=', False)])  # only analytic lines, not timesheets (since this field determine if SO line came from expense)
 
