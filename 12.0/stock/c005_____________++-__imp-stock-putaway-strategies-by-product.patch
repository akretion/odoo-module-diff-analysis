PR: https://github.com/odoo/odoo/pull/

From: 2c1611da29e7406c5c8e57d8877766a6647be290
From: Haresh Shyara
Date: 2018-04-04 12:22:00

Structural Changes: 8
Total Changes: 24

[IMP] stock: putaway strategies by product

This commit allows to define a putaway strategy by product. Before
this commit, it was only possible to define a putaway strategy by
category.

We add a second one2many on the model 'product.putaway': the original
(fixed_location_ids) is used for the putaway per category, the new one
(product_location_ids) is used for the putway per product.

The two one2many are displayed on the putaway strategy and a domain on
the fields is used to filter the records between them. Inline tree view
add a required on the product_id on the one2many per product and a
required on category_id on the one2many per category.

If a putaway strategy per product AND per category match for a product,
the putaway per product takes precedence

This task also reword some tooltips.

We add some testcases to display the behaviour
- when a putaway per product is applied
- the conflict between a putaway per product and category
- the fallback to the category when nothing is found on the product

Task 23495
PR #20143

================================= pseudo patch: =================================

--- a/addons/stock/models/product_strategy.py
+++ b/addons/stock/models/product_strategy.py
@@ -17,16 +17,25 @@ class PutAwayStrategy(models.Model):
     _description = 'Put Away Strategy'
 
     name = fields.Char('Name', required=True)
+
     fixed_location_ids = fields.One2many(
-        'stock.fixed.putaway.strat', 'putaway_id', 'Fixed Locations Per Product Category', copy=True,
-        help="When the method is fixed, this location will be used to store the products")
+        'stock.fixed.putaway.strat', 'putaway_id',
+        'Fixed Locations Per Product Category', domain=[('category_id', '!=', False)], copy=True)
+    product_location_ids = fields.One2many(
+        'stock.fixed.putaway.strat', 'putaway_id',
+        'Fixed Locations Per Product', domain=[('product_id', '!=', False)], copy=True)
 
     def putaway_apply(self, product):
-        for strat in self.fixed_location_ids:
+        if self.product_location_ids:
+            put_away = self.product_location_ids.filtered(lambda x: x.product_id == product)
+            if put_away:
+                return put_away[0].fixed_location_id
+        if self.fixed_location_ids:
             categ = product.categ_id
             while categ:
-                if strat.category_id.id == categ.id:
-                    return strat.fixed_location_id
+                put_away = self.fixed_location_ids.filtered(lambda x: x.category_id == categ)
+                if put_away:
+                    return put_away[0].fixed_location_id
                 categ = categ.parent_id
         return self.env['stock.location']
 
@@ -35,7 +44,8 @@ class FixedPutAwayStrategy(models.Model):
     _name = 'stock.fixed.putaway.strat'
     _order = 'sequence'
 
+    product_id = fields.Many2one('product.product', 'Product')
     putaway_id = fields.Many2one('product.putaway', 'Put Away Method', required=True)
-    category_id = fields.Many2one('product.category', 'Product Category', required=True)
+    category_id = fields.Many2one('product.category', 'Product Category')
     fixed_location_id = fields.Many2one('stock.location', 'Location', required=True)
     sequence = fields.Integer('Priority', help="Give to the more specialized category, a higher priority to have them in top of the list.")

--- a/addons/stock/models/stock_location.py
+++ b/addons/stock/models/stock_location.py
@@ -62,7 +62,7 @@ class Location(models.Model):
     scrap_location = fields.Boolean('Is a Scrap Location?', default=False, help='Check this box to allow using this location to put scrapped/damaged goods.')
     return_location = fields.Boolean('Is a Return Location?', help='Check this box to allow using this location as a return location.')
     removal_strategy_id = fields.Many2one('product.removal', 'Removal Strategy', help="Defines the default method used for suggesting the exact location (shelf) where to take the products from, which lot etc. for this location. This method can be enforced at the product category level, and a fallback is made on the parent locations if none is set here.")
-    putaway_strategy_id = fields.Many2one('product.putaway', 'Put Away Strategy', help="Defines the default method used for suggesting the exact location (shelf) where to store the products. This method can be enforced at the product category level, and a fallback is made on the parent locations if none is set here.")
+    putaway_strategy_id = fields.Many2one('product.putaway', 'Put Away Strategy', help="Allows to suggest the exact location (shelf) where to store the product.")
     barcode = fields.Char('Barcode', copy=False, oldname='loc_barcode')
     quant_ids = fields.One2many('stock.quant', 'location_id')
 
