PR: https://github.com/odoo/odoo/pull/

From: b341b5ca73dafa94a305f8be82a5dd5d9ed3fe1e
From: Fabien Pinckaers
Date: 2018-01-07 18:28:03

Structural Changes: 3
Total Changes: 6

[IMP] Remove duplicate fields names

================================= pseudo patch: =================================

--- a/addons/mail/models/mail_activity.py
+++ b/addons/mail/models/mail_activity.py
@@ -70,7 +70,7 @@ class MailActivity(models.Model):
     # owner
     res_id = fields.Integer('Related Document ID', index=True, required=True)
     res_model_id = fields.Many2one(
-        'ir.model', 'Related Document Model',
+        'ir.model', 'Document Model',
         index=True, ondelete='cascade', required=True)
     res_model = fields.Char(
         'Related Document Model',
@@ -299,13 +299,13 @@ class MailActivityMixin(models.AbstractModel):
     activity_state = fields.Selection([
         ('overdue', 'Overdue'),
         ('today', 'Today'),
-        ('planned', 'Planned')], string='State',
+        ('planned', 'Planned')], string='Activity State',
         compute='_compute_activity_state',
         groups="base.group_user",
         help='Status based on activities\nOverdue: Due date is already passed\n'
              'Today: Activity date is today\nPlanned: Future activities.')
     activity_user_id = fields.Many2one(
-        'res.users', 'Responsible',
+        'res.users', 'Responsible User',
         related='activity_ids.user_id',
         search='_search_activity_user_id',
         groups="base.group_user")

--- a/addons/mail/models/mail_activity.py
+++ b/addons/mail/models/mail_activity.py
@@ -305,7 +305,7 @@ class MailActivityMixin(models.AbstractModel):
         help='Status based on activities\nOverdue: Due date is already passed\n'
              'Today: Activity date is today\nPlanned: Future activities.')
     activity_user_id = fields.Many2one(
-        'res.users', 'Responsible Person',
+        'res.users', 'Responsible User',
         related='activity_ids.user_id',
         search='_search_activity_user_id',
         groups="base.group_user")

--- a/addons/mail/models/mail_channel.py
+++ b/addons/mail/models/mail_channel.py
@@ -240,10 +240,10 @@ class Channel(models.Model):
 
     @api.multi
     @api.returns('self', lambda value: value.id)
-    def message_post(self, body='', subject=None, message_type='notification', subtype=None, parent_id=False, attachments=None, content_subtype='html', **kwargs):
+    def message_post(self, **kwargs):
         # auto pin 'direct_message' channel partner
         self.filtered(lambda channel: channel.channel_type == 'chat').mapped('channel_last_seen_partner_ids').write({'is_pinned': True})
-        message = super(Channel, self.with_context(mail_create_nosubscribe=True)).message_post(body=body, subject=subject, message_type=message_type, subtype=subtype, parent_id=parent_id, attachments=attachments, content_subtype=content_subtype, **kwargs)
+        message = super(Channel, self.with_context(mail_create_nosubscribe=True)).message_post(**kwargs)
         return message
 
     def _alias_check_contact(self, message, message_dict, alias):
