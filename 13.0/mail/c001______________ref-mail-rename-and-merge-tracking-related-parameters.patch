PR: https://github.com/odoo/odoo/pull/

From: 09ad56bcd647d94b08615e5a92974d450a9c9737
From: Thibault Delavall√©e
Date: 2019-01-04 11:46:14

Breaking data model changes score: 2, change matches:
-    track_visibility = fields.Selection(
-    track_sequence = fields.Integer('Tracking field sequence', readonly=1, default=100)

Total Changes: 40

[REF] mail: rename and merge tracking-related parameters

Track_visibility field parameter allows to track field changes in mail. Since
commit https://github.com/odoo/odoo/commit/c99de4551583e801ecc6669ac456c4f7e2eef1da only updated values are tracked. Previously to that commit it
was possible to have field values being tracked whenever any other change
occurred. This feature has been removed to simplify tracking and avoid having
unnecessary values in the tracking table. In this commit we rename the
track_visibility parameter to tracking. Old parameter value is still supported
in mail for backward compatibility.

Commit https://github.com/odoo/odoo/commit/ec35eca7c6b772139c8fa143b388ad1d936bc9ea added sequence on tracking so that display of tracking values
is coherent through various chatter messages. To ease tracking configuration
it is merged with the tracking (old track_visibility) parameter. It means
tracking parameter can either be True (default sequence of 100) or an integer
giving the sequence to apply on the tracking.

Purpose of those changes is to simplify tracking configuration with studio
in mind. That way changing one parameter allow to customize the tracking of
fields in chatter.

Sequence field on mail.tracking.value model is renamed to tracking_sequence to
have a coherent namespace for tracking information. Tracking information on
ir.model.fields is also updated accordingly. To simplify manipulation boolean
value for tracking is automatically transformed into a sequence of 100.

This commit is linked to task ID 1903814 and PR #28430.

================================= pseudo patch: =================================

--- a/addons/mail/models/ir_model.py
+++ b/addons/mail/models/ir_model.py
@@ -66,18 +66,26 @@ class IrModel(models.Model):
 class IrModelField(models.Model):
     _inherit = 'ir.model.fields'
 
-    track_visibility = fields.Selection(
-        [('onchange', "On Change"), ('always', "Always")], string="Tracking",
-        help="When set, every modification to this field will be tracked in the chatter.",
+    tracking = fields.Integer(
+        string="Enable Ordered Tracking",
+        help="If set every modification done to this field is tracked in the chatter. Value is used to order tracking values.",
     )
 
     def _reflect_field_params(self, field):
+        """ Tracking value can be either a boolean enabling tracking mechanism
+        on field, either an integer giving the sequence. Default sequence is
+        set to 100. """
         vals = super(IrModelField, self)._reflect_field_params(field)
-        vals['track_visibility'] = getattr(field, 'track_visibility', None)
+        tracking = getattr(field, 'tracking', None)
+        if tracking is True:
+            tracking = 100
+        elif tracking is False:
+            tracking = None
+        vals['tracking'] = tracking
         return vals
 
     def _instanciate_attrs(self, field_data):
         attrs = super(IrModelField, self)._instanciate_attrs(field_data)
-        if attrs and field_data.get('track_visibility'):
-            attrs['track_visibility'] = field_data['track_visibility']
+        if field_data.get('tracking'):
+            attrs['tracking'] = field_data['tracking']
         return attrs

--- a/addons/mail/models/mail_thread.py
+++ b/addons/mail/models/mail_thread.py
@@ -547,7 +547,8 @@ class MailThread(models.AbstractModel):
         """
         tracked_fields = []
         for name, field in self._fields.items():
-            if getattr(field, 'track_visibility', False):
+            tracking = getattr(field, 'tracking', None) or getattr(field, 'track_visibility', None)
+            if tracking:
                 tracked_fields.append(name)
 
         if tracked_fields:
@@ -611,8 +612,11 @@ class MailThread(models.AbstractModel):
             new_value = getattr(self, col_name)
 
             if new_value != initial_value and (new_value or initial_value):  # because browse null != False
-                track_sequence = getattr(self._fields[col_name], 'track_sequence', 100)
-                tracking = self.env['mail.tracking.value'].create_tracking_values(initial_value, new_value, col_name, col_info, track_sequence)
+                tracking_sequence = getattr(self._fields[col_name], 'tracking',
+                                            getattr(self._fields[col_name], 'track_sequence', 100))  # backward compatibility with old parameter name
+                if tracking_sequence is True:
+                    tracking_sequence = 100
+                tracking = self.env['mail.tracking.value'].create_tracking_values(initial_value, new_value, col_name, col_info, tracking_sequence)
                 if tracking:
                     tracking_value_ids.append([0, 0, tracking])
 
@@ -2308,7 +2312,7 @@ class MailThread(models.AbstractModel):
         """
         fnames = []
         for name, field in self._fields.items():
-            if name == 'user_id' and updated_values.get(name) and getattr(field, 'track_visibility', False):
+            if name == 'user_id' and updated_values.get(name) and (getattr(field, 'track_visibility', False) or getattr(field, 'tracking', False)):
                 if field.comodel_name == 'res.users':
                     fnames.append(name)
 

--- a/addons/mail/models/mail_tracking_value.py
+++ b/addons/mail/models/mail_tracking_value.py
@@ -10,7 +10,7 @@ class MailTracking(models.Model):
     _name = 'mail.tracking.value'
     _description = 'Mail Tracking Value'
     _rec_name = 'field'
-    _order = 'track_sequence asc'
+    _order = 'tracking_sequence asc'
 
     # TDE CLEANME: why not a m2o to ir model field ?
     field = fields.Char('Changed Field', required=True, readonly=1)
@@ -33,12 +33,12 @@ class MailTracking(models.Model):
 
     mail_message_id = fields.Many2one('mail.message', 'Message ID', required=True, index=True, ondelete='cascade')
 
-    track_sequence = fields.Integer('Tracking field sequence', readonly=1, default=100)
+    tracking_sequence = fields.Integer('Tracking field sequence', readonly=1, default=100, oldname='track_sequence')
 
     @api.model
-    def create_tracking_values(self, initial_value, new_value, col_name, col_info, track_sequence):
+    def create_tracking_values(self, initial_value, new_value, col_name, col_info, tracking_sequence):
         tracked = True
-        values = {'field': col_name, 'field_desc': col_info['string'], 'field_type': col_info['type'], 'track_sequence': track_sequence}
+        values = {'field': col_name, 'field_desc': col_info['string'], 'field_type': col_info['type'], 'tracking_sequence': tracking_sequence}
 
         if col_info['type'] in ['integer', 'float', 'char', 'text', 'datetime', 'monetary']:
             values.update({
