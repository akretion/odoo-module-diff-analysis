PR: https://github.com/odoo/odoo/pull/

From: 02e537e52e9027f9082947631123d91087b962b0
From: William Henrotin
Date: 2019-05-08 08:03:36

Structural Changes: 3
Total Changes: 16

[IMP] mrp: rename 'raw material' by 'component'

Uniformity across all views

Task : 1940358

================================= pseudo patch: =================================

--- a/addons/mrp/models/mrp_production.py
+++ b/addons/mrp/models/mrp_production.py
@@ -78,7 +78,7 @@ class MrpProduction(models.Model):
         'stock.picking.type', 'Operation Type',
         default=_get_default_picking_type, required=True)
     location_src_id = fields.Many2one(
-        'stock.location', 'Raw Materials Location',
+        'stock.location', 'Components Location',
         default=_get_default_location_src_id,
         readonly=True,  required=True,
         states={'draft': [('readonly', False)]},
@@ -115,7 +115,7 @@ class MrpProduction(models.Model):
     bom_id = fields.Many2one(
         'mrp.bom', 'Bill of Material',
         readonly=True, states={'draft': [('readonly', False)]},
-        help="Bill of Materials allow you to define the list of required raw materials to make a finished product.")
+        help="Bill of Materials allow you to define the list of required components to make a finished product.")
     routing_id = fields.Many2one(
         'mrp.routing', 'Routing',
         readonly=True, compute='_compute_routing', store=True,
@@ -153,7 +153,7 @@ class MrpProduction(models.Model):
             defined on the BoM.")
 
     move_raw_ids = fields.One2many(
-        'stock.move', 'raw_material_production_id', 'Raw Materials', oldname='move_lines',
+        'stock.move', 'raw_material_production_id', 'Components', oldname='move_lines',
         copy=True, states={'done': [('readonly', True)], 'cancel': [('readonly', True)]},
         domain=[('scrapped', '=', False)])
     move_finished_ids = fields.One2many(
@@ -735,14 +735,14 @@ class MrpProduction(models.Model):
         return workorders
 
     def _check_lots(self):
-        # Check that the raw materials were consumed for lots that we have produced.
+        # Check that the components were consumed for lots that we have produced.
         if self.product_id.tracking != 'none':
             finished_lots = set(self.finished_move_line_ids.mapped('lot_id'))
             raw_finished_lots = set(self.move_raw_ids.mapped('move_line_ids.lot_produced_id'))
             if not (raw_finished_lots <= finished_lots):
                 lots_short = raw_finished_lots - finished_lots
                 error_msg = _(
-                    'Some raw materials have been consumed for a lot/serial number that has not been produced. '
+                    'Some components have been consumed for a lot/serial number that has not been produced. '
                     'Unlock the MO and click on the components lines to correct it.\n'
                     'List of the components:\n'
                 )

--- a/addons/mrp/models/stock_move.py
+++ b/addons/mrp/models/stock_move.py
@@ -59,7 +59,7 @@ class StockMove(models.Model):
     production_id = fields.Many2one(
         'mrp.production', 'Production Order for finished products')
     raw_material_production_id = fields.Many2one(
-        'mrp.production', 'Production Order for raw materials')
+        'mrp.production', 'Production Order for components')
     unbuild_id = fields.Many2one(
         'mrp.unbuild', 'Disassembly Order')
     consume_unbuild_id = fields.Many2one(

--- a/addons/mrp/models/stock_warehouse.py
+++ b/addons/mrp/models/stock_warehouse.py
@@ -29,9 +29,9 @@ class StockWarehouse(models.Model):
         ('pbm', 'Pick components and then manufacture (2 steps)'),
         ('pbm_sam', 'Pick components, manufacture and then store products (3 steps)')],
         'Manufacture', default='mrp_one_step', required=True,
-        help="Produce : Move the raw materials to the production location\
+        help="Produce : Move the components to the production location\
         directly and start the manufacturing process.\nPick / Produce : Unload\
-        the raw materials from the Stock to Input location first, and then\
+        the components from the Stock to Input location first, and then\
         transfer it to the Production location.")
 
     pbm_route_id = fields.Many2one('stock.location.route', 'Picking Before Manufacturing Route', ondelete='restrict')
