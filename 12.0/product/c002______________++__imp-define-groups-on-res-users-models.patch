PR: https://github.com/odoo/odoo/pull/

From: 99f497b390e680629dce3a7e2e282ada74ee9884
From: Yannick Tivisse
Date: 2018-04-26 13:13:38

Structural Changes: 6
Total Changes: 29

[IMP] *: Define groups on res.users models

The reified view on the res users will be dropped in the following commit.

The previous commit adds support to define each group as a computed field on the res users.

This commit defines:
- A boolean field for each 'isolated' res.group, i.e. a group in the hidden category.
- A selection field for each 'Application' res.group, i.e. a group in a application category.

Example:
- The group to manage pricelist in sales becomes a boolean field
- The groups project user/manager become a selection field

================================= pseudo patch: =================================

--- a/addons/product/models/__init__.py
+++ b/addons/product/models/__init__.py
@@ -15,3 +15,4 @@ from . import product_attribute
 from . import product_pricelist
 from . import res_company
 from . import res_partner
+from . import res_users

--- a/None
+++ b/addons/product/models/res_users.py
@@ -0,0 +1,28 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import fields, models
+
+
+class ResUsers(models.Model):
+    _inherit = 'res.users'
+
+    has_group_sale_pricelist = fields.Boolean(
+        'Sales Pricelists', compute='_compute_groups_id', inverse='_inverse_groups_id',
+        group_xml_id='product.group_sale_pricelist')
+
+    has_group_pricelist_item = fields.Boolean(
+        'Manage Pricelist Items', compute='_compute_groups_id', inverse='_inverse_groups_id',
+        group_xml_id='product.group_pricelist_item')
+
+    has_group_product_pricelist = fields.Boolean(
+        'Pricelists On Product', compute='_compute_groups_id', inverse='_inverse_groups_id',
+        group_xml_id='product.group_product_pricelist')
+
+    has_group_stock_packaging = fields.Boolean(
+        'Manage Product Packaging', compute='_compute_groups_id', inverse='_inverse_groups_id',
+        group_xml_id='product.group_stock_packaging')
+
+    has_group_product_variant = fields.Boolean(
+        'Manage Product Variants', compute='_compute_groups_id', inverse='_inverse_groups_id',
+        group_xml_id='product.group_product_variant')
