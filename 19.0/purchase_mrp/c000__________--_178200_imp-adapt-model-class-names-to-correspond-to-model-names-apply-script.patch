PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:7 + add:0, change matches:
-    _inherit = "account.move.line"
-    _inherit = 'mrp.bom'
-    _inherit = 'mrp.bom.line'
-    _inherit = 'mrp.production'
-    _inherit = 'purchase.order'
-    _inherit = 'purchase.order.line'
-    _inherit = 'stock.move'

Total Changes: 14

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/purchase_mrp/models/account_move.py
+++ b/addons/purchase_mrp/models/account_move.py
@@ -5,7 +5,7 @@ from odoo import models
 
 
 class AccountMoveLine(models.Model):
-    _inherit = "account.move.line"
+    _inherit = ["account.move.line"]
 
     def _get_stock_valuation_layers(self, move):
         """ Do not handle the invoice correction for kit. It has to be done

--- a/addons/purchase_mrp/models/mrp_bom.py
+++ b/addons/purchase_mrp/models/mrp_bom.py
@@ -7,7 +7,7 @@ from odoo.tools import float_compare
 
 
 class MrpBom(models.Model):
-    _inherit = 'mrp.bom'
+    _inherit = ['mrp.bom']
 
     @api.constrains('product_id', 'product_tmpl_id', 'bom_line_ids', 'byproduct_ids', 'operation_ids')
     def _check_bom_lines(self):
@@ -23,7 +23,7 @@ class MrpBom(models.Model):
 
 
 class MrpBomLine(models.Model):
-    _inherit = 'mrp.bom.line'
+    _inherit = ['mrp.bom.line']
 
     cost_share = fields.Float(
         "Cost Share (%)", digits=(5, 2),  # decimal = 2 is important for rounding calculations!!

--- a/addons/purchase_mrp/models/mrp_production.py
+++ b/addons/purchase_mrp/models/mrp_production.py
@@ -5,7 +5,7 @@ from odoo import api, Command, fields, models, _
 
 
 class MrpProduction(models.Model):
-    _inherit = 'mrp.production'
+    _inherit = ['mrp.production']
 
     purchase_order_count = fields.Integer(
         "Count of generated PO",

--- a/addons/purchase_mrp/models/purchase.py
+++ b/addons/purchase_mrp/models/purchase.py
@@ -8,7 +8,7 @@ from odoo.tools import OrderedSet
 
 
 class PurchaseOrder(models.Model):
-    _inherit = 'purchase.order'
+    _inherit = ['purchase.order']
 
     mrp_production_count = fields.Integer(
         "Count of MO Source",
@@ -49,7 +49,7 @@ class PurchaseOrder(models.Model):
 
 
 class PurchaseOrderLine(models.Model):
-    _inherit = 'purchase.order.line'
+    _inherit = ['purchase.order.line']
 
     def _compute_qty_received(self):
         kit_lines = self.env['purchase.order.line']

--- a/addons/purchase_mrp/models/stock_move.py
+++ b/addons/purchase_mrp/models/stock_move.py
@@ -7,7 +7,7 @@ from odoo.exceptions import UserError
 
 
 class StockMove(models.Model):
-    _inherit = 'stock.move'
+    _inherit = ['stock.move']
 
     def _prepare_phantom_move_values(self, bom_line, product_qty, quantity_done):
         vals = super(StockMove, self)._prepare_phantom_move_values(bom_line, product_qty, quantity_done)
