PR: https://github.com/odoo/odoo/pull/160169

From: 02f756d061f1e52a2265e051ac57b13b311fb115
From: David Monnom (moda)
Date: 2024-04-29 23:21:31

Breaking data model changes scores: del:3 + add:0, change matches:
-    combo_parent_id = fields.Many2one('pos.order.line', string='Combo Parent')
-    combo_line_ids = fields.One2many('pos.order.line', 'combo_parent_id', string='Combo Lines')

Total Changes: 48

[IMP] pos_*: allow arbitrary data in related models

*: All pos related modules

This commit allows to access arbitrary data in related models. This is
useful for data that are computed on the server side and that are not
recomputed on the client side.

Before this commit, it was only possible to access data that are linked
to a field in the model.

Now custom data coming from the server can be added to any record with
the prefix `_` in the key. For example, if the server sends the
following data for `pos.order`:

Classic fields:
```
{
  id: 1,
  name: 'Order 1',
  partner_id: 1,
  partner_name: 'Partner 1',
}
```

Custom fields:
```
{
  id: 1,
  name: 'Order 1',
  partner_id: 1,
  partner_name: 'Partner 1',
  _custom_field: 'Custom value',
}
```

closes odoo/odoo#160169

Related: odoo/enterprise#60017
Signed-off-by: Adrien Guilliams (adgu) <adgu@odoo.com>

================================= pseudo patch: =================================

--- a/addons/pos_self_order/models/pos_config.py
+++ b/addons/pos_self_order/models/pos_config.py
@@ -306,7 +306,7 @@ class PosConfig(models.Model):
 
     def _get_self_ordering_payment_methods_data(self, payment_methods):
         excluded_fields = ['image']
-        payment_search_fields = self.current_session_id._load_data_params(self)['pos.payment.method']['fields']
+        payment_search_fields = self.env['pos.payment']._load_pos_data_fields(self.id)
         filtered_fields = [field for field in payment_search_fields if field not in excluded_fields]
         return payment_methods.read(filtered_fields)
 

--- a/addons/pos_self_order/models/pos_order.py
+++ b/addons/pos_self_order/models/pos_order.py
@@ -9,8 +9,6 @@ from odoo import models, fields, api
 class PosOrderLine(models.Model):
     _inherit = "pos.order.line"
 
-    combo_parent_id = fields.Many2one('pos.order.line', string='Combo Parent')
-    combo_line_ids = fields.One2many('pos.order.line', 'combo_parent_id', string='Combo Lines')
     combo_id = fields.Many2one('pos.combo', string='Combo line reference')
 
     @api.model_create_multi

--- a/addons/pos_self_order/models/pos_session.py
+++ b/addons/pos_self_order/models/pos_session.py
@@ -29,27 +29,19 @@ class PosSession(models.Model):
 
         return sessions
 
-    def _load_data_params(self, config_id):
-        params = super()._load_data_params(config_id)
-        params['product.product']['fields'].append('self_order_available')
-        return params
-
-    def load_data(self, models_to_load, only_data=False):
-        response = super().load_data(models_to_load, only_data)
-
-        if not only_data:
-            response['custom']['self_ordering'] = (
-                self.env["pos.config"]
-                .sudo()
-                .search_count(
-                    [
-                        *self.env["pos.config"]._check_company_domain(self.env.company),
-                        '|', ("self_ordering_mode", "=", "kiosk"),
-                        ("self_ordering_mode", "=", "mobile"),
-                    ],
-                    limit=1,
-                )
-                > 0
+    def _load_pos_data(self, data):
+        sessions = super()._load_pos_data(data)
+        sessions['data'][0]['_self_ordering'] = (
+            self.env["pos.config"]
+            .sudo()
+            .search_count(
+                [
+                    *self.env["pos.config"]._check_company_domain(self.env.company),
+                    '|', ("self_ordering_mode", "=", "kiosk"),
+                    ("self_ordering_mode", "=", "mobile"),
+                ],
+                limit=1,
             )
-
-        return response
+            > 0
+        )
+        return sessions

--- a/addons/pos_self_order/models/product_product.py
+++ b/addons/pos_self_order/models/product_product.py
@@ -44,6 +44,12 @@ class ProductTemplate(models.Model):
 class ProductProduct(models.Model):
     _inherit = "product.product"
 
+    @api.model
+    def _load_pos_data_fields(self, config_id):
+        params = super()._load_pos_data_fields(config_id)
+        params += ['self_order_available']
+        return params
+
     def _get_name(self) -> str:
         """
         Returns the name of the product without the code.
