PR: https://github.com/odoo/odoo/pull/55568

From: d2238de57630d58c4913ab44746476b83492c72f
From: Yannick Tivisse
Date: 2020-08-11 09:10:49

Structural Changes: 3
Total Changes: 71

[IMP] hr_holidays: Improve the general usability (back2basics)

closes odoo/odoo#55568

Taskid: 2282495
Related: odoo/upgrade#1574
Related: odoo/enterprise#12272
Signed-off-by: Yannick Tivisse (yti) <yti@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr_holidays/models/hr_leave.py
+++ b/addons/hr_holidays/models/hr_leave.py
@@ -158,7 +158,8 @@ class HolidaysRequest(models.Model):
     number_of_hours_display = fields.Float(
         'Duration in hours', compute='_compute_number_of_hours_display', readonly=True,
         help='Number of hours of the time off request according to your working schedule. Used for interface.')
-    duration_display = fields.Char('Requested (Days/Hours)', compute='_compute_duration_display',
+    number_of_hours_text = fields.Char(compute='_compute_number_of_hours_text')
+    duration_display = fields.Char('Requested (Days/Hours)', compute='_compute_duration_display', store=True,
         help="Field allowing to see the leave request duration in days or hours depending on the leave_type_request_unit")    # details
     # details
     meeting_id = fields.Many2one('calendar.event', string='Meeting', copy=False)
@@ -511,6 +512,15 @@ class HolidaysRequest(models.Model):
                 else float_round(leave.number_of_days_display, precision_digits=2)),
                 _('hours') if leave.leave_type_request_unit == 'hour' else _('days'))
 
+    @api.depends('number_of_hours_display')
+    def _compute_number_of_hours_text(self):
+        # YTI Note: All this because a readonly field takes all the width on edit mode...
+        for leave in self:
+            leave.number_of_hours_text = '%s%s Hours%s' % (
+                '' if leave.request_unit_half or leave.request_unit_hours else '(',
+                float_round(leave.number_of_hours_display, precision_digits=2),
+                '' if leave.request_unit_half or leave.request_unit_hours else ')')
+
     @api.depends('state', 'employee_id', 'department_id')
     def _compute_can_reset(self):
         for holiday in self:
@@ -623,28 +633,49 @@ class HolidaysRequest(models.Model):
                 else:
                     target = leave.employee_id.name
                 if leave.leave_type_request_unit == 'hour':
-                    res.append((
-                        leave.id,
-                        _("%(person)s on %(leave_type)s: %(duration).2f hours on %(date)s",
-                            person=target,
-                            leave_type=leave.holiday_status_id.name,
-                            duration=leave.number_of_hours_display,
-                            date=fields.Date.to_string(leave.date_from),
-                        )
-                    ))
+                    if self.env.context.get('hide_employee_name') and 'employee_id' in self.env.context.get('group_by', []):
+                        res.append((
+                            leave.id,
+                            _("%(person)s on %(leave_type)s: %(duration).2f hours on %(date)s",
+                                person=target,
+                                leave_type=leave.holiday_status_id.name,
+                                duration=leave.number_of_hours_display,
+                                date=fields.Date.to_string(leave.date_from),
+                            )
+                        ))
+                    else:
+                        res.append((
+                            leave.id,
+                            _("%(person)s on %(leave_type)s: %(duration).2f hours on %(date)s",
+                                person=target,
+                                leave_type=leave.holiday_status_id.name,
+                                duration=leave.number_of_hours_display,
+                                date=fields.Date.to_string(leave.date_from),
+                            )
+                        ))
                 else:
                     display_date = fields.Date.to_string(leave.date_from)
                     if leave.number_of_days > 1:
                         display_date += ' â‡¨ %s' % fields.Date.to_string(leave.date_to)
-                    res.append((
-                        leave.id,
-                        _("%(person)s on %(leave_type)s: %(duration).2f days (%(start)s)",
-                            person=target,
-                            leave_type=leave.holiday_status_id.name,
-                            duration=leave.number_of_days,
-                            start=display_date,
-                        )
-                    ))
+                    if self.env.context.get('hide_employee_name') and 'employee_id' in self.env.context.get('group_by', []):
+                        res.append((
+                            leave.id,
+                            _("%(leave_type)s: %(duration).2f days (%(start)s)",
+                                leave_type=leave.holiday_status_id.name,
+                                duration=leave.number_of_days,
+                                start=display_date,
+                            )
+                        ))
+                    else:
+                        res.append((
+                            leave.id,
+                            _("%(person)s on %(leave_type)s: %(duration).2f days (%(start)s)",
+                                person=target,
+                                leave_type=leave.holiday_status_id.name,
+                                duration=leave.number_of_days,
+                                start=display_date,
+                            )
+                        ))
         return res
 
     def add_follower(self, employee_id):

--- a/addons/hr_holidays/models/hr_leave_type.py
+++ b/addons/hr_holidays/models/hr_leave_type.py
@@ -366,7 +366,7 @@ class HolidaysType(models.Model):
 
     def action_see_group_leaves(self):
         self.ensure_one()
-        action = self.env.ref('hr_holidays.hr_leave_action_all').read()[0]
+        action = self.env.ref('hr_holidays.hr_leave_action_action_approve_department').read()[0]
         action['domain'] = [
             ('holiday_status_id', '=', self.ids[0]),
             ('date_from', '>=', fields.Datetime.to_string(datetime.datetime.now().replace(month=1, day=1, hour=0, minute=0, second=0, microsecond=0)))
