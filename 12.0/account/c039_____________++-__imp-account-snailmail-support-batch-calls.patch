PR: https://github.com/odoo/odoo/pull/

From: 53cdd68e7cc9e1494a9a99dcd2fff0cc835eab50
From: RÃ©mi Rahir
Date: 2018-08-10 16:41:00

Structural Changes: 7
Total Changes: 26

[IMP] account,snailmail: support batch calls

 - reworked the multi.compose.message model to manage
   several documents simultaneously
 - Added a letter model for asynchronous processing
 - usability improvement of the modal

================================= pseudo patch: =================================

--- a/addons/account/models/__init__.py
+++ b/addons/account/models/__init__.py
@@ -16,6 +16,5 @@ from . import res_config_settings
 from . import account_cash_rounding
 from . import reconciliation_widget
 from . import res_users
-from . import res_company
 from . import account_incoterms
 from . import digest

--- a/addons/account/models/account_invoice.py
+++ b/addons/account/models/account_invoice.py
@@ -574,8 +574,7 @@ class AccountInvoice(models.Model):
         """ Print the invoice and mark it as sent, so that we can see more
             easily the next step of the workflow
         """
-        self.ensure_one()
-        self.sent = True
+        self.write({'sent': True})
         if self.user_has_groups('account.group_account_invoice'):
             return self.env.ref('account.account_invoices').report_action(self)
         else:
@@ -588,7 +587,7 @@ class AccountInvoice(models.Model):
         """
         self.ensure_one()
         template = self.env.ref('account.email_template_edi_invoice', False)
-        compose_form = self.env.ref('account.multi_compose_message_wizard_form', False)
+        compose_form = self.env.ref('account.account_invoice_send_wizard_form', False)
         ctx = dict(
             default_model='account.invoice',
             default_res_id=self.id,
@@ -600,11 +599,11 @@ class AccountInvoice(models.Model):
             force_email=True
         )
         return {
-            'name': _('Compose Email'),
+            'name': _('Send Invoice'),
             'type': 'ir.actions.act_window',
             'view_type': 'form',
             'view_mode': 'form',
-            'res_model': 'multi.compose.message',
+            'res_model': 'account.invoice.send',
             'views': [(compose_form.id, 'form')],
             'view_id': compose_form.id,
             'target': 'new',

--- a/addons/account/models/company.py
+++ b/addons/account/models/company.py
@@ -71,6 +71,9 @@ Best Regards,'''))
     qr_code_payment_journal_id = fields.Many2one('account.journal', string='SEPA QR Code Bank Journal account')
     qr_code_valid = fields.Boolean(string='Has all required arguments', related="qr_code_payment_journal_id.bank_account_id.qr_code_valid")
 
+    invoice_is_email = fields.Boolean('Email by default', default=True)
+    invoice_is_print = fields.Boolean('Print by default', default=True)
+
     #Fields of the setup step for opening move
     account_opening_move_id = fields.Many2one(string='Opening Journal Entry', comodel_name='account.move', help="The journal entry containing the initial balance of all this company's accounts.")
     account_opening_journal_id = fields.Many2one(string='Opening Journal', comodel_name='account.journal', related='account_opening_move_id.journal_id', help="Journal where the opening entry of this company's accounting has been posted.")

--- a/addons/account/models/res_company.py
+++ b/None
@@ -1,11 +0,0 @@
-# -*- coding: utf-8 -*-
-# Part of Odoo. See LICENSE file for full copyright and licensing details.
-
-from odoo import fields, models
-
-
-class ResCompany(models.Model):
-    _inherit = 'res.company'
-
-    is_email = fields.Boolean('Email by default', default=True)
-    is_print = fields.Boolean('Print by default', default=True)

--- a/addons/account/models/res_config_settings.py
+++ b/addons/account/models/res_config_settings.py
@@ -86,6 +86,8 @@ class ResConfigSettings(models.TransientModel):
     qr_code = fields.Boolean(string='Display SEPA QR code', related='company_id.qr_code')
     qr_code_payment_journal_id = fields.Many2one('account.journal', related='company_id.qr_code_payment_journal_id', string="Payment Journal", domain="['&',('type', '=', 'bank'), ('currency_id.name','=','EUR')]")
     qr_code_valid = fields.Boolean(string='Has all required arguments', related="qr_code_payment_journal_id.bank_account_id.qr_code_valid")
+    invoice_is_print = fields.Boolean(string='Print', related='company_id.invoice_is_print')	
+    invoice_is_email = fields.Boolean(string='Send Email', related='company_id.invoice_is_email')
 
     @api.multi
     def set_values(self):
