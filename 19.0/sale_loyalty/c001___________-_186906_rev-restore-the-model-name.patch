PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:6 + add:0, change matches:
-    _inherit = ['loyalty.card']
-    _inherit = ['loyalty.history']
-    _inherit = ['loyalty.program']
-    _inherit = ['loyalty.reward']
-    _inherit = ['sale.order']
-    _inherit = ['sale.order.line']

Total Changes: 13

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/sale_loyalty/models/loyalty_card.py
+++ b/addons/sale_loyalty/models/loyalty_card.py
@@ -4,7 +4,7 @@ from odoo import fields, models
 
 
 class LoyaltyCard(models.Model):
-    _inherit = ['loyalty.card']
+    _inherit = 'loyalty.card'
 
     order_id = fields.Many2one(
         comodel_name='sale.order',

--- a/addons/sale_loyalty/models/loyalty_history.py
+++ b/addons/sale_loyalty/models/loyalty_history.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class LoyaltyHistory(models.Model):
-    _inherit = ['loyalty.history']
+    _inherit = 'loyalty.history'
 
     def _get_order_portal_url(self):
         if self.order_id and self.order_model == 'sale.order':

--- a/addons/sale_loyalty/models/loyalty_program.py
+++ b/addons/sale_loyalty/models/loyalty_program.py
@@ -4,7 +4,7 @@ from odoo import fields, models
 
 
 class LoyaltyProgram(models.Model):
-    _inherit = ['loyalty.program']
+    _inherit = 'loyalty.program'
 
     order_count = fields.Integer(compute='_compute_order_count')
     sale_ok = fields.Boolean(string="Sales", default=True)

--- a/addons/sale_loyalty/models/loyalty_reward.py
+++ b/addons/sale_loyalty/models/loyalty_reward.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class LoyaltyReward(models.Model):
-    _inherit = ['loyalty.reward']
+    _inherit = 'loyalty.reward'
 
     def _get_discount_product_values(self):
         res = super()._get_discount_product_values()

--- a/addons/sale_loyalty/models/sale_order.py
+++ b/addons/sale_loyalty/models/sale_order.py
@@ -16,7 +16,7 @@ def _generate_random_reward_code():
 
 
 class SaleOrder(models.Model):
-    _inherit = ['sale.order']
+    _inherit = 'sale.order'
 
     # Contains how much points should be given to a coupon upon validating the order
     applied_coupon_ids = fields.Many2many(

--- a/addons/sale_loyalty/models/sale_order_coupon_points.py
+++ b/addons/sale_loyalty/models/sale_order_coupon_points.py
@@ -4,6 +4,7 @@ from odoo import fields, models
 
 
 class SaleOrderCouponPoints(models.Model):
+    _name = 'sale.order.coupon.points'
     _description = 'Sale Order Coupon Points - Keeps track of how a sale order impacts a coupon'
 
     order_id = fields.Many2one(comodel_name='sale.order', required=True, ondelete='cascade')

--- a/addons/sale_loyalty/models/sale_order_line.py
+++ b/addons/sale_loyalty/models/sale_order_line.py
@@ -4,7 +4,7 @@ from odoo import api, fields, models
 
 
 class SaleOrderLine(models.Model):
-    _inherit = ['sale.order.line']
+    _inherit = 'sale.order.line'
 
     is_reward_line = fields.Boolean(
         string="Is a program reward line", compute='_compute_is_reward_line')
