PR: https://github.com/odoo/odoo/pull/

From: 99f497b390e680629dce3a7e2e282ada74ee9884
From: Yannick Tivisse
Date: 2018-04-26 13:13:38

Structural Changes: 8
Total Changes: 44

[IMP] *: Define groups on res.users models

The reified view on the res users will be dropped in the following commit.

The previous commit adds support to define each group as a computed field on the res users.

This commit defines:
- A boolean field for each 'isolated' res.group, i.e. a group in the hidden category.
- A selection field for each 'Application' res.group, i.e. a group in a application category.

Example:
- The group to manage pricelist in sales becomes a boolean field
- The groups project user/manager become a selection field

================================= pseudo patch: =================================

--- a/addons/sale/models/__init__.py
+++ b/addons/sale/models/__init__.py
@@ -13,3 +13,4 @@ from . import res_config_settings
 from . import sale_layout
 from . import sales_team
 from . import ir_model_fields
+from . import res_users
\ No newline at end of file

--- a/None
+++ b/addons/sale/models/res_users.py
@@ -0,0 +1,43 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import fields, models
+
+
+class ResUsers(models.Model):
+    _inherit = 'res.users'
+
+    has_group_warning_sale = fields.Boolean(
+        "A warning can be set on a product or a customer (Sale)",
+        compute='_compute_groups_id', inverse='_inverse_groups_id',
+        group_xml_id='sale.group_warning_sale')
+
+    has_group_sale_layout = fields.Boolean(
+        "Personalize sales order and invoice report",
+        compute='_compute_groups_id', inverse='_inverse_groups_id',
+        group_xml_id='sale.group_sale_layout')
+
+    has_group_delivery_invoice_address = fields.Boolean(
+        "Addresses in Sales Orders",
+        compute='_compute_groups_id', inverse='_inverse_groups_id',
+        group_xml_id='sale.group_delivery_invoice_address')
+
+    has_group_show_price_subtotal = fields.Boolean(
+        "Show line subtotals without taxes (B2B)",
+        compute='_compute_groups_id', inverse='_inverse_groups_id',
+        group_xml_id='sale.group_show_price_subtotal')
+
+    has_group_show_price_total = fields.Boolean(
+        "Show line subtotals with taxes included (B2C)",
+        compute='_compute_groups_id', inverse='_inverse_groups_id',
+        group_xml_id='sale.group_show_price_total')
+
+    has_group_discount_per_so_line = fields.Boolean(
+        "Discount on lines",
+        compute='_compute_groups_id', inverse='_inverse_groups_id',
+        group_xml_id='sale.group_discount_per_so_line')
+
+    has_group_proforma_sales = fields.Boolean(
+        "Pro-forma Invoices",
+        compute='_compute_groups_id', inverse='_inverse_groups_id',
+        group_xml_id='sale.group_proforma_sales')
