PR: https://github.com/odoo/odoo/pull/116060

From: 771477b9a7d3da29dde2007e303b2ad5322c361f
From: Didier (did)
Date: 2023-06-30 21:38:01

Structural Changes: 4
Total Changes: 42

[IMP] mail: Introduce gif picker in Discuss

This commit adds a GIF picker in discuss
app. GIF feature makes use of Tenor GIF API [1].
To enable GIF picker in discuss, you must provide
a Tenor GIF API key in the General Settings.
Then the GIF picker is visible in all channels
(chat window and discuss app), next to the emoji picker
button.

[1] https://tenor.com/gifapi/documentation

task-2365705

closes odoo/odoo#116060

Related: odoo/enterprise#41959
Signed-off-by: Alexandre KÃ¼hn (aku) <aku@odoo.com>
Co-authored-by: Brieuc-brd <brd@odoo.com>

================================= pseudo patch: =================================

--- a/addons/mail/models/discuss/__init__.py
+++ b/addons/mail/models/discuss/__init__.py
@@ -7,6 +7,7 @@ from . import mail_message
 from . import discuss_channel_member
 from . import discuss_channel_rtc_session
 from . import discuss_channel
+from . import discuss_gif_favorite
 from . import mail_guest
 
 # odoo models

--- a/None
+++ b/addons/mail/models/discuss/discuss_gif_favorite.py
@@ -0,0 +1,18 @@
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import fields, models
+
+
+class GifFavorite(models.Model):
+    _name = "discuss.gif.favorite"
+    _description = "Save favorite GIF from Tenor API"
+
+    tenor_gif_id = fields.Char("GIF id from Tenor", required=True)
+
+    _sql_constraints = [
+        (
+            "user_gif_favorite",
+            "unique(create_uid,tenor_gif_id)",
+            "User should not have duplicated favorite GIF",
+        ),
+    ]

--- a/addons/mail/models/discuss/mail_guest.py
+++ b/addons/mail/models/discuss/mail_guest.py
@@ -112,6 +112,7 @@ class MailGuest(models.Model):
             'current_partner': False,
             'current_user_id': False,
             'current_user_settings': False,
+            'hasGifPickerFeature': bool(self.env["ir.config_parameter"].sudo().get_param("discuss.tenor_api_key")),
             'hasLinkPreviewFeature': self.env['mail.link.preview']._is_link_preview_enabled(),
             'initBusId': self.env['bus.bus'].sudo()._bus_last_id(),
             'menu_id': False,

--- a/addons/mail/models/discuss/res_users.py
+++ b/addons/mail/models/discuss/res_users.py
@@ -52,5 +52,6 @@ class ResUsers(models.Model):
         self.ensure_one()
         return {
             'channels': self.partner_id._get_channels_as_member().channel_info(),
+            'hasGifPickerFeature': bool(self.env["ir.config_parameter"].sudo().get_param("discuss.tenor_api_key")),
             **super()._init_messaging(),
         }

--- a/addons/mail/models/res_config_settings.py
+++ b/addons/mail/models/res_config_settings.py
@@ -39,6 +39,27 @@ class ResConfigSettings(models.TransientModel):
     primary_color = fields.Char(related='company_id.primary_color', string="Header Color", readonly=False)
     secondary_color = fields.Char(related='company_id.secondary_color', string="Button Color", readonly=False)
 
+    tenor_api_key = fields.Char(
+        'Tenor API key',
+        config_parameter='discuss.tenor_api_key',
+        help="Add a Tenor GIF API key to enable GIFs support. https://developers.google.com/tenor/guides/quickstart#setup",
+    )
+    tenor_content_filter = fields.Selection(
+        [('high', 'High'),
+        ('medium', 'Medium'),
+        ('low', 'Low'),
+        ('off', 'Off')],
+        string='Tenor content filter',
+        help="https://developers.google.com/tenor/guides/content-filtering",
+        config_parameter='discuss.tenor_content_filter',
+        default='low',
+    )
+    tenor_gif_limit = fields.Integer(
+        default=8,
+        config_parameter='discuss.tenor_gif_limit',
+        help="Fetch up to the specified number of GIF.",
+    )
+
     def _compute_fail_counter(self):
         previous_date = fields.Datetime.now() - datetime.timedelta(days=30)
 
