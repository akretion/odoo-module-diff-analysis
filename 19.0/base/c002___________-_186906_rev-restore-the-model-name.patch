PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:5 + add:0, change matches:
-    _inherit = ['res.groups']
-    _inherit = ['res.groups']
-    _inherit = ["ir.module.category"]
-    _inherit = ['res.users']
-    _inherit = ['res.users']

Total Changes: 89

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/odoo/addons/base/models/avatar_mixin.py
+++ b/odoo/addons/base/models/avatar_mixin.py
@@ -19,6 +19,7 @@ def get_hsl_from_seed(seed):
 
 
 class AvatarMixin(models.AbstractModel):
+    _name = 'avatar.mixin'
     _inherit = ['image.mixin']
     _description = "Avatar Mixin"
     _avatar_name_field = "name"

--- a/odoo/addons/base/models/decimal_precision.py
+++ b/odoo/addons/base/models/decimal_precision.py
@@ -15,6 +15,7 @@ def get_precision(application):
 
 
 class DecimalPrecision(models.Model):
+    _name = 'decimal.precision'
     _description = 'Decimal Precision'
 
     name = fields.Char('Usage', required=True)

--- a/odoo/addons/base/models/image_mixin.py
+++ b/odoo/addons/base/models/image_mixin.py
@@ -5,6 +5,7 @@ from odoo import models, fields
 
 
 class ImageMixin(models.AbstractModel):
+    _name = 'image.mixin'
     _description = "Image Mixin"
 
     # all image fields are base64 encoded and PIL-supported

--- a/odoo/addons/base/models/ir_actions.py
+++ b/odoo/addons/base/models/ir_actions.py
@@ -50,6 +50,7 @@ class LoggerProxy:
 
 
 class IrActionsActions(models.Model):
+    _name = 'ir.actions.actions'
     _description = 'Actions'
     _table = 'ir_actions'
     _order = 'name'
@@ -255,6 +256,7 @@ class IrActionsActions(models.Model):
 
 
 class IrActionsAct_Window(models.Model):
+    _name = 'ir.actions.act_window'
     _description = 'Action Window'
     _table = 'ir_act_window'
     _inherit = ['ir.actions.actions']
@@ -407,6 +409,7 @@ VIEW_TYPES = [
 
 
 class IrActionsAct_WindowView(models.Model):
+    _name = 'ir.actions.act_window.view'
     _description = 'Action Window View'
     _table = 'ir_act_window_view'
     _rec_name = 'view_id'
@@ -423,6 +426,7 @@ class IrActionsAct_WindowView(models.Model):
 
 
 class IrActionsAct_Window_Close(models.Model):
+    _name = 'ir.actions.act_window_close'
     _description = 'Action Window Close'
     _inherit = ['ir.actions.actions']
     _table = 'ir_actions'
@@ -439,6 +443,7 @@ class IrActionsAct_Window_Close(models.Model):
 
 
 class IrActionsAct_Url(models.Model):
+    _name = 'ir.actions.act_url'
     _description = 'Action URL'
     _table = 'ir_act_url'
     _inherit = ['ir.actions.actions']
@@ -1147,6 +1152,7 @@ class IrActionsTodo(models.Model):
 
 
 class IrActionsClient(models.Model):
+    _name = 'ir.actions.client'
     _description = 'Client Action'
     _inherit = ['ir.actions.actions']
     _table = 'ir_act_client'

--- a/odoo/addons/base/models/ir_actions_report.py
+++ b/odoo/addons/base/models/ir_actions_report.py
@@ -136,6 +136,7 @@ else:
 
 
 class IrActionsReport(models.Model):
+    _name = 'ir.actions.report'
     _description = 'Report Action'
     _inherit = ['ir.actions.actions']
     _table = 'ir_act_report_xml'

--- a/odoo/addons/base/models/ir_binary.py
+++ b/odoo/addons/base/models/ir_binary.py
@@ -16,6 +16,7 @@ _logger = logging.getLogger(__name__)
 
 
 class IrBinary(models.AbstractModel):
+    _name = 'ir.binary'
     _description = "File streaming helper model for controllers"
 
     def _find_record(

--- a/odoo/addons/base/models/ir_cron.py
+++ b/odoo/addons/base/models/ir_cron.py
@@ -745,6 +745,7 @@ class IrCron(models.Model):
 
 
 class IrCronTrigger(models.Model):
+    _name = 'ir.cron.trigger'
     _description = 'Triggered actions'
     _rec_name = 'cron_id'
     _allow_sudo_commands = False
@@ -762,6 +763,7 @@ class IrCronTrigger(models.Model):
 
 
 class IrCronProgress(models.Model):
+    _name = 'ir.cron.progress'
     _description = 'Progress of Scheduled Actions'
     _rec_name = 'cron_id'
 

--- a/odoo/addons/base/models/ir_demo.py
+++ b/odoo/addons/base/models/ir_demo.py
@@ -5,6 +5,7 @@ from odoo.addons.base.models.ir_module import assert_log_admin_access
 
 
 class IrDemo(models.TransientModel):
+    _name = 'ir.demo'
 
     _description = 'Demo'
 

--- a/odoo/addons/base/models/ir_demo_failure.py
+++ b/odoo/addons/base/models/ir_demo_failure.py
@@ -12,6 +12,7 @@ class IrDemo_Failure(models.TransientModel):
 
 
 class IrDemo_FailureWizard(models.TransientModel):
+    _name = 'ir.demo_failure.wizard'
     _description = 'Demo Failure wizard'
 
     failure_ids = fields.One2many(

--- a/odoo/addons/base/models/ir_embedded_actions.py
+++ b/odoo/addons/base/models/ir_embedded_actions.py
@@ -6,6 +6,7 @@ from ast import literal_eval
 
 
 class IrEmbeddedActions(models.Model):
+    _name = 'ir.embedded.actions'
     _description = 'Embedded Actions'
     _order = 'sequence, id'
 

--- a/odoo/addons/base/models/ir_exports.py
+++ b/odoo/addons/base/models/ir_exports.py
@@ -5,6 +5,7 @@ from odoo import fields, models
 
 
 class IrExports(models.Model):
+    _name = 'ir.exports'
     _description = 'Exports'
     _order = 'name'
 
@@ -14,6 +15,7 @@ class IrExports(models.Model):
 
 
 class IrExportsLine(models.Model):
+    _name = 'ir.exports.line'
     _description = 'Exports Line'
     _order = 'id'
 

--- a/odoo/addons/base/models/ir_fields.py
+++ b/odoo/addons/base/models/ir_fields.py
@@ -44,6 +44,7 @@ class ConversionNotFound(ValueError):
 
 
 class IrFieldsConverter(models.AbstractModel):
+    _name = 'ir.fields.converter'
     _description = 'Fields Converter'
 
     @api.model

--- a/odoo/addons/base/models/ir_filters.py
+++ b/odoo/addons/base/models/ir_filters.py
@@ -7,6 +7,7 @@ from odoo.tools.safe_eval import safe_eval, datetime
 
 
 class IrFilters(models.Model):
+    _name = 'ir.filters'
     _description = 'Filters'
     _order = 'model_id, name, id desc'
 

--- a/odoo/addons/base/models/ir_http.py
+++ b/odoo/addons/base/models/ir_http.py
@@ -133,6 +133,7 @@ class FasterRule(werkzeug.routing.Rule):
 
 
 class IrHttp(models.AbstractModel):
+    _name = 'ir.http'
     _description = "HTTP Routing"
 
     @classmethod

--- a/odoo/addons/base/models/ir_logging.py
+++ b/odoo/addons/base/models/ir_logging.py
@@ -3,6 +3,7 @@ from odoo import api, fields, models
 
 
 class IrLogging(models.Model):
+    _name = 'ir.logging'
     _description = 'Logging'
     _order = 'id DESC'
     _allow_sudo_commands = False

--- a/odoo/addons/base/models/ir_model.py
+++ b/odoo/addons/base/models/ir_model.py
@@ -517,6 +517,7 @@ FIELD_TYPES = [(key, key) for key in sorted(fields.Field.by_type)]
 
 
 class IrModelFields(models.Model):
+    _name = 'ir.model.fields'
     _description = "Fields"
     _order = "name"
     _rec_name = 'field_description'
@@ -1376,6 +1377,7 @@ class IrModelFields(models.Model):
 
 
 class IrModelInherit(models.Model):
+    _name = 'ir.model.inherit'
     _description = "Model Inheritance Tree"
     _log_access = False
 
@@ -1460,6 +1462,7 @@ class IrModelInherit(models.Model):
 
 
 class IrModelFieldsSelection(models.Model):
+    _name = 'ir.model.fields.selection'
     _order = 'sequence, id'
     _description = "Fields Selection"
     _allow_sudo_commands = False
@@ -1993,6 +1996,7 @@ class IrModelRelation(models.Model):
 
 
 class IrModelAccess(models.Model):
+    _name = 'ir.model.access'
     _description = 'Model Access'
     _order = 'model_id,group_id,name,id'
     _allow_sudo_commands = False
@@ -2626,6 +2630,7 @@ class IrModelData(models.Model):
 
 
 class WizardIrModelMenuCreate(models.TransientModel):
+    _name = 'wizard.ir.model.menu.create'
     _description = 'Create Menu Wizard'
 
     menu_id = fields.Many2one('ir.ui.menu', string='Parent Menu', required=True, ondelete='cascade')

--- a/odoo/addons/base/models/ir_module.py
+++ b/odoo/addons/base/models/ir_module.py
@@ -77,6 +77,7 @@ def assert_log_admin_access(method):
 
 
 class IrModuleCategory(models.Model):
+    _name = 'ir.module.category'
     _description = "Application"
     _order = 'name'
     _allow_sudo_commands = False
@@ -149,6 +150,7 @@ XML_DECLARATION = (
 
 
 class IrModuleModule(models.Model):
+    _name = 'ir.module.module'
     _rec_name = "shortdesc"
     _rec_names_search = ['name', 'shortdesc', 'summary']
     _description = "Module"
@@ -956,6 +958,7 @@ DEP_STATES = STATES + [('unknown', 'Unknown')]
 
 
 class IrModuleModuleDependency(models.Model):
+    _name = 'ir.module.module.dependency'
     _description = "Module dependency"
     _log_access = False  # inserts are done manually, create and write uid, dates are always null
     _allow_sudo_commands = False
@@ -1020,6 +1023,7 @@ class IrModuleModuleDependency(models.Model):
 
 
 class IrModuleModuleExclusion(models.Model):
+    _name = 'ir.module.module.exclusion'
     _description = "Module exclusion"
     _allow_sudo_commands = False
 

--- a/odoo/addons/base/models/ir_profile.py
+++ b/odoo/addons/base/models/ir_profile.py
@@ -18,6 +18,7 @@ _logger = logging.getLogger(__name__)
 
 
 class IrProfile(models.Model):
+    _name = 'ir.profile'
     _description = 'Profiling results'
     _log_access = False  # avoid useless foreign key on res_user
     _order = 'session desc, id desc'
@@ -123,6 +124,7 @@ class IrProfile(models.Model):
 
 
 class BaseEnableProfilingWizard(models.TransientModel):
+    _name = 'base.enable.profiling.wizard'
     _description = "Enable profiling for some time"
 
     duration = fields.Selection([

--- a/odoo/addons/base/models/ir_qweb_fields.py
+++ b/odoo/addons/base/models/ir_qweb_fields.py
@@ -147,6 +147,7 @@ class IrQwebField(models.AbstractModel):
 
 
 class IrQwebFieldInteger(models.AbstractModel):
+    _name = 'ir.qweb.field.integer'
     _description = 'Qweb Field Integer'
     _inherit = ['ir.qweb.field']
 
@@ -167,6 +168,7 @@ class IrQwebFieldInteger(models.AbstractModel):
 
 
 class IrQwebFieldFloat(models.AbstractModel):
+    _name = 'ir.qweb.field.float'
     _description = 'Qweb Field Float'
     _inherit = ['ir.qweb.field']
 
@@ -211,6 +213,7 @@ class IrQwebFieldFloat(models.AbstractModel):
 
 
 class IrQwebFieldDate(models.AbstractModel):
+    _name = 'ir.qweb.field.date'
     _description = 'Qweb Field Date'
     _inherit = ['ir.qweb.field']
 
@@ -228,6 +231,7 @@ class IrQwebFieldDate(models.AbstractModel):
 
 
 class IrQwebFieldDatetime(models.AbstractModel):
+    _name = 'ir.qweb.field.datetime'
     _description = 'Qweb Field Datetime'
     _inherit = ['ir.qweb.field']
 
@@ -285,6 +289,7 @@ class IrQwebFieldDatetime(models.AbstractModel):
 
 
 class IrQwebFieldText(models.AbstractModel):
+    _name = 'ir.qweb.field.text'
     _description = 'Qweb Field Text'
     _inherit = ['ir.qweb.field']
 
@@ -297,6 +302,7 @@ class IrQwebFieldText(models.AbstractModel):
 
 
 class IrQwebFieldSelection(models.AbstractModel):
+    _name = 'ir.qweb.field.selection'
     _description = 'Qweb Field Selection'
     _inherit = ['ir.qweb.field']
 
@@ -325,6 +331,7 @@ class IrQwebFieldSelection(models.AbstractModel):
 
 
 class IrQwebFieldMany2one(models.AbstractModel):
+    _name = 'ir.qweb.field.many2one'
     _description = 'Qweb Field Many to One'
     _inherit = ['ir.qweb.field']
 
@@ -339,6 +346,7 @@ class IrQwebFieldMany2one(models.AbstractModel):
 
 
 class IrQwebFieldMany2many(models.AbstractModel):
+    _name = 'ir.qweb.field.many2many'
     _description = 'Qweb field many2many'
     _inherit = ['ir.qweb.field']
 
@@ -351,6 +359,7 @@ class IrQwebFieldMany2many(models.AbstractModel):
 
 
 class IrQwebFieldHtml(models.AbstractModel):
+    _name = 'ir.qweb.field.html'
     _description = 'Qweb Field HTML'
     _inherit = ['ir.qweb.field']
 
@@ -666,6 +675,7 @@ class IrQwebFieldDuration(models.AbstractModel):
 
 
 class IrQwebFieldRelative(models.AbstractModel):
+    _name = 'ir.qweb.field.relative'
     _description = 'Qweb Field Relative'
     _inherit = ['ir.qweb.field']
 
@@ -740,6 +750,7 @@ class IrQwebFieldBarcode(models.AbstractModel):
 
 
 class IrQwebFieldContact(models.AbstractModel):
+    _name = 'ir.qweb.field.contact'
     _description = 'Qweb Field Contact'
     _inherit = ['ir.qweb.field.many2one']
 
@@ -818,6 +829,7 @@ class IrQwebFieldContact(models.AbstractModel):
 
 
 class IrQwebFieldQweb(models.AbstractModel):
+    _name = 'ir.qweb.field.qweb'
     _description = 'Qweb Field qweb'
     _inherit = ['ir.qweb.field.many2one']
 

--- a/odoo/addons/base/models/ir_rule.py
+++ b/odoo/addons/base/models/ir_rule.py
@@ -12,6 +12,7 @@ _logger = logging.getLogger(__name__)
 
 
 class IrRule(models.Model):
+    _name = 'ir.rule'
     _description = 'Record Rule'
     _order = 'model_id DESC,id'
     _MODES = ['read', 'write', 'create', 'unlink']

--- a/odoo/addons/base/models/ir_sequence.py
+++ b/odoo/addons/base/models/ir_sequence.py
@@ -310,6 +310,7 @@ class IrSequence(models.Model):
 
 
 class IrSequenceDate_Range(models.Model):
+    _name = 'ir.sequence.date_range'
     _description = 'Sequence Date Range'
     _rec_name = "sequence_id"
     _allow_sudo_commands = False

--- a/odoo/addons/base/models/ir_ui_menu.py
+++ b/odoo/addons/base/models/ir_ui_menu.py
@@ -17,6 +17,7 @@ NUMBER_PARENS = re.compile(r"\(([0-9]+)\)")
 
 
 class IrUiMenu(models.Model):
+    _name = 'ir.ui.menu'
     _description = 'Menu'
     _order = "sequence,id"
     _parent_store = True

--- a/odoo/addons/base/models/ir_ui_view.py
+++ b/odoo/addons/base/models/ir_ui_view.py
@@ -64,6 +64,7 @@ def att_names(name):
 
 
 class IrUiViewCustom(models.Model):
+    _name = 'ir.ui.view.custom'
     _description = 'Custom View'
     _order = 'create_date desc'  # search(limit=1) should return the last customization
     _rec_name = 'user_id'
@@ -136,6 +137,7 @@ WRONGCLASS = re.compile(r"(@class\s*=|=\s*@class|contains\(@class)")
 
 
 class IrUiView(models.Model):
+    _name = 'ir.ui.view'
     _description = 'View'
     _order = "priority,name,id"
     _allow_sudo_commands = False
@@ -2349,8 +2351,7 @@ class ResetViewArchWizard(models.TransientModel):
 
 
 class Base(models.AbstractModel):
-
-    _inherit = ['base']
+    _inherit = 'base'
 
     _date_name = 'date'         #: field to use for default calendar view
 

--- a/odoo/addons/base/models/report_layout.py
+++ b/odoo/addons/base/models/report_layout.py
@@ -5,6 +5,7 @@ from odoo import fields, models
 
 
 class ReportLayout(models.Model):
+    _name = 'report.layout'
     _description = 'Report Layout'
     _order = 'sequence'
 

--- a/odoo/addons/base/models/report_paperformat.py
+++ b/odoo/addons/base/models/report_paperformat.py
@@ -164,6 +164,7 @@ PAPER_SIZES = [
 
 
 class ReportPaperformat(models.Model):
+    _name = 'report.paperformat'
     _description = "Paper Format Config"
 
     name = fields.Char('Name', required=True)

--- a/odoo/addons/base/models/res_bank.py
+++ b/odoo/addons/base/models/res_bank.py
@@ -13,6 +13,7 @@ def sanitize_account_number(acc_number):
 
 
 class ResBank(models.Model):
+    _name = 'res.bank'
     _description = 'Bank'
     _order = 'name'
     _rec_names_search = ['name', 'bic']
@@ -57,6 +58,7 @@ class ResBank(models.Model):
 
 
 class ResPartnerBank(models.Model):
+    _name = 'res.partner.bank'
     _rec_name = 'acc_number'
     _description = 'Bank Accounts'
     _order = 'sequence, id'

--- a/odoo/addons/base/models/res_company.py
+++ b/odoo/addons/base/models/res_company.py
@@ -15,6 +15,7 @@ _logger = logging.getLogger(__name__)
 
 
 class ResCompany(models.Model):
+    _name = 'res.company'
     _description = 'Companies'
     _order = 'sequence, name'
     _inherit = ['format.address.mixin', 'format.vat.label.mixin']

--- a/odoo/addons/base/models/res_country.py
+++ b/odoo/addons/base/models/res_country.py
@@ -30,6 +30,7 @@ NO_FLAG_COUNTRIES = [
 
 
 class ResCountry(models.Model):
+    _name = 'res.country'
     _description = 'Country'
     _order = 'name'
     _rec_names_search = ['name', 'code']
@@ -151,6 +152,7 @@ class ResCountry(models.Model):
 
 
 class ResCountryGroup(models.Model):
+    _name = 'res.country.group'
     _description = "Country Group"
 
     name = fields.Char(required=True, translate=True)
@@ -159,6 +161,7 @@ class ResCountryGroup(models.Model):
 
 
 class ResCountryState(models.Model):
+    _name = 'res.country.state'
     _description = "Country state"
     _order = 'code'
     _rec_names_search = ['name', 'code']

--- a/odoo/addons/base/models/res_currency.py
+++ b/odoo/addons/base/models/res_currency.py
@@ -20,6 +20,7 @@ except ImportError:
 
 
 class ResCurrency(models.Model):
+    _name = 'res.currency'
     _description = "Currency"
     _rec_names_search = ['name', 'full_name']
     _order = 'active desc, name'
@@ -331,6 +332,7 @@ class ResCurrency(models.Model):
 
 
 class ResCurrencyRate(models.Model):
+    _name = 'res.currency.rate'
     _description = "Currency Rate"
     _rec_names_search = ['name', 'rate']
     _order = "name desc"

--- a/odoo/addons/base/models/res_device.py
+++ b/odoo/addons/base/models/res_device.py
@@ -14,6 +14,7 @@ _logger = logging.getLogger(__name__)
 
 
 class ResDeviceLog(models.Model):
+    _name = 'res.device.log'
     _description = 'Device Log'
     _rec_names_search = ['platform', 'browser']
 
@@ -137,6 +138,7 @@ class ResDeviceLog(models.Model):
 
 
 class ResDevice(models.Model):
+    _name = 'res.device'
     _inherit = ["res.device.log"]
     _description = "Devices"
     _auto = False

--- a/odoo/addons/base/models/res_lang.py
+++ b/odoo/addons/base/models/res_lang.py
@@ -48,6 +48,7 @@ class LangDataDict(frozendict):
 
 
 class ResLang(models.Model):
+    _name = 'res.lang'
     _description = "Languages"
     _order = "active desc,name"
     _allow_sudo_commands = False

--- a/odoo/addons/base/models/res_partner.py
+++ b/odoo/addons/base/models/res_partner.py
@@ -47,6 +47,7 @@ def _tz_get(self):
 
 
 class FormatVatLabelMixin(models.AbstractModel):
+    _name = 'format.vat.label.mixin'
     _description = "Country Specific VAT Label"
 
     @api.model
@@ -62,6 +63,7 @@ class FormatVatLabelMixin(models.AbstractModel):
 
 
 class FormatAddressMixin(models.AbstractModel):
+    _name = 'format.address.mixin'
     _description = 'Address Format'
 
     def _extract_fields_from_address(self, address_line):
@@ -136,6 +138,7 @@ class FormatAddressMixin(models.AbstractModel):
 
 
 class ResPartnerCategory(models.Model):
+    _name = 'res.partner.category'
     _description = 'Partner Tags'
     _order = 'name'
     _parent_store = True
@@ -178,6 +181,7 @@ class ResPartnerCategory(models.Model):
 
 
 class ResPartnerTitle(models.Model):
+    _name = 'res.partner.title'
     _order = 'name'
     _description = 'Partner Title'
 
@@ -186,6 +190,7 @@ class ResPartnerTitle(models.Model):
 
 
 class ResPartner(models.Model):
+    _name = 'res.partner'
     _description = 'Contact'
     _inherit = ['format.address.mixin', 'format.vat.label.mixin', 'avatar.mixin']
     _order = "complete_name ASC, id DESC"
@@ -1071,6 +1076,7 @@ class ResPartner(models.Model):
 
 
 class ResPartnerIndustry(models.Model):
+    _name = 'res.partner.industry'
     _description = 'Industry'
     _order = "name"
 

--- a/odoo/addons/base/models/res_users.py
+++ b/odoo/addons/base/models/res_users.py
@@ -174,6 +174,7 @@ def check_identity(fn):
 
 
 class ResGroups(models.Model):
+    _name = 'res.groups'
     _description = "Access Groups"
     _rec_name = 'full_name'
     _order = 'name'
@@ -299,6 +300,7 @@ class ResGroups(models.Model):
 
 
 class ResUsersLog(models.Model):
+    _name = 'res.users.log'
     _order = 'id desc'
     _description = 'Users Log'
     # Uses the magical fields `create_uid` and `create_date` for recording logins.
@@ -1443,7 +1445,7 @@ ResUsersPatchedInTest = ResUsers
 # TODO: reorganize or split the file to avoid declaring classes multiple times
 # pylint: disable=E0102
 class ResGroups(models.Model):  # noqa: F811
-    _inherit = ['res.groups']
+    _inherit = 'res.groups'
 
     implied_ids = fields.Many2many('res.groups', 'res_groups_implied_rel', 'gid', 'hid',
         string='Inherits', help='Users of this group automatically inherit those groups')
@@ -1618,7 +1620,7 @@ class UsersImplied(models.Model):
 
 # pylint: disable=E0102
 class ResGroups(models.Model):  # noqa: F811
-    _inherit = ['res.groups']
+    _inherit = 'res.groups'
 
     @api.model_create_multi
     def create(self, vals_list):
@@ -1838,7 +1840,7 @@ class ResGroups(models.Model):  # noqa: F811
 
 
 class IrModuleCategory(models.Model):
-    _inherit = ["ir.module.category"]
+    _inherit = "ir.module.category"
 
     def write(self, values):
         res = super().write(values)
@@ -1854,7 +1856,7 @@ class IrModuleCategory(models.Model):
 
 # pylint: disable=E0102
 class ResUsers(models.Model):  # noqa: F811
-    _inherit = ['res.users']
+    _inherit = 'res.users'
 
     user_group_warning = fields.Text(string="User Group Warning", compute="_compute_user_group_warning")
 
@@ -2208,6 +2210,7 @@ class ChangePasswordUser(models.TransientModel):
 
 
 class ChangePasswordOwn(models.TransientModel):
+    _name = 'change.password.own'
     _description = "User, change own password wizard"
     _transient_max_hours = 0.1
 
@@ -2240,7 +2243,7 @@ KEY_CRYPT_CONTEXT = CryptContext(
 
 # pylint: disable=E0102
 class ResUsers(models.Model):  # noqa: F811
-    _inherit = ['res.users']
+    _inherit = 'res.users'
 
     api_key_ids = fields.One2many('res.users.apikeys', 'user_id', string="API Keys")
 
@@ -2295,6 +2298,7 @@ class ResUsers(models.Model):  # noqa: F811
 
 
 class ResUsersApikeys(models.Model):
+    _name = 'res.users.apikeys'
     _description = 'Users API Keys'
     _auto = False # so we can have a secret column
     _allow_sudo_commands = False
@@ -2418,6 +2422,7 @@ class ResUsersApikeys(models.Model):
 
 
 class ResUsersApikeysDescription(models.TransientModel):
+    _name = 'res.users.apikeys.description'
     _description = 'API Key Description'
 
     def _selection_duration(self):
@@ -2500,6 +2505,7 @@ class ResUsersApikeysDescription(models.TransientModel):
 
 
 class ResUsersApikeysShow(models.AbstractModel):
+    _name = 'res.users.apikeys.show'
     _description = 'Show API Key'
 
     # the field 'id' is necessary for the onchange that returns the value of 'key'

--- a/odoo/addons/base/models/res_users_settings.py
+++ b/odoo/addons/base/models/res_users_settings.py
@@ -5,6 +5,7 @@ from odoo import api, fields, models
 
 
 class ResUsersSettings(models.Model):
+    _name = 'res.users.settings'
     _description = 'User Settings'
     _rec_name = 'user_id'
 
