PR: https://github.com/odoo/odoo/pull/

From: 95b4fd1a259bb1a76db7c6c7325dcfe88ddbc286
From: Simon Lejeune
Date: 2019-06-09 14:11:36

Structural Changes: 6
Total Changes: 62

[REF] stock_account: stock location to its own file

No changes on the code.

task-1875873

================================= pseudo patch: =================================

--- a/addons/stock_account/models/__init__.py
+++ b/addons/stock_account/models/__init__.py
@@ -8,4 +8,5 @@ from . import account_reconciliation_widget
 from . import product
 from . import stock
 from . import stock_inventory
+from . import stock_location
 from . import res_config_settings

--- a/addons/stock_account/models/stock.py
+++ b/addons/stock_account/models/stock.py
@@ -11,34 +11,6 @@ import logging
 _logger = logging.getLogger(__name__)
 
 
-class StockLocation(models.Model):
-    _inherit = "stock.location"
-
-    valuation_in_account_id = fields.Many2one(
-        'account.account', 'Stock Valuation Account (Incoming)',
-        domain=[('internal_type', '=', 'other'), ('deprecated', '=', False)],
-        help="Used for real-time inventory valuation. When set on a virtual location (non internal type), "
-             "this account will be used to hold the value of products being moved from an internal location "
-             "into this location, instead of the generic Stock Output Account set on the product. "
-             "This has no effect for internal locations.")
-    valuation_out_account_id = fields.Many2one(
-        'account.account', 'Stock Valuation Account (Outgoing)',
-        domain=[('internal_type', '=', 'other'), ('deprecated', '=', False)],
-        help="Used for real-time inventory valuation. When set on a virtual location (non internal type), "
-             "this account will be used to hold the value of products being moved out of this location "
-             "and into an internal location, instead of the generic Stock Output Account set on the product. "
-             "This has no effect for internal locations.")
-
-    def _should_be_valued(self):
-        """ This method returns a boolean reflecting whether the products stored in `self` should
-        be considered when valuating the stock of a company.
-        """
-        self.ensure_one()
-        if self.usage == 'internal' or (self.usage == 'transit' and self.company_id):
-            return True
-        return False
-
-
 class StockMoveLine(models.Model):
     _inherit = 'stock.move.line'
 

--- a/None
+++ b/addons/stock_account/models/stock_location.py
@@ -0,0 +1,33 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import fields, models
+
+
+class StockLocation(models.Model):
+    _inherit = "stock.location"
+
+    valuation_in_account_id = fields.Many2one(
+        'account.account', 'Stock Valuation Account (Incoming)',
+        domain=[('internal_type', '=', 'other'), ('deprecated', '=', False)],
+        help="Used for real-time inventory valuation. When set on a virtual location (non internal type), "
+             "this account will be used to hold the value of products being moved from an internal location "
+             "into this location, instead of the generic Stock Output Account set on the product. "
+             "This has no effect for internal locations.")
+    valuation_out_account_id = fields.Many2one(
+        'account.account', 'Stock Valuation Account (Outgoing)',
+        domain=[('internal_type', '=', 'other'), ('deprecated', '=', False)],
+        help="Used for real-time inventory valuation. When set on a virtual location (non internal type), "
+             "this account will be used to hold the value of products being moved out of this location "
+             "and into an internal location, instead of the generic Stock Output Account set on the product. "
+             "This has no effect for internal locations.")
+
+    def _should_be_valued(self):
+        """ This method returns a boolean reflecting whether the products stored in `self` should
+        be considered when valuating the stock of a company.
+        """
+        self.ensure_one()
+        if self.usage == 'internal' or (self.usage == 'transit' and self.company_id):
+            return True
+        return False
+
