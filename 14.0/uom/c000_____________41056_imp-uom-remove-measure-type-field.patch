PR: https://github.com/odoo/odoo/pull/41056

From: 52ed0be17e80aa6bcc24d59620dd3462b6d577c3
From: jdoutreloux
Date: 2020-01-13 11:19:17

Breaking data model changes score: 2, change matches:
-    measure_type = fields.Selection([
-    measure_type = fields.Selection(string="Type of measurement category", related='category_id.measure_type', store=True, readonly=True)

Total Changes: 29

[IMP] uom : remove 'measure_type' field

This removes the measure_type field which has become unused and
causes issues when users try to add new uom categories.

Task-2043927

closes odoo/odoo#41056

Related: odoo/enterprise#6945
Signed-off-by: Yannick Tivisse (yti) <yti@odoo.com>

================================= pseudo patch: =================================

--- a/addons/uom/models/uom_uom.py
+++ b/addons/uom/models/uom_uom.py
@@ -10,20 +10,11 @@ class UoMCategory(models.Model):
     _description = 'Product UoM Categories'
 
     name = fields.Char('Unit of Measure Category', required=True, translate=True)
-    measure_type = fields.Selection([
-        ('unit', 'Default Units'),
-        ('weight', 'Default Weight'),
-        ('working_time', 'Default Working Time'),
-        ('length', 'Default Length'),
-        ('volume', 'Default Volume'),
-    ], string="Type of Measure")
-
-    _sql_constraints = [
-        ('uom_category_unique_type', 'UNIQUE(measure_type)', 'You can have only one category per measurement type.'),
-    ]
 
     def unlink(self):
-        if self.filtered(lambda categ: categ.measure_type == 'working_time'):
+        uom_categ_unit = self.env.ref('uom.product_uom_categ_unit')
+        uom_categ_wtime = self.env.ref('uom.uom_categ_wtime')
+        if any(categ.id in (uom_categ_unit + uom_categ_wtime).ids for categ in self):
             raise UserError(_("You cannot delete this UoM Category as it is used by the system."))
         return super(UoMCategory, self).unlink()
 
@@ -54,7 +45,6 @@ class UoM(models.Model):
         ('reference', 'Reference Unit of Measure for this category'),
         ('smaller', 'Smaller than the reference Unit of Measure')], 'Type',
         default='reference', required=1)
-    measure_type = fields.Selection(string="Type of measurement category", related='category_id.measure_type', store=True, readonly=True)
 
     _sql_constraints = [
         ('factor_gt_zero', 'CHECK (factor!=0)', 'The conversion ratio for a unit of measure cannot be 0!'),
@@ -93,6 +83,15 @@ class UoM(models.Model):
             if uom_data['uom_count'] > 1:
                 raise ValidationError(_("UoM category %s should only have one reference unit of measure.") % (self.env['uom.category'].browse(uom_data['category_id']).name,))
 
+    @api.constrains('category_id')
+    def _validate_uom_category(self):
+        for uom in self:
+            reference_uoms = self.env['uom.uom'].search([
+                ('category_id', '=', uom.category_id.id),
+                ('uom_type', '=', 'reference')])
+            if len(reference_uoms) > 1:
+                raise ValidationError(_("UoM category %s should only have one reference unit of measure.") % (self.category_id.name))
+
     @api.model_create_multi
     def create(self, vals_list):
         for values in vals_list:
@@ -108,7 +107,9 @@ class UoM(models.Model):
         return super(UoM, self).write(values)
 
     def unlink(self):
-        if self.filtered(lambda uom: uom.measure_type == 'working_time'):
+        uom_categ_unit = self.env.ref('uom.product_uom_categ_unit')
+        uom_categ_wtime = self.env.ref('uom.uom_categ_wtime')
+        if any(uom.category_id.id in (uom_categ_unit + uom_categ_wtime).ids and uom.uom_type == 'reference' for uom in self):
             raise UserError(_("You cannot delete this UoM as it is used by the system. You should rather archive it."))
         return super(UoM, self).unlink()
 
