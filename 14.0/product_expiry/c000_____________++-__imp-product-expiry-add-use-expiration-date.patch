PR: https://github.com/odoo/odoo/pull/

From: 287f56c5c994ee075eb473d9a6d4ecd4f2b3675e
From: svs-odoo
Date: 2019-10-25 13:20:38

Structural Changes: 6
Total Changes: 11

[IMP] product_expiry: add use_expiration_date

Adds new product field, `use_expiration_date`, to know if user wants to
use expiration date on product. Only accessible when product is tracked.

Also, changes fields' name:
    - product.template:     life_time becomes expiration_time
    - stock.production.lot: life_date becomes expiration_date

Task #1938656

================================= pseudo patch: =================================

--- a/addons/product_expiry/models/product_product.py
+++ b/addons/product_expiry/models/product_product.py
@@ -7,7 +7,10 @@ from odoo import fields, models
 class ProductTemplate(models.Model):
     _inherit = 'product.template'
 
-    life_time = fields.Integer(string='Product Life Time',
+    use_expiration_date = fields.Boolean(string='Expiration Date',
+        help='When this box is ticked, you have the possibility to specify dates to manage'
+        ' product expiration, on the product and on the corresponding lot/serial numbers')
+    expiration_time = fields.Integer(string='Product Life Time',
         help='Number of days before the goods may become dangerous and must not be consumed. It will be computed on the lot/serial number.')
     use_time = fields.Integer(string='Product Use Time',
         help='Number of days before the goods starts deteriorating, without being dangerous yet. It will be computed using the lot/serial number.')

--- a/addons/product_expiry/models/production_lot.py
+++ b/addons/product_expiry/models/production_lot.py
@@ -7,7 +7,9 @@ from odoo import api, fields, models, SUPERUSER_ID, _
 class StockProductionLot(models.Model):
     _inherit = 'stock.production.lot'
 
-    life_date = fields.Datetime(string='End of Life Date',
+    use_expiration_date = fields.Boolean(
+        string='Use Expiration Date', related='product_id.use_expiration_date')
+    expiration_date = fields.Datetime(string='End of Life Date',
         help='This is the date on which the goods with this Serial Number may become dangerous and must not be consumed.')
     use_date = fields.Datetime(string='Best before Date',
         help='This is the date on which the goods with this Serial Number start deteriorating, without being dangerous yet.')
@@ -29,7 +31,7 @@ class StockProductionLot(models.Model):
     def _get_dates(self, product_id=None):
         """Returns dates based on number of days configured in current lot's product."""
         mapped_fields = {
-            'life_date': 'life_time',
+            'expiration_date': 'expiration_time',
             'use_date': 'use_time',
             'removal_date': 'removal_time',
             'alert_date': 'alert_time'
