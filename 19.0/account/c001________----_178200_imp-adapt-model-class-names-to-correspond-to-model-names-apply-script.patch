PR: https://github.com/odoo/odoo/pull/178200

From: f10bd8ddcf99c9247dca417fefbc260454d74ea1
From: Gorash
Date: 2024-10-15 09:33:02

Breaking data model changes scores: del:28 + add:0, change matches:
-    _inherit = 'account.analytic.account'
-    _inherit = 'account.analytic.distribution.model'
-    _inherit = 'account.analytic.line'
-    _inherit = 'account.analytic.applicability'
-    _inherit = "account.journal"
-    _inherit = "analytic.mixin"
-    _inherit = 'account.move.line'
-    _inherit = 'analytic.mixin'
-    _inherit = 'decimal.precision'
-    _inherit = 'digest.digest'
-    _inherit = 'ir.actions.report'
-    _inherit = 'ir.attachment'
-    _inherit = "ir.module.module"
-    _inherit = 'ir.ui.menu'
-    _inherit = 'mail.message'
-    _inherit = 'mail.template'
-    _inherit = 'mail.tracking.value'
-    _inherit = 'base.partner.merge.automatic.wizard'
-    _inherit = 'onboarding.onboarding'
-    _inherit = 'onboarding.onboarding.step'
-    _inherit = 'res.partner'
-    _inherit = "product.category"
-    _inherit = "product.template"
-    _inherit = "product.product"
-    _inherit = 'res.config.settings'
-    _inherit = 'res.currency'
-    _inherit = 'res.groups'
-    _inherit = "uom.uom"

Total Changes: 144

[IMP] *: adapt model class names to correspond to model names (apply script)

Part-of: odoo/odoo#178200
Related: odoo/enterprise#69762
Related: odoo/documentation#11115
Related: odoo/upgrade#6577
Related: odoo/design-themes#988
Related: odoo/upgrade-util#143

================================= pseudo patch: =================================

--- a/addons/account/models/account_account.py
+++ b/addons/account/models/account_account.py
@@ -17,7 +17,6 @@ ACCOUNT_CODE_NUMBER_REGEX = re.compile(r'(.*?)(\d*)(\D*?)$')
 
 
 class AccountAccount(models.Model):
-    _name = "account.account"
     _inherit = ['mail.thread']
     _description = "Account"
     _order = "code, placeholder_code"
@@ -1398,7 +1397,6 @@ class AccountAccount(models.Model):
 
 
 class AccountGroup(models.Model):
-    _name = "account.group"
     _description = 'Account Group'
     _order = 'code_prefix_start'
     _check_company_auto = True

--- a/addons/account/models/account_account_tag.py
+++ b/addons/account/models/account_account_tag.py
@@ -5,7 +5,6 @@ from odoo.exceptions import UserError
 
 
 class AccountAccountTag(models.Model):
-    _name = 'account.account.tag'
     _description = 'Account Tag'
 
     name = fields.Char('Tag Name', required=True, translate=True)

--- a/addons/account/models/account_analytic_account.py
+++ b/addons/account/models/account_analytic_account.py
@@ -4,7 +4,7 @@ from odoo import api, fields, models, _
 
 
 class AccountAnalyticAccount(models.Model):
-    _inherit = 'account.analytic.account'
+    _inherit = ['account.analytic.account']
 
     invoice_count = fields.Integer(
         "Invoice Count",

--- a/addons/account/models/account_analytic_distribution_model.py
+++ b/addons/account/models/account_analytic_distribution_model.py
@@ -4,7 +4,7 @@ from odoo import api, fields, models, _
 
 
 class AccountAnalyticDistributionModel(models.Model):
-    _inherit = 'account.analytic.distribution.model'
+    _inherit = ['account.analytic.distribution.model']
 
     account_prefix = fields.Char(
         string='Accounts Prefix',

--- a/addons/account/models/account_analytic_line.py
+++ b/addons/account/models/account_analytic_line.py
@@ -3,8 +3,9 @@
 from odoo import api, fields, models, _
 from odoo.exceptions import ValidationError
 
+
 class AccountAnalyticLine(models.Model):
-    _inherit = 'account.analytic.line'
+    _inherit = ['account.analytic.line']
     _description = 'Analytic Line'
 
     product_id = fields.Many2one(

--- a/addons/account/models/account_analytic_plan.py
+++ b/addons/account/models/account_analytic_plan.py
@@ -4,7 +4,7 @@ from odoo import fields, models, api
 
 
 class AccountAnalyticApplicability(models.Model):
-    _inherit = 'account.analytic.applicability'
+    _inherit = ['account.analytic.applicability']
     _description = "Analytic Plan's Applicabilities"
 
     business_domain = fields.Selection(

--- a/addons/account/models/account_bank_statement.py
+++ b/addons/account/models/account_bank_statement.py
@@ -6,8 +6,8 @@ from odoo.exceptions import UserError
 from odoo.tools import create_index
 from odoo.tools.misc import formatLang
 
+
 class AccountBankStatement(models.Model):
-    _name = "account.bank.statement"
     _description = "Bank Statement"
     _order = "first_line_index desc"
     _check_company_auto = True

--- a/addons/account/models/account_bank_statement_line.py
+++ b/addons/account/models/account_bank_statement_line.py
@@ -7,7 +7,6 @@ from odoo.tools import create_index, SQL
 
 
 class AccountBankStatementLine(models.Model):
-    _name = "account.bank.statement.line"
     _inherits = {'account.move': 'move_id'}
     _description = "Bank Statement Line"
     _order = "internal_index desc"
@@ -832,9 +831,10 @@ class AccountBankStatementLine(models.Model):
 
 
 # For optimization purpose, creating the reverse relation of m2o in _inherits saves
+
+
 # a lot of SQL queries
 class AccountMove(models.Model):
-    _name = "account.move"
     _inherit = ['account.move']
 
     statement_line_ids = fields.One2many('account.bank.statement.line', 'move_id', string='Statements')

--- a/addons/account/models/account_cash_rounding.py
+++ b/addons/account/models/account_cash_rounding.py
@@ -12,7 +12,6 @@ class AccountCashRounding(models.Model):
     0.05 CHF because coins of 0.01 CHF and 0.02 CHF aren't used anymore.
     see https://en.wikipedia.org/wiki/Cash_rounding for more details.
     """
-    _name = 'account.cash.rounding'
     _description = 'Account Cash Rounding'
     _check_company_auto = True
 

--- a/addons/account/models/account_code_mapping.py
+++ b/addons/account/models/account_code_mapping.py
@@ -7,7 +7,6 @@ class AccountCodeMapping(models.Model):
     # It is not stored in DB. Instead, records are only populated in cache by the
     # `_search` override when accessing the One2many on `account.account`.
 
-    _name = 'account.code.mapping'
     _description = "Mapping of account codes per company"
     _auto = False
     _table_query = '0'

--- a/addons/account/models/account_full_reconcile.py
+++ b/addons/account/models/account_full_reconcile.py
@@ -3,7 +3,6 @@ from odoo import api, fields, models, _, Command
 
 
 class AccountFullReconcile(models.Model):
-    _name = "account.full.reconcile"
     _description = "Full Reconcile"
 
     partial_reconcile_ids = fields.One2many('account.partial.reconcile', 'full_reconcile_id', string='Reconciliation Parts')

--- a/addons/account/models/account_incoterms.py
+++ b/addons/account/models/account_incoterms.py
@@ -5,7 +5,6 @@ from odoo import api, fields, models
 
 
 class AccountIncoterms(models.Model):
-    _name = 'account.incoterms'
     _description = 'Incoterms'
 
     name = fields.Char(

--- a/addons/account/models/account_journal.py
+++ b/addons/account/models/account_journal.py
@@ -12,7 +12,6 @@ _logger = logging.getLogger(__name__)
 
 
 class AccountJournalGroup(models.Model):
-    _name = 'account.journal.group'
     _description = "Account Journal Group"
     _check_company_auto = True
     _check_company_domain = models.check_company_domain_parent_of
@@ -30,8 +29,8 @@ class AccountJournalGroup(models.Model):
         ('uniq_name', 'unique(company_id, name)', 'A Ledger group name must be unique per company.'),
     ]
 
+
 class AccountJournal(models.Model):
-    _name = "account.journal"
     _description = "Journal"
     _order = 'sequence, type, code'
     _inherit = ['portal.mixin',

--- a/addons/account/models/account_journal_dashboard.py
+++ b/addons/account/models/account_journal_dashboard.py
@@ -21,8 +21,8 @@ def group_by_journal(vals_list):
     return res
 
 
-class account_journal(models.Model):
-    _inherit = "account.journal"
+class AccountJournal(models.Model):
+    _inherit = ["account.journal"]
 
     kanban_dashboard = fields.Text(compute='_kanban_dashboard')
     kanban_dashboard_graph = fields.Text(compute='_kanban_dashboard_graph')

--- a/addons/account/models/account_lock_exception.py
+++ b/addons/account/models/account_lock_exception.py
@@ -9,8 +9,7 @@ from odoo.addons.account.models.company import SOFT_LOCK_DATE_FIELDS
 from datetime import date
 
 
-class AccountLockException(models.Model):
-    _name = "account.lock_exception"
+class AccountLock_Exception(models.Model):
     _description = "Account Lock Exception"
 
     active = fields.Boolean(

--- a/addons/account/models/account_move.py
+++ b/addons/account/models/account_move.py
@@ -77,7 +77,6 @@ EMPTY = object()
 
 
 class AccountMove(models.Model):
-    _name = "account.move"
     _inherit = ['portal.mixin', 'mail.thread.main.attachment', 'mail.activity.mixin', 'sequence.mixin', 'product.catalog.mixin']
     _description = "Journal Entry"
     _order = 'date desc, name desc, invoice_date desc, id desc'

--- a/addons/account/models/account_move_line.py
+++ b/addons/account/models/account_move_line.py
@@ -18,8 +18,7 @@ _logger = logging.getLogger(__name__)
 
 
 class AccountMoveLine(models.Model):
-    _name = "account.move.line"
-    _inherit = "analytic.mixin"
+    _inherit = ["analytic.mixin"]
     _description = "Journal Item"
     _order = "date desc, move_name desc, id"
     _check_company_auto = True

--- a/addons/account/models/account_move_line_tax_details.py
+++ b/addons/account/models/account_move_line_tax_details.py
@@ -5,7 +5,7 @@ from odoo.tools import SQL
 
 
 class AccountMoveLine(models.Model):
-    _inherit = 'account.move.line'
+    _inherit = ['account.move.line']
 
     @api.model
     def _get_query_tax_details_from_domain(self, domain, fallback=True) -> SQL:

--- a/addons/account/models/account_move_send.py
+++ b/addons/account/models/account_move_send.py
@@ -10,7 +10,6 @@ class AccountMoveSend(models.AbstractModel):
     See 'account.move.send.batch.wizard' for multiple invoices sending wizard (async)
     and 'account.move.send.wizard' for single invoice sending wizard (sync).
     """
-    _name = 'account.move.send'
     _description = "Account Move Send"
 
     # -------------------------------------------------------------------------

--- a/addons/account/models/account_partial_reconcile.py
+++ b/addons/account/models/account_partial_reconcile.py
@@ -7,7 +7,6 @@ from datetime import date
 
 
 class AccountPartialReconcile(models.Model):
-    _name = "account.partial.reconcile"
     _description = "Partial Reconcile"
 
     # ==== Reconciliation fields ====

--- a/addons/account/models/account_payment.py
+++ b/addons/account/models/account_payment.py
@@ -7,7 +7,6 @@ from odoo.tools import SQL
 
 
 class AccountPayment(models.Model):
-    _name = "account.payment"
     _inherit = ['mail.thread.main.attachment', 'mail.activity.mixin']
     _description = "Payments"
     _order = "date desc, name desc"
@@ -1122,9 +1121,10 @@ class AccountPayment(models.Model):
 
 
 # For optimization purpose, creating the reverse relation of m2o in _inherits saves
+
+
 # a lot of SQL queries
 class AccountMove(models.Model):
-    _name = "account.move"
     _inherit = ['account.move']
 
     payment_ids = fields.One2many('account.payment', 'move_id', string='Payments')

--- a/addons/account/models/account_payment_method.py
+++ b/addons/account/models/account_payment_method.py
@@ -6,7 +6,6 @@ from odoo.osv import expression
 
 
 class AccountPaymentMethod(models.Model):
-    _name = "account.payment.method"
     _description = "Payment Methods"
 
     name = fields.Char(required=True, translate=True)
@@ -94,7 +93,6 @@ class AccountPaymentMethod(models.Model):
 
 
 class AccountPaymentMethodLine(models.Model):
-    _name = "account.payment.method.line"
     _description = "Payment Methods"
     _order = 'sequence, id'
 

--- a/addons/account/models/account_payment_term.py
+++ b/addons/account/models/account_payment_term.py
@@ -9,7 +9,6 @@ from dateutil.relativedelta import relativedelta
 
 
 class AccountPaymentTerm(models.Model):
-    _name = "account.payment.term"
     _description = "Payment Terms"
     _order = "sequence, id"
     _check_company_domain = models.check_company_domain_parent_of
@@ -263,8 +262,8 @@ class AccountPaymentTerm(models.Model):
             return None
         return format_date(self.env, self._get_last_discount_date(date_ref))
 
+
 class AccountPaymentTermLine(models.Model):
-    _name = "account.payment.term.line"
     _description = "Payment Terms Line"
     _order = "id"
 

--- a/addons/account/models/account_reconcile_model.py
+++ b/addons/account/models/account_reconcile_model.py
@@ -9,7 +9,6 @@ from dateutil.relativedelta import relativedelta
 
 
 class AccountReconcileModelPartnerMapping(models.Model):
-    _name = 'account.reconcile.model.partner.mapping'
     _description = 'Partner mapping for reconciliation models'
     _check_company_auto = True
 
@@ -37,8 +36,7 @@ class AccountReconcileModelPartnerMapping(models.Model):
 
 
 class AccountReconcileModelLine(models.Model):
-    _name = 'account.reconcile.model.line'
-    _inherit = 'analytic.mixin'
+    _inherit = ['analytic.mixin']
     _description = 'Rules for the reconciliation model'
     _order = 'sequence, id'
     _check_company_auto = True
@@ -172,7 +170,6 @@ class AccountReconcileModelLine(models.Model):
 
 
 class AccountReconcileModel(models.Model):
-    _name = 'account.reconcile.model'
     _description = 'Preset to create journal entries during a invoices and payments matching'
     _inherit = ['mail.thread']
     _order = 'sequence, id'

--- a/addons/account/models/account_report.py
+++ b/addons/account/models/account_report.py
@@ -21,8 +21,8 @@ FIGURE_TYPE_SELECTION_VALUES = [
 
 DOMAIN_REGEX = re.compile(r'(-?sum)\((.*)\)')
 
+
 class AccountReport(models.Model):
-    _name = "account.report"
     _description = "Accounting Report"
     _order = 'sequence, id'
 
@@ -291,7 +291,6 @@ class AccountReport(models.Model):
 
 
 class AccountReportLine(models.Model):
-    _name = "account.report.line"
     _description = "Accounting Report Line"
     _order = 'sequence, id'
 
@@ -519,7 +518,6 @@ class AccountReportLine(models.Model):
 
 
 class AccountReportExpression(models.Model):
-    _name = "account.report.expression"
     _description = "Accounting Report Expression"
     _rec_name = 'report_line_name'
 
@@ -840,7 +838,6 @@ class AccountReportExpression(models.Model):
 
 
 class AccountReportColumn(models.Model):
-    _name = "account.report.column"
     _description = "Accounting Report Column"
     _order = 'sequence, id'
 
@@ -855,7 +852,6 @@ class AccountReportColumn(models.Model):
 
 
 class AccountReportExternalValue(models.Model):
-    _name = "account.report.external.value"
     _description = 'Accounting Report External Value'
     _check_company_auto = True
     _order = 'date, id'

--- a/addons/account/models/account_root.py
+++ b/addons/account/models/account_root.py
@@ -6,7 +6,6 @@ from odoo.tools import Query
 
 
 class AccountRoot(models.Model):
-    _name = 'account.root'
     _description = 'Account codes first 2 digits'
     _auto = False
     _table_query = '0'

--- a/addons/account/models/account_tax.py
+++ b/addons/account/models/account_tax.py
@@ -23,7 +23,6 @@ TYPE_TAX_USE = [
 
 
 class AccountTaxGroup(models.Model):
-    _name = 'account.tax.group'
     _description = 'Tax Group'
     _order = 'sequence asc, id'
     _check_company_auto = True
@@ -85,7 +84,6 @@ class AccountTaxGroup(models.Model):
 
 
 class AccountTax(models.Model):
-    _name = 'account.tax'
     _inherit = ['mail.thread']
     _description = 'Tax'
     _order = 'sequence,id'
@@ -2490,7 +2488,6 @@ class AccountTax(models.Model):
 
 
 class AccountTaxRepartitionLine(models.Model):
-    _name = "account.tax.repartition.line"
     _description = "Tax Repartition Line"
     _order = 'document_type, repartition_type, sequence, id'
     _check_company_auto = True

--- a/addons/account/models/chart_template.py
+++ b/addons/account/models/chart_template.py
@@ -63,7 +63,6 @@ def template(template=None, model='template_data'):
 
 
 class AccountChartTemplate(models.AbstractModel):
-    _name = "account.chart.template"
     _description = "Account Chart Template"
 
     @property

--- a/addons/account/models/company.py
+++ b/addons/account/models/company.py
@@ -51,7 +51,6 @@ LOCK_DATE_FIELDS = [
 
 
 class ResCompany(models.Model):
-    _name = "res.company"
     _inherit = ["res.company", "mail.thread"]
 
     fiscalyear_last_day = fields.Integer(default=31, required=True)

--- a/addons/account/models/decimal_precision.py
+++ b/addons/account/models/decimal_precision.py
@@ -1,7 +1,8 @@
 from odoo import models
 
+
 class DecimalPrecision(models.Model):
-    _inherit = 'decimal.precision'
+    _inherit = ['decimal.precision']
 
     def precision_get(self, application):
         if application == 'Discount' and self.env.context.get('ignore_discount_precision'):

--- a/addons/account/models/digest.py
+++ b/addons/account/models/digest.py
@@ -5,8 +5,8 @@ from odoo import fields, models, _
 from odoo.exceptions import AccessError
 
 
-class Digest(models.Model):
-    _inherit = 'digest.digest'
+class DigestDigest(models.Model):
+    _inherit = ['digest.digest']
 
     kpi_account_total_revenue = fields.Boolean('Revenue')
     kpi_account_total_revenue_value = fields.Monetary(compute='_compute_kpi_account_total_revenue_value')
@@ -34,6 +34,6 @@ class Digest(models.Model):
             record.kpi_account_total_revenue_value = -total_per_companies.get(company, 0)
 
     def _compute_kpis_actions(self, company, user):
-        res = super(Digest, self)._compute_kpis_actions(company, user)
+        res = super()._compute_kpis_actions(company, user)
         res['kpi_account_total_revenue'] = 'account.action_move_out_invoice_type&menu_id=%s' % self.env.ref('account.menu_finance').id
         return res

--- a/addons/account/models/ir_actions_report.py
+++ b/addons/account/models/ir_actions_report.py
@@ -8,7 +8,7 @@ from odoo.tools import pdf
 
 
 class IrActionsReport(models.Model):
-    _inherit = 'ir.actions.report'
+    _inherit = ['ir.actions.report']
 
     is_invoice_report = fields.Boolean(
         string="Invoice report",

--- a/addons/account/models/ir_attachment.py
+++ b/addons/account/models/ir_attachment.py
@@ -11,7 +11,7 @@ _logger = logging.getLogger(__name__)
 
 
 class IrAttachment(models.Model):
-    _inherit = 'ir.attachment'
+    _inherit = ['ir.attachment']
 
     def _build_zip_from_attachments(self):
         """ Return the zip bytes content resulting from compressing the attachments in `self`"""

--- a/addons/account/models/ir_module.py
+++ b/addons/account/models/ir_module.py
@@ -20,8 +20,9 @@ template_module = lambda m: ismodule(m) and m.__name__.split('.')[-1].startswith
 template_class = isclass
 template_function = lambda f: isfunction(f) and hasattr(f, '_l10n_template') and f._l10n_template[1] == 'template_data'
 
-class IrModule(models.Model):
-    _inherit = "ir.module.module"
+
+class IrModuleModule(models.Model):
+    _inherit = ["ir.module.module"]
 
     account_templates = fields.Binary(compute='_compute_account_templates', exportable=False)
 

--- a/addons/account/models/ir_ui_menu.py
+++ b/addons/account/models/ir_ui_menu.py
@@ -2,7 +2,7 @@ from odoo import models
 
 
 class IrUiMenu(models.Model):
-    _inherit = 'ir.ui.menu'
+    _inherit = ['ir.ui.menu']
 
     def _load_menus_blacklist(self):
         res = super()._load_menus_blacklist()

--- a/addons/account/models/mail_message.py
+++ b/addons/account/models/mail_message.py
@@ -16,8 +16,8 @@ DOMAINS = {
 }
 
 
-class Message(models.Model):
-    _inherit = 'mail.message'
+class MailMessage(models.Model):
+    _inherit = ['mail.message']
 
     account_audit_log_preview = fields.Text(string="Description", compute="_compute_account_audit_log_preview")
     account_audit_log_move_id = fields.Many2one(

--- a/addons/account/models/mail_template.py
+++ b/addons/account/models/mail_template.py
@@ -3,7 +3,7 @@ from odoo.exceptions import UserError
 
 
 class MailTemplate(models.Model):
-    _inherit = 'mail.template'
+    _inherit = ['mail.template']
 
     @api.ondelete(at_uninstall=False)
     def _unlink_except_master_mail_template(self):

--- a/addons/account/models/mail_tracking_value.py
+++ b/addons/account/models/mail_tracking_value.py
@@ -3,8 +3,8 @@
 from odoo import api, models
 
 
-class MailTrackingValues(models.Model):
-    _inherit = 'mail.tracking.value'
+class MailTrackingValue(models.Model):
+    _inherit = ['mail.tracking.value']
 
     @api.ondelete(at_uninstall=True)
     def _except_audit_log(self):

--- a/addons/account/models/merge_partner_automatic.py
+++ b/addons/account/models/merge_partner_automatic.py
@@ -2,8 +2,8 @@ from odoo import models
 from .mail_message import bypass_token
 
 
-class MergePartnerAutomatic(models.TransientModel):
-    _inherit = 'base.partner.merge.automatic.wizard'
+class BasePartnerMergeAutomaticWizard(models.TransientModel):
+    _inherit = ['base.partner.merge.automatic.wizard']
 
     def _update_reference_fields(self, src_partners, dst_partner):
-        return super(MergePartnerAutomatic, self.with_context(bypass_audit=bypass_token))._update_reference_fields(src_partners, dst_partner)
+        return super(BasePartnerMergeAutomaticWizard, self.with_context(bypass_audit=bypass_token))._update_reference_fields(src_partners, dst_partner)

--- a/addons/account/models/onboarding_onboarding.py
+++ b/addons/account/models/onboarding_onboarding.py
@@ -3,8 +3,8 @@
 from odoo import api, models
 
 
-class Onboarding(models.Model):
-    _inherit = 'onboarding.onboarding'
+class OnboardingOnboarding(models.Model):
+    _inherit = ['onboarding.onboarding']
 
     # Invoice Onboarding
     @api.model

--- a/addons/account/models/onboarding_onboarding_step.py
+++ b/addons/account/models/onboarding_onboarding_step.py
@@ -3,8 +3,8 @@
 from odoo import _, api, models
 
 
-class OnboardingStep(models.Model):
-    _inherit = 'onboarding.onboarding.step'
+class OnboardingOnboardingStep(models.Model):
+    _inherit = ['onboarding.onboarding.step']
 
     # COMMON STEPS
     @api.model

--- a/addons/account/models/partner.py
+++ b/addons/account/models/partner.py
@@ -18,8 +18,8 @@ from odoo.addons.base_vat.models.res_partner import _ref_vat
 
 _logger = logging.getLogger(__name__)
 
+
 class AccountFiscalPosition(models.Model):
-    _name = 'account.fiscal.position'
     _description = 'Fiscal Position'
     _order = 'sequence'
     _check_company_auto = True
@@ -284,8 +284,8 @@ class AccountFiscalPosition(models.Model):
             localization_module.sudo().button_immediate_install()
         self.env["account.chart.template"]._instantiate_foreign_taxes(self.country_id, self.company_id)
 
+
 class AccountFiscalPositionTax(models.Model):
-    _name = 'account.fiscal.position.tax'
     _description = 'Tax Mapping of Fiscal Position'
     _rec_name = 'position_id'
     _check_company_auto = True
@@ -306,7 +306,6 @@ class AccountFiscalPositionTax(models.Model):
 
 
 class AccountFiscalPositionAccount(models.Model):
-    _name = 'account.fiscal.position.account'
     _description = 'Accounts Mapping of Fiscal Position'
     _rec_name = 'position_id'
     _check_company_auto = True
@@ -330,8 +329,7 @@ class AccountFiscalPositionAccount(models.Model):
 
 
 class ResPartner(models.Model):
-    _name = 'res.partner'
-    _inherit = 'res.partner'
+    _inherit = ['res.partner']
 
     fiscal_country_codes = fields.Char(compute='_compute_fiscal_country_codes')
     partner_vat_placeholder = fields.Char(compute='_compute_partner_vat_placeholder')

--- a/addons/account/models/product.py
+++ b/addons/account/models/product.py
@@ -7,8 +7,9 @@ from odoo.tools import format_amount
 
 ACCOUNT_DOMAIN = "['&', ('deprecated', '=', False), ('account_type', 'not in', ('asset_receivable','liability_payable','asset_cash','liability_credit_card','off_balance'))]"
 
+
 class ProductCategory(models.Model):
-    _inherit = "product.category"
+    _inherit = ["product.category"]
 
     property_account_income_categ_id = fields.Many2one('account.account', company_dependent=True,
         string="Income Account",
@@ -28,8 +29,10 @@ class ProductCategory(models.Model):
 #----------------------------------------------------------
 # Products
 #----------------------------------------------------------
+
+
 class ProductTemplate(models.Model):
-    _inherit = "product.template"
+    _inherit = ["product.template"]
 
     taxes_id = fields.Many2many('account.tax', 'product_taxes_rel', 'prod_id', 'tax_id',
         string="Sales Taxes",
@@ -180,7 +183,7 @@ class ProductTemplate(models.Model):
 
 
 class ProductProduct(models.Model):
-    _inherit = "product.product"
+    _inherit = ["product.product"]
 
     tax_string = fields.Char(compute='_compute_tax_string')
 

--- a/addons/account/models/res_config_settings.py
+++ b/addons/account/models/res_config_settings.py
@@ -6,7 +6,7 @@ from odoo.addons.account.models.company import PEPPOL_LIST
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = 'res.config.settings'
+    _inherit = ['res.config.settings']
 
     has_accounting_entries = fields.Boolean(compute='_compute_has_chart_of_accounts')
     currency_id = fields.Many2one('res.currency', related="company_id.currency_id", required=True, readonly=False,

--- a/addons/account/models/res_currency.py
+++ b/addons/account/models/res_currency.py
@@ -7,7 +7,7 @@ from odoo.tools import date_utils, SQL
 
 
 class ResCurrency(models.Model):
-    _inherit = 'res.currency'
+    _inherit = ['res.currency']
 
     def _get_fiscal_country_codes(self):
         return ','.join(self.env.companies.mapped('account_fiscal_country_id.code'))

--- a/addons/account/models/res_partner_bank.py
+++ b/addons/account/models/res_partner_bank.py
@@ -10,7 +10,6 @@ from odoo.tools.image import image_data_uri
 
 
 class ResPartnerBank(models.Model):
-    _name = 'res.partner.bank'
     _inherit = ['res.partner.bank', 'mail.thread', 'mail.activity.mixin']
 
     journal_id = fields.One2many(

--- a/addons/account/models/res_users.py
+++ b/addons/account/models/res_users.py
@@ -5,8 +5,8 @@ from odoo import api, models, _
 from odoo.exceptions import ValidationError
 
 
-class GroupsView(models.Model):
-    _inherit = 'res.groups'
+class ResGroups(models.Model):
+    _inherit = ['res.groups']
 
     @api.model
     def get_application_groups(self, domain):

--- a/addons/account/models/sequence_mixin.py
+++ b/addons/account/models/sequence_mixin.py
@@ -18,7 +18,6 @@ class SequenceMixin(models.AbstractModel):
     docstring of _get_last_sequence.
     """
 
-    _name = 'sequence.mixin'
     _description = "Automatic sequence"
 
     _sequence_field = "name"

--- a/addons/account/models/template_generic_coa.py
+++ b/addons/account/models/template_generic_coa.py
@@ -2,9 +2,8 @@ from odoo import models, _
 from odoo.addons.account.models.chart_template import template
 
 
-
 class AccountChartTemplate(models.AbstractModel):
-    _inherit = "account.chart.template"
+    _inherit = ["account.chart.template"]
 
     @template('generic_coa')
     def _get_generic_coa_template_data(self):

--- a/addons/account/models/uom_uom.py
+++ b/addons/account/models/uom_uom.py
@@ -4,8 +4,8 @@
 from odoo import fields, models, api
 
 
-class UoM(models.Model):
-    _inherit = "uom.uom"
+class UomUom(models.Model):
+    _inherit = ["uom.uom"]
 
     fiscal_country_codes = fields.Char(compute="_compute_fiscal_country_codes")
 
