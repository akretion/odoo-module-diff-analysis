PR: https://github.com/odoo/odoo/pull/

From: 50ffc339991b136b48525b2d60aa34a3039bb8da
From: Xavier BOL (xbo)
Date: 2022-05-31 08:29:09

Structural Changes: 3
Total Changes: 49

[IMP] sale_{project,timesheet}: remove 'delivered_milestone' in invoice_policy

Before this commit, when the `Milestones` feature is disable, the user
can always defined a service product with invoice policy equals to
'Based on Milestones' but since the feature is disabled he cannot add
this product on a milestone and so this configuratiom is useless without
the feature.

This commit removes the item into the invoice_policy field Selection
when the feature is disabled. Moreover, when the feature is disabled,
the existing products with this setting should be updated to be a
service product with `invoice_policy='delivered_manual'`. The quantity
delivered method of the existing SOLs containing those products should
also be updated to allow the user to manually edit the quantity
delivered of those SOLs when the `Milestones` feature is disabled.
However, when the `Milestones` feature is enabled again, only the
products contained in SOL linked to a milestone will be updated because
we cannot assume all service products with
`invoice_policy='delivered_manual'` were a service products with invoice
policy based on Milestones. Also the existing SOLs containing the
products updated will not be updated too to not impact the quantity
delivered.

task-2829542

================================= pseudo patch: =================================

--- a/addons/sale_project/models/__init__.py
+++ b/addons/sale_project/models/__init__.py
@@ -5,3 +5,4 @@ from . import project
 from . import project_milestone
 from . import sale_order
 from . import sale_order_line
+from . import res_config_settings

--- a/addons/sale_project/models/product.py
+++ b/addons/sale_project/models/product.py
@@ -5,17 +5,20 @@ from odoo import api, fields, models, _
 from odoo.exceptions import ValidationError
 
 
-SERVICE_POLICY = [
-    # (service_policy, string)
-    ('ordered_prepaid', 'Prepaid/Fixed Price'),
-    ('delivered_milestones', 'Based on Milestones'),
-    ('delivered_manual', 'Based on Delivered Quantity (Manual)'),
-]
-
-
 class ProductTemplate(models.Model):
     _inherit = 'product.template'
 
+    @api.model
+    def _selection_service_policy(self):
+        service_policies = [
+            # (service_policy, string)
+            ('ordered_prepaid', 'Prepaid/Fixed Price'),
+            ('delivered_manual', 'Based on Delivered Quantity (Manual)'),
+        ]
+        if self.user_has_groups('project.group_project_milestone'):
+            service_policies.insert(1, ('delivered_milestones', 'Based on Milestones'))
+        return service_policies
+
     service_tracking = fields.Selection(
         selection=[
             ('no', 'Nothing'),
@@ -36,7 +39,7 @@ class ProductTemplate(models.Model):
         'project.project', 'Project Template', company_dependent=True, copy=True,
         domain="[('company_id', '=', current_company_id)]",
         help='Select a billable project to be the skeleton of the new created project when selling the current product. Its stages and tasks will be duplicated.')
-    service_policy = fields.Selection(SERVICE_POLICY, string="Service Invoicing Policy", compute='_compute_service_policy', inverse='_inverse_service_policy')
+    service_policy = fields.Selection('_selection_service_policy', string="Service Invoicing Policy", compute='_compute_service_policy', inverse='_inverse_service_policy')
     service_type = fields.Selection(selection_add=[
         ('milestones', 'Project Milestones'),
     ])

--- a/None
+++ b/addons/sale_project/models/res_config_settings.py
@@ -0,0 +1,27 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import models
+
+
+class ResConfigSettings(models.TransientModel):
+    _inherit = 'res.config.settings'
+
+    def set_values(self):
+        super().set_values()
+        if self.group_project_milestone:
+            # Search the milestones containing a SOL and change the qty_delivered_method field of the SOL and the
+            # service_policy field set on the product to convert from manual to milestones.
+            milestone_read_group = self.env['project.milestone'].read_group(
+                [('sale_line_id', '!=', False)],
+                ['sale_line_ids:array_agg(sale_line_id)'],
+                [],
+            )
+            sale_line_ids = milestone_read_group[0]['sale_line_ids'] if milestone_read_group else []
+            sale_lines = self.env['sale.order.line'].browse(sale_line_ids)
+            sale_lines.product_id.service_policy = 'delivered_milestones'
+        else:
+            product_domain = [('type', '=', 'service'), ('service_type', '=', 'milestones')]
+            products = self.env['product.product'].search(product_domain)
+            products.service_policy = 'delivered_manual'
+            self.env['sale.order.line'].search([('product_id', 'in', products.ids)]).qty_delivered_method = 'manual'
