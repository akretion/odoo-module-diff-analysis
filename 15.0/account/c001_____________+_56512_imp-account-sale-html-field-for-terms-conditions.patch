PR: https://github.com/odoo/odoo/pull/56512

From: 9ace05671415539d09b46ffa8b9b3a4f66c8f5c6
From: Arnaud Joset
Date: 2020-10-06 10:26:56

Structural Changes: 5
Total Changes: 19

[IMP] account,sale: html field for terms & conditions

Before this commit, the terms and conditions could not be html formatted text.

closes odoo/odoo#56512

Taskid: 2304199
Related: odoo/upgrade#1689
Signed-off-by: Yannick Tivisse (yti) <yti@odoo.com>

================================= pseudo patch: =================================

--- a/addons/account/models/company.py
+++ b/addons/account/models/company.py
@@ -104,6 +104,12 @@ class ResCompany(models.Model):
     account_invoice_onboarding_state = fields.Selection(DASHBOARD_ONBOARDING_STATES, string="State of the account invoice onboarding panel", default='not_done')
     account_dashboard_onboarding_state = fields.Selection(DASHBOARD_ONBOARDING_STATES, string="State of the account dashboard onboarding panel", default='not_done')
     invoice_terms = fields.Text(string='Default Terms and Conditions', translate=True)
+    terms_type = fields.Selection([('plain', 'Terms as Notes'), ('html', 'Terms as Web Page')],
+                                  string='Terms & Conditions format', default='plain')
+    invoice_terms_html = fields.Html(string='Default Terms and Conditions as a Web page', translate=True,
+                                     default="""<h1 style="text-align: center; ">Terms &amp; Conditions</h1>
+                                     <p>Your conditions...</p>""")
+
     account_setup_bill_state = fields.Selection(ONBOARDING_STEP_STATES, string="State of the onboarding bill step", default='not_done')
 
     # Needed in the Point of Sale

--- a/addons/account/models/res_config_settings.py
+++ b/addons/account/models/res_config_settings.py
@@ -100,6 +100,12 @@ class ResConfigSettings(models.TransientModel):
     invoice_is_email = fields.Boolean(string='Send Email', related='company_id.invoice_is_email', readonly=False)
     incoterm_id = fields.Many2one('account.incoterms', string='Default incoterm', related='company_id.incoterm_id', help='International Commercial Terms are a series of predefined commercial terms used in international transactions.', readonly=False)
     invoice_terms = fields.Text(related='company_id.invoice_terms', string="Terms & Conditions", readonly=False)
+    invoice_terms_html = fields.Html(related='company_id.invoice_terms_html', string="Terms & Conditions as a Web page",
+                                     readonly=False)
+    terms_type = fields.Selection(
+        related='company_id.terms_type', readonly=False)
+    preview_ready = fields.Boolean(string="Display preview button", compute='_compute_terms_preview')
+
     use_invoice_terms = fields.Boolean(
         string='Default Terms & Conditions',
         config_parameter='account.use_invoice_terms')
@@ -163,6 +169,13 @@ class ResConfigSettings(models.TransientModel):
             }
         return res
 
+    @api.depends('terms_type')
+    def _compute_terms_preview(self):
+        for setting in self:
+            # We display the preview button only if the terms_type is html in the setting but also on the company
+            # to avoid landing on an error page (see terms.py controller)
+            setting.preview_ready = self.env.company.terms_type == 'html' and setting.terms_type == 'html'
+
     @api.model
     def create(self, values):
         # Optimisation purpose, saving a res_config even without changing any values will trigger the write of all
