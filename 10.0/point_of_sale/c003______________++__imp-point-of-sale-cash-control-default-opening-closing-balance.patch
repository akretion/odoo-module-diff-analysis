PR: https://github.com/odoo/odoo/pull/

From: 58ffd9fc029aece5658f766a26e25995aef6adac
From: Srushti Patel
Date: 2016-05-12 12:38:32

Structural Changes: 4
Total Changes: 22

[IMP] point_of_sale: Cash Control Default Opening/Closing Balance

========
Purpose
========

POS : It is annoying process to put coin/bill value repeatedly in the cash register.
If user select cash control check box it should add default values.

In pos configuration the option cash control checkbox move to a new category
called Cash Control.

-When opening a POS session, when doing the cash control, it should already prefill
 the modal with the defaults cash control values (Coin/Bill Value, Number of
 Coins/Bills, Subtotal).
-When closing the POS session, the closing balance should just take the Coin/Bill
 Value defaults values. The user has to type in the number of Coins/Bills manually).

================================= pseudo patch: =================================

--- a/addons/point_of_sale/models/pos_config.py
+++ b/addons/point_of_sale/models/pos_config.py
@@ -5,6 +5,27 @@ import uuid
 from odoo import api, fields, models, _
 from odoo.exceptions import UserError
 
+
+class AccountCashboxLine(models.Model):
+    _inherit = 'account.cashbox.line'
+
+    default_pos_id = fields.Many2one('pos.config', string='This cashbox line is used by default when opening or closing a balance for this point of sale')
+
+class AccountBankStmtCashWizard(models.Model):
+    _inherit = 'account.bank.statement.cashbox'
+    
+    @api.model
+    def default_get(self, fields):
+        vals = super(AccountBankStmtCashWizard, self).default_get(fields)
+        config_id = self.env.context.get('default_pos_id')
+        if config_id:
+            lines = self.env['account.cashbox.line'].search([('default_pos_id', '=', config_id)])
+            if self.env.context.get('balance', False) == 'start':
+                vals['cashbox_lines_ids'] = [[0, 0, {'coin_value': line.coin_value, 'number': line.number, 'subtotal': line.subtotal}] for line in lines]
+            else:
+                vals['cashbox_lines_ids'] = [[0, 0, {'coin_value': line.coin_value, 'number': 0, 'subtotal': 0.0}] for line in lines]
+        return vals
+
 class PosConfig(models.Model):
     _name = 'pos.config'
 
@@ -92,6 +113,7 @@ class PosConfig(models.Model):
         help="The product used to encode the customer tip. Leave empty if you do not accept tips.")
     fiscal_position_ids = fields.Many2many('account.fiscal.position', string='Fiscal Positions')
     default_fiscal_position_id = fields.Many2one('account.fiscal.position', string='Default Fiscal Position')
+    default_cashbox_lines_ids = fields.One2many('account.cashbox.line', 'default_pos_id', string='Default Balance')
 
     @api.depends('journal_id.currency_id', 'journal_id.company_id.currency_id')
     def _compute_currency(self):
