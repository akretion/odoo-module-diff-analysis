PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:3 + add:0, change matches:
-    _inherit = ['payment.provider']
-    _inherit = ['payment.token']
-    _inherit = ['payment.transaction']

Total Changes: 6

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/payment_authorize/models/payment_provider.py
+++ b/addons/payment_authorize/models/payment_provider.py
@@ -16,7 +16,7 @@ _logger = logging.getLogger(__name__)
 
 
 class PaymentProvider(models.Model):
-    _inherit = ['payment.provider']
+    _inherit = 'payment.provider'
 
     code = fields.Selection(
         selection_add=[('authorize', 'Authorize.Net')], ondelete={'authorize': 'set default'})

--- a/addons/payment_authorize/models/payment_token.py
+++ b/addons/payment_authorize/models/payment_token.py
@@ -9,7 +9,7 @@ _logger = logging.getLogger(__name__)
 
 
 class PaymentToken(models.Model):
-    _inherit = ['payment.token']
+    _inherit = 'payment.token'
 
     authorize_profile = fields.Char(
         string="Authorize.Net Profile ID",

--- a/addons/payment_authorize/models/payment_transaction.py
+++ b/addons/payment_authorize/models/payment_transaction.py
@@ -15,7 +15,7 @@ _logger = logging.getLogger(__name__)
 
 
 class PaymentTransaction(models.Model):
-    _inherit = ['payment.transaction']
+    _inherit = 'payment.transaction'
 
     def _get_specific_processing_values(self, processing_values):
         """ Override of payment to return an access token as provider-specific processing values.
