PR: https://github.com/odoo/odoo/pull/

From: fb6c9c24434c941383ffd73ab3056cafd7740c52
From: Alexandre KuÌˆhn
Date: 2017-11-24 12:09:10

Structural Changes: 8
Total Changes: 8

[IMP] web: FieldChar trim its value by default

With this commit, we change the behaviour of the web client with respect
to spaces in char fields.  Most of the time, starting and ending spaces
have no value, and worse, make the data not so reliable.

After this commit, field char will trim by default (so, if the user input a
char as ' abc ', the string 'abc' will be sent to the server instead).
Note that this only applies when the value of the field is changed.  If
someone open a form view, then switches to edit mode and save, nothing
will change.

This is the desired behavior most of the time.  However, in some rare
cases, this is actually harmful.  For example, if we trim the
'decimal_point' field, it will not be possible to enter a whitespace as
decimal separator.  In those cases, we introduce a new attribute 'trim',
which allow the developer to desactivate that feature.

================================= pseudo patch: =================================

--- a/odoo/addons/base/ir/ir_sequence.py
+++ b/odoo/addons/base/ir/ir_sequence.py
@@ -122,8 +122,8 @@ class IrSequence(models.Model):
                                            "and 'No gap'. The later is slower than the former but forbids any"
                                            "gap in the sequence (while they are possible in the former).")
     active = fields.Boolean(default=True)
-    prefix = fields.Char(help="Prefix value of the record for the sequence")
-    suffix = fields.Char(help="Suffix value of the record for the sequence")
+    prefix = fields.Char(help="Prefix value of the record for the sequence", trim=False)
+    suffix = fields.Char(help="Suffix value of the record for the sequence", trim=False)
     number_next = fields.Integer(string='Next Number', required=True, default=1, help="Next number of this sequence")
     number_next_actual = fields.Integer(compute='_get_number_next_actual', inverse='_set_number_next_actual',
                                         string='Next Number',

--- a/odoo/addons/base/res/res_lang.py
+++ b/odoo/addons/base/res/res_lang.py
@@ -38,8 +38,8 @@ class Lang(models.Model):
              "-1 will end the separation. e.g. [3,2,-1] will represent 106500 to be 1,06,500; "
              "[1,2,-1] will represent it to be 106,50,0;[3] will represent it as 106,500. "
              "Provided ',' as the thousand separator in each case.")
-    decimal_point = fields.Char(string='Decimal Separator', required=True, default='.')
-    thousands_sep = fields.Char(string='Thousands Separator', default=',')
+    decimal_point = fields.Char(string='Decimal Separator', required=True, default='.', trim=False)
+    thousands_sep = fields.Char(string='Thousands Separator', default=',', trim=False)
 
     _sql_constraints = [
         ('name_uniq', 'unique(name)', 'The name of the language must be unique !'),
