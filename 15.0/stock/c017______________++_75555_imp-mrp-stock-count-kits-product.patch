PR: https://github.com/odoo/odoo/pull/75555

From: caa908506b9e186a628cc4ed2d767f74255bad94
From: yhu-odoo
Date: 2021-09-03 08:11:42

Structural Changes: 4
Total Changes: 14

[IMP] mrp,stock: count kits product

When a product's has a kits bom, we consider it a kits product.
When a product is a kits product, we count its "on hand" and "forecast"
qty by caculating how many can be produced according to the bom.
We add status button to the show the qty on kit product form.

Task-2444000
COM PR odoo/odoo#75555
ENT PR odoo/enterprise#20440
UPG PR odoo/upgrade#2783

Signed-off-by: Arnold Moyaux <amoyaux@users.noreply.github.com>

================================= pseudo patch: =================================

--- a/addons/stock/models/product.py
+++ b/addons/stock/models/product.py
@@ -97,6 +97,13 @@ class Product(models.Model):
         compute='_compute_nbr_reordering_rules', compute_sudo=False)
     putaway_rule_ids = fields.One2many('stock.putaway.rule', 'product_id', 'Putaway Rules')
     storage_category_capacity_ids = fields.One2many('stock.storage.category.capacity', 'product_id', 'Storage Category Capacity')
+    show_on_hand_qty_status_button = fields.Boolean(compute='_compute_show_qty_status_button')
+    show_forecasted_qty_status_button = fields.Boolean(compute='_compute_show_qty_status_button')
+
+    def _compute_show_qty_status_button(self):
+        for product in self:
+            product.show_on_hand_qty_status_button = product.product_tmpl_id.show_on_hand_qty_status_button
+            product.show_forecasted_qty_status_button = product.product_tmpl_id.show_forecasted_qty_status_button
 
     @api.depends('stock_move_ids.product_qty', 'stock_move_ids.state')
     @api.depends_context(
@@ -664,6 +671,13 @@ class ProductTemplate(models.Model):
     route_from_categ_ids = fields.Many2many(
         relation="stock.location.route", string="Category Routes",
         related='categ_id.total_route_ids', related_sudo=False)
+    show_on_hand_qty_status_button = fields.Boolean(compute='_compute_show_qty_status_button')
+    show_forecasted_qty_status_button = fields.Boolean(compute='_compute_show_qty_status_button')
+
+    def _compute_show_qty_status_button(self):
+        for template in self:
+            template.show_on_hand_qty_status_button = template.type == 'product'
+            template.show_forecasted_qty_status_button = template.type == 'product'
 
     @api.depends('type')
     def _compute_has_available_route_ids(self):
