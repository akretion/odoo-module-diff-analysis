PR: https://github.com/odoo/odoo/pull/133142

From: 78f6b83b348326ac0848692ca228a4650057f95c
From: zel-odoo
Date: 2023-10-06 11:21:47

Structural Changes: 7
Total Changes: 44

[IMP] im_livechat: add/move config to user_setting

Enable livechat language setting for operators
Move livechat_username into res_user_setting

task-3390821

closes odoo/odoo#133142

Related: odoo/upgrade#5113
Signed-off-by: SÃ©bastien Theys (seb) <seb@odoo.com>

================================= pseudo patch: =================================

--- a/addons/im_livechat/models/im_livechat_channel.py
+++ b/addons/im_livechat/models/im_livechat_channel.py
@@ -258,11 +258,16 @@ class ImLivechatChannel(models.Model):
                     if available_user.partner_id.id == previous_operator_id
                 )
                 return previous_operator_user
-        # Try to match an operator with the same lang as the visitor
+        # Try to match an operator with the same main lang as the visitor
+        # If no operator with the same lang, try to match an operator with the addition lang
         if lang:
             same_lang_operator_ids = self.available_operator_ids.filtered(lambda operator: operator.partner_id.lang == lang)
             if same_lang_operator_ids:
                 operator = self._get_less_active_operator(operator_statuses, same_lang_operator_ids)
+            else:
+                addition_lang_operator_ids = self.available_operator_ids.filtered(lambda operator: lang in operator.res_users_settings_id.livechat_lang_ids.mapped('code'))
+                if addition_lang_operator_ids:
+                    operator = self._get_less_active_operator(operator_statuses, addition_lang_operator_ids)
         # Try to match an operator with the same country as the visitor
         if country_id and not operator:
             same_country_operator_ids = self.available_operator_ids.filtered(lambda operator: operator.partner_id.country_id.id == country_id)

--- a/addons/im_livechat/models/res_users.py
+++ b/addons/im_livechat/models/res_users.py
@@ -10,12 +10,36 @@ class Users(models.Model):
     """
     _inherit = 'res.users'
 
-    livechat_username = fields.Char("Livechat Username", help="This username will be used as your name in the livechat channels.")
+    livechat_username = fields.Char(string='Livechat Username', compute='_compute_livechat_username', inverse='_inverse_livechat_username', store=False)
+    livechat_lang_ids = fields.Many2many('res.lang', string='Livechat Languages', compute='_compute_livechat_lang_ids', inverse='_inverse_livechat_lang_ids', store=False)
+    has_access_livechat = fields.Boolean(compute='_compute_has_access_livechat', string='Has access to Livechat', store=False, readonly=True)
 
     @property
     def SELF_READABLE_FIELDS(self):
-        return super().SELF_READABLE_FIELDS + ['livechat_username']
+        return super().SELF_READABLE_FIELDS + ['livechat_username', 'livechat_lang_ids', 'has_access_livechat']
 
-    @property
-    def SELF_WRITEABLE_FIELDS(self):
-        return super().SELF_WRITEABLE_FIELDS + ['livechat_username']
+    @api.depends('res_users_settings_id.livechat_username')
+    def _compute_livechat_username(self):
+        for user in self:
+            user.livechat_username = user.res_users_settings_id.livechat_username
+
+    def _inverse_livechat_username(self):
+        for user in self:
+            if not user.res_users_settings_id:
+                self.env['res.users.settings']._find_or_create_for_user(user)
+            user.res_users_settings_id.livechat_username = user.livechat_username
+
+    @api.depends('res_users_settings_id.livechat_lang_ids')
+    def _compute_livechat_lang_ids(self):
+        for user in self:
+            user.livechat_lang_ids = user.res_users_settings_id.livechat_lang_ids
+
+    def _inverse_livechat_lang_ids(self):
+        for user in self:
+            if not user.res_users_settings_id:
+                self.env['res.users.settings']._find_or_create_for_user(user)
+            user.res_users_settings_id.livechat_lang_ids = user.livechat_lang_ids
+
+    def _compute_has_access_livechat(self):
+        for user in self:
+            user.has_access_livechat = user.has_group('im_livechat.im_livechat_group_user')

--- a/addons/im_livechat/models/res_users_settings.py
+++ b/addons/im_livechat/models/res_users_settings.py
@@ -7,4 +7,7 @@ from odoo import fields, models
 class ResUsersSettings(models.Model):
     _inherit = 'res.users.settings'
 
+    livechat_username = fields.Char("Livechat Username", help="This username will be used as your name in the livechat channels.")
+    livechat_lang_ids = fields.Many2many(comodel_name='res.lang', string='Livechat languages',
+                            help="These languages, in addition to your main language, will be used to assign you to Live Chat sessions.")
     is_discuss_sidebar_category_livechat_open = fields.Boolean("Is category livechat open", default=True)
