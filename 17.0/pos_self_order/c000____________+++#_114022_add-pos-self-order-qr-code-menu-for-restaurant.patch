PR: https://github.com/odoo/odoo/pull/114022

From: 05fd65e855b48cd6fd2f2ed8f848c9e13aea6a47
From: vlst
Date: 2023-04-13 02:08:08

Structural Changes: 15
Total Changes: 152

[ADD] pos_self_order: QR Code Menu for Restaurant

New module that would allow restaurant customers to see the menu on their own devices by scanning a qr code and navigating to the provided link.
Task id 3232765

closes odoo/odoo#114022

Signed-off-by: Joseph Caburnay (jcb) <jcb@odoo.com>

================================= pseudo patch: =================================

--- a/None
+++ b/addons/pos_self_order/models/__init__.py
@@ -0,0 +1,6 @@
+# -*- coding: utf-8 -*-
+
+from . import res_config_settings
+from . import pos_config
+from . import pos_self_order_custom_link
+from . import ir_http

--- a/None
+++ b/addons/pos_self_order/models/ir_http.py
@@ -0,0 +1,12 @@
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import models
+
+
+class IrHttp(models.AbstractModel):
+    _inherit = 'ir.http'
+
+    @classmethod
+    def _get_translation_frontend_modules_name(cls):
+        mods = super()._get_translation_frontend_modules_name()
+        return mods + ['pos_self_order']

--- a/None
+++ b/addons/pos_self_order/models/pos_config.py
@@ -0,0 +1,34 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import fields, models
+
+
+class PosConfig(models.Model):
+    _inherit = "pos.config"
+
+    self_order_view_mode = fields.Boolean(
+        string="QR Code Menu",
+        help="Allow customers to view the menu on their phones by scanning the QR code on the table",
+    )
+    self_order_image = fields.Image(
+        string="Self Order Image",
+        help="Image to display on the self order screen",
+        max_width=1920, max_height=1080,
+    )
+    self_order_image_name = fields.Char(
+        string="Self Order Image Name",
+        help="Name of the image to display on the self order screen",
+    )
+
+    def preview_self_order_app(self):
+        """
+        This function is called when the user clicks on the "Preview App" button
+        :return: object representing the action to open the app's url in a new tab
+        """
+        self.ensure_one()
+        return {
+            "type": "ir.actions.act_url",
+            "url": f"/menu/{self.id}",
+            "target": "new",
+        }

--- a/None
+++ b/addons/pos_self_order/models/pos_self_order_custom_link.py
@@ -0,0 +1,40 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import fields, models, api
+
+
+class PosSelfOrderCustomLink(models.Model):
+    _name = "pos_self_order.custom_link"
+    _description = "Custom links that the restaurant can configure to be displayed on the self order screen"
+    name = fields.Char(string="Label", required=True, translate=True)
+    url = fields.Char(string="URL", required=True)
+    pos_config_ids = fields.Many2many(
+        "pos.config",
+        string="Point of Sales",
+        domain="[('self_order_view_mode', '=', True)]",
+        help="Select for which points of sale you want to display this link. Leave empty to display it for all points of sale. You have to select among the points of sale that have the 'QR Code Menu' feature enabled.",
+    )
+    style = fields.Selection(
+        [
+            ("primary", "Primary"),
+            ("secondary", "Secondary"),
+            ("success", "Success"),
+            ("warning", "Warning"),
+            ("danger", "Danger"),
+            ("info", "Info"),
+            ("light", "Light"),
+            ("dark", "Dark"),
+        ],
+        string="Style",
+        default="primary",
+        required=True,
+    )
+    link_html = fields.Html("Preview", compute="_compute_link_html", store=True, readonly=True)
+    sequence = fields.Integer("Sequence", default=1)
+
+    @api.depends('name', 'style')
+    def _compute_link_html(self):
+        for link in self:
+            if link.name:
+                link.link_html = f"<a class=\"btn btn-{link.style} w-100\">{link.name}</a>"

--- a/None
+++ b/addons/pos_self_order/models/res_config_settings.py
@@ -0,0 +1,60 @@
+# -*- coding: utf-8 -*-
+
+from odoo import models, fields, api
+from odoo.tools import split_every
+
+
+
+class ResConfigSettings(models.TransientModel):
+    _inherit = "res.config.settings"
+
+    pos_self_order_view_mode = fields.Boolean(
+        compute="_compute_pos_module_pos_self_order", store=True, readonly=False)
+    pos_self_order_image = fields.Image(
+        compute="_compute_pos_module_pos_self_order", store=True, readonly=False, max_width=1920, max_height=1080)
+    pos_self_order_image_name = fields.Char(
+        compute="_compute_pos_module_pos_self_order", store=True, readonly=False)
+
+    @api.depends("pos_config_id")
+    def _compute_pos_module_pos_self_order(self):
+        for res_config in self:
+            if not res_config.pos_config_id.self_order_view_mode:
+                res_config.update(
+                    {
+                        "pos_self_order_view_mode": False,
+                        "pos_self_order_image": False,
+                        "pos_self_order_image_name": False,
+                    }
+                )
+            else:
+                res_config.update(
+                    {
+                        "pos_self_order_view_mode": res_config.pos_config_id.self_order_view_mode,
+                        "pos_self_order_image": res_config.pos_config_id.self_order_image,
+                        "pos_self_order_image_name": res_config.pos_config_id.self_order_image_name,
+                    }
+                )
+
+    def generate_qr_codes_page(self):
+        """
+        Generate the data needed to print the QR codes page
+        """
+        no_of_qr_codes_per_page = 16
+        qr_codes_to_print = [
+            {
+                "id": 0,
+                "url": f"{self.get_base_url()}/menu/{self.pos_config_id.id}",
+            }
+            for i in range(no_of_qr_codes_per_page)
+        ]
+        data = {
+            "groups_of_tables": list(split_every(4, qr_codes_to_print, list)),
+        }
+        return self.env.ref("pos_self_order.report_self_order_qr_codes_page").report_action([], data=data)
+
+    def preview_self_order_app(self):
+        """
+        This function calls the preview_self_order_app function of the pos.config model
+        """
+        self.ensure_one()
+        return self.pos_config_id.preview_self_order_app()
