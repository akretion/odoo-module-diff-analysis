PR: https://github.com/odoo/odoo/pull/82999

From: f448b3314e651bc3801caf4bfa85bb5427fe62ae
From: Yannick Tivisse
Date: 2022-02-08 14:53:36

Structural Changes: 5
Total Changes: 32

[IMP] all: Improve res.config perf on method execute

Purpose
=======

Several actions are done even if nothing has changed on the configuration.

Example:
Writing on a cron the same value makes a dummy write-lock on the table
...

Part-of: odoo/odoo#82999

================================= pseudo patch: =================================

--- a/addons/auth_signup/models/res_config_settings.py
+++ b/addons/auth_signup/models/res_config_settings.py
@@ -1,24 +1,24 @@
 # -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
-from ast import literal_eval
-
-from odoo import api, fields, models
+from odoo import fields, models
 
 
 class ResConfigSettings(models.TransientModel):
     _inherit = 'res.config.settings'
 
-    auth_signup_reset_password = fields.Boolean(string='Enable password reset from Login page', config_parameter='auth_signup.reset_password')
-    auth_signup_uninvited = fields.Selection([
-        ('b2b', 'On invitation'),
-        ('b2c', 'Free sign up'),
-    ], string='Customer Account', default='b2b', config_parameter='auth_signup.invitation_scope')
-    auth_signup_template_user_id = fields.Many2one('res.users', string='Template user for new users created through signup',
-                                                   config_parameter='base.template_portal_user_id')
-
-    def open_template_user(self):
-        action = self.env["ir.actions.actions"]._for_xml_id("base.action_res_users")
-        action['res_id'] = literal_eval(self.env['ir.config_parameter'].sudo().get_param('base.template_portal_user_id', 'False'))
-        action['views'] = [[self.env.ref('base.view_users_form').id, 'form']]
-        return action
+    auth_signup_reset_password = fields.Boolean(
+        string='Enable password reset from Login page',
+        config_parameter='auth_signup.reset_password')
+    auth_signup_uninvited = fields.Selection(
+        selection=[
+            ('b2b', 'On invitation'),
+            ('b2c', 'Free sign up'),
+        ],
+        string='Customer Account',
+        default='b2b',
+        config_parameter='auth_signup.invitation_scope')
+    auth_signup_template_user_id = fields.Many2one(
+        'res.users',
+        string='Template user for new users created through signup',
+        config_parameter='base.template_portal_user_id')
