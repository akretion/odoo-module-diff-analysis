PR: https://github.com/odoo/odoo/pull/45832

From: 3dffce34bf80c2a8d8682ef986d6daafa5bb0b7f
From: mreficent
Date: 2020-02-20 14:58:33

Structural Changes: 7
Total Changes: 7

[IMP] fields: log warning for ignored selection

When a field is related, defining a selection or selection_add will
have no effect and the paramater is ignored.

Log a warning and fix all fields badly definied

Closes odoo/odoo#45716

closes odoo/odoo#45832

Related: odoo/enterprise#8613
Signed-off-by: Martin Trigaux (mat) <mat@odoo.com>

================================= pseudo patch: =================================

--- a/addons/gamification/models/badge.py
+++ b/addons/gamification/models/badge.py
@@ -24,7 +24,6 @@ class BadgeUser(models.Model):
     comment = fields.Text('Comment')
     badge_name = fields.Char(related='badge_id.name', string="Badge Name", readonly=False)
     level = fields.Selection(
-        [('bronze', 'Bronze'), ('silver', 'Silver'), ('gold', 'Gold')],
         string='Badge Level', related="badge_id.level", store=True, readonly=True)
 
     def _send_badge(self):

--- a/addons/gamification/models/challenge.py
+++ b/addons/gamification/models/challenge.py
@@ -790,7 +790,7 @@ class ChallengeLine(models.Model):
     target_goal = fields.Float('Target Value to Reach', required=True)
 
     name = fields.Char("Name", related='definition_id.name', readonly=False)
-    condition = fields.Selection("Condition", related='definition_id.condition', readonly=True)
+    condition = fields.Selection(string="Condition", related='definition_id.condition', readonly=True)
     definition_suffix = fields.Char("Unit", related='definition_id.suffix', readonly=True)
     definition_monetary = fields.Boolean("Monetary", related='definition_id.monetary', readonly=True)
     definition_full_suffix = fields.Char("Suffix", related='definition_id.full_suffix', readonly=True)

--- a/addons/gamification/models/goal.py
+++ b/addons/gamification/models/goal.py
@@ -179,9 +179,9 @@ class Goal(models.Model):
              "case of non-manual goal or goal not linked to a challenge.")
 
     definition_description = fields.Text("Definition Description", related='definition_id.description', readonly=True)
-    definition_condition = fields.Selection("Definition Condition", related='definition_id.condition', readonly=True)
+    definition_condition = fields.Selection(string="Definition Condition", related='definition_id.condition', readonly=True)
     definition_suffix = fields.Char("Suffix", related='definition_id.full_suffix', readonly=True)
-    definition_display = fields.Selection("Display Mode", related='definition_id.display_mode', readonly=True)
+    definition_display = fields.Selection(string="Display Mode", related='definition_id.display_mode', readonly=True)
 
     @api.depends('current', 'target_goal', 'definition_id.condition')
     def _get_completion(self):
