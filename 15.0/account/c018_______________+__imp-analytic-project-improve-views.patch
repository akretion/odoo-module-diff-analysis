PR: https://github.com/odoo/odoo/pull/

From: 45912aaebd220f729a012b199cef602e35adbec0
From: yhu-odoo
Date: 2021-08-27 16:40:49

Structural Changes: 3
Total Changes: 59

[IMP] analytic, project, *: Improve views

Improve the views of analytic.account and project.project.
Add category to analytic.line.

Task-2469742
PR #68708

================================= pseudo patch: =================================

--- a/addons/account/models/account_analytic_line.py
+++ b/addons/account/models/account_analytic_line.py
@@ -7,6 +7,9 @@ from odoo.exceptions import UserError
 class AccountAnalyticAccount(models.Model):
     _inherit = 'account.analytic.account'
 
+    invoice_count = fields.Integer("Invoice Count", compute='_compute_invoice_count')
+    vendor_bill_count = fields.Integer("Vendor Bill Count", compute='_compute_vendor_bill_count')
+
     @api.constrains('company_id')
     def _check_company_consistency(self):
         analytic_accounts = self.filtered('company_id')
@@ -26,6 +29,55 @@ class AccountAnalyticAccount(models.Model):
         if self._cr.fetchone():
             raise UserError(_("You can't set a different company on your analytic account since there are some journal items linked to it."))
 
+    @api.depends('line_ids')
+    def _compute_invoice_count(self):
+        sale_types = self.env['account.move'].get_sale_types()
+        domain = [
+            ('move_id.state', '=', 'posted'),
+            ('move_id.move_type', 'in', sale_types),
+            ('analytic_account_id', 'in', self.ids)
+        ]
+        groups = self.env['account.move.line'].read_group(domain, ['move_id:count_distinct'], ['analytic_account_id'])
+        moves_count_mapping = dict((g['analytic_account_id'][0], g['analytic_account_id_count']) for g in groups)
+        for account in self:
+            account.invoice_count = moves_count_mapping.get(account.id, 0)
+
+    @api.depends('line_ids')
+    def _compute_vendor_bill_count(self):
+        purchase_types = self.env['account.move'].get_purchase_types()
+        domain = [
+            ('move_id.state', '=', 'posted'),
+            ('move_id.move_type', 'in', purchase_types),
+            ('analytic_account_id', 'in', self.ids)
+        ]
+        groups = self.env['account.move.line'].read_group(domain, ['move_id:count_distinct'], ['analytic_account_id'])
+        moves_count_mapping = dict((g['analytic_account_id'][0], g['analytic_account_id_count']) for g in groups)
+        for account in self:
+            account.vendor_bill_count = moves_count_mapping.get(account.id, 0)
+
+    def action_view_invoice(self):
+        self.ensure_one()
+        result = {
+            "type": "ir.actions.act_window",
+            "res_model": "account.move",
+            "domain": [('id', 'in', self.line_ids.move_id.move_id.ids), ('move_type', 'in', self.env['account.move'].get_sale_types())],
+            "context": {"create": False},
+            "name": "Customer Invoices",
+            'view_mode': 'tree,form',
+        }
+        return result
+
+    def action_view_vendor_bill(self):
+        self.ensure_one()
+        result = {
+            "type": "ir.actions.act_window",
+            "res_model": "account.move",
+            "domain": [('id', 'in', self.line_ids.move_id.move_id.ids), ('move_type', 'in', self.env['account.move'].get_purchase_types())],
+            "context": {"create": False},
+            "name": "Vendor Bills",
+            'view_mode': 'tree,form',
+        }
+        return result
 
 class AccountAnalyticTag(models.Model):
     _inherit = 'account.analytic.tag'
@@ -62,6 +114,7 @@ class AccountAnalyticLine(models.Model):
     move_id = fields.Many2one('account.move.line', string='Journal Item', ondelete='cascade', index=True, check_company=True)
     code = fields.Char(size=8)
     ref = fields.Char(string='Ref.')
+    category = fields.Selection(selection_add=[('invoice', 'Customer Invoice'), ('vendor_bill', 'Vendor Bill')])
 
     @api.onchange('product_id', 'product_uom_id', 'unit_amount', 'currency_id')
     def on_change_unit_amount(self):

--- a/addons/account/models/account_move.py
+++ b/addons/account/models/account_move.py
@@ -5007,6 +5007,11 @@ class AccountMoveLine(models.Model):
         for move_line in self:
             amount = (move_line.credit or 0.0) - (move_line.debit or 0.0)
             default_name = move_line.name or (move_line.ref or '/' + ' -- ' + (move_line.partner_id and move_line.partner_id.name or '/'))
+            category = 'other'
+            if move_line.move_id.is_sale_document():
+                category = 'invoice'
+            elif move_line.move_id.is_purchase_document():
+                category = 'vendor_bill'
             result.append({
                 'name': default_name,
                 'date': move_line.date,
@@ -5023,6 +5028,7 @@ class AccountMoveLine(models.Model):
                 'user_id': move_line.move_id.invoice_user_id.id or self._uid,
                 'partner_id': move_line.partner_id.id,
                 'company_id': move_line.analytic_account_id.company_id.id or move_line.move_id.company_id.id,
+                'category': category,
             })
         return result
 
