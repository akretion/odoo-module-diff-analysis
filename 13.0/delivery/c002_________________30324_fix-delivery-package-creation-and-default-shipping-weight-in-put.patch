PR: https://github.com/odoo/odoo/pull/30324

From: 1d388450e5d8c956966fa493a5e0af17698b21bf
From: Arnaud Baes
Date: 2019-03-05 09:04:55

Structural Changes: 1
Total Changes: 68

[FIX] delivery: Package creation and default shipping weight in 'put in_pack`

The package creation was done even before the call of the 'choose.delivery.package' wizard, so the 'Discard' button of the wizard was useless.
This commit fix this behaviour by creating the package only when the "put_in_pack" action is called from the wizard.
The default weight is thus no more based on the default package but on the picking related to the package.
The method 'manage_package', 'default_stock_quant_package_id', 'self._default_delivery_packaging_id' were removed since they are no more relevant.
The method 'check_destinations' was refactored to '_pre_put_in_pack_hook' to avoid confusion related to its misleading name

TaskID: 1924875

closes odoo/odoo#30324

Signed-off-by: Arnold Moyaux <amoyaux@users.noreply.github.com>

================================= pseudo patch: =================================

--- a/addons/delivery/models/stock_picking.py
+++ b/addons/delivery/models/stock_picking.py
@@ -37,28 +37,6 @@ class StockQuantPackage(models.Model):
     shipping_weight = fields.Float(string='Shipping Weight', help="Total weight of the package.")
 
 
-class StockMoveLine(models.Model):
-    _inherit = 'stock.move.line'
-
-    @api.multi
-    def manage_package_type(self):
-        self.ensure_one()
-        view_id = self.env.ref('delivery.choose_delivery_package_view_form').id
-        return {
-            'name': _('Package Details'),
-            'type': 'ir.actions.act_window',
-            'view_mode': 'form',
-            'res_model': 'choose.delivery.package',
-            'view_id': view_id,
-            'views': [(view_id, 'form')],
-            'target': 'new',
-            'context': {
-                'default_stock_quant_package_id': self.result_package_id.id,
-                'current_package_carrier_type': self.picking_id.carrier_id.delivery_type if self.picking_id.carrier_id.delivery_type not in ['base_on_rule', 'fixed'] else 'none',
-                }
-        }
-
-
 class StockPicking(models.Model):
     _inherit = 'stock.picking'
 
@@ -135,29 +113,35 @@ class StockPicking(models.Model):
         return res
 
     @api.multi
-    def put_in_pack(self):
-        res = super(StockPicking, self).put_in_pack()
-        if isinstance(res, dict) and res.get('type'):
-            return res
-        if self.carrier_id and self.carrier_id.delivery_type not in ['base_on_rule', 'fixed']:
-            view_id = self.env.ref('delivery.choose_delivery_package_view_form').id
-            return {
-                'name': _('Package Details'),
-                'type': 'ir.actions.act_window',
-                'view_mode': 'form',
-                'res_model': 'choose.delivery.package',
-                'view_id': view_id,
-                'views': [(view_id, 'form')],
-                'target': 'new',
-                'context': dict(
-                    self.env.context,
-                    current_package_carrier_type=self.carrier_id.delivery_type,
-                    default_stock_quant_package_id=res.id
-                ),
-            }
+    def _pre_put_in_pack_hook(self, move_line_ids):
+        res = super(StockPicking, self)._pre_put_in_pack_hook(move_line_ids)
+        if not res:
+            if self.carrier_id:
+                return self._set_delivery_packaging()
         else:
             return res
 
+    def _set_delivery_packaging(self):
+        """ This method returns an action allowing to set the product packaging and the shipping weight
+         on the stock.quant.package.
+        """
+        self.ensure_one()
+        view_id = self.env.ref('delivery.choose_delivery_package_view_form').id
+        return {
+            'name': _('Package Details'),
+            'type': 'ir.actions.act_window',
+            'view_mode': 'form',
+            'res_model': 'choose.delivery.package',
+            'view_id': view_id,
+            'views': [(view_id, 'form')],
+            'target': 'new',
+            'context': dict(
+                self.env.context,
+                current_package_carrier_type=self.carrier_id.delivery_type,
+                default_picking_id=self.id
+            ),
+        }
+
     @api.multi
     def action_send_confirmation_email(self):
         self.ensure_one()
