PR: https://github.com/odoo/odoo/pull/

From: 3f4f77fd9d5c79c21665fa08d703bba7571decd8
From: Adrian Torres
Date: 2018-09-27 10:10:23

Structural Changes: 6
Total Changes: 24

[REF] *: adapt code to new related default behaviour

This commit adapts the business code to changes introduced by
the parent commit in order to keep the same behaviour as before.

All readonly=False fields will have to be checked afterwards to confirm
that the business case requires write access to the source field.

================================= pseudo patch: =================================

--- a/addons/fleet/models/fleet_vehicle.py
+++ b/addons/fleet/models/fleet_vehicle.py
@@ -26,7 +26,7 @@ class FleetVehicle(models.Model):
     driver_id = fields.Many2one('res.partner', 'Driver', track_visibility="onchange", help='Driver of the vehicle', copy=False)
     model_id = fields.Many2one('fleet.vehicle.model', 'Model',
         track_visibility="onchange", required=True, help='Model of the vehicle')
-    brand_id = fields.Many2one('fleet.vehicle.model.brand', 'Brand', related="model_id.brand_id", store=True)
+    brand_id = fields.Many2one('fleet.vehicle.model.brand', 'Brand', related="model_id.brand_id", store=True, readonly=False)
     log_drivers = fields.One2many('fleet.vehicle.assignation.log', 'vehicle_id', string='Assignation Logs')
     log_fuel = fields.One2many('fleet.vehicle.log.fuel', 'vehicle_id', 'Fuel Logs')
     log_services = fields.One2many('fleet.vehicle.log.services', 'vehicle_id', 'Services Logs')
@@ -66,9 +66,9 @@ class FleetVehicle(models.Model):
     horsepower_tax = fields.Float('Horsepower Taxation')
     power = fields.Integer('Power', help='Power in kW of the vehicle')
     co2 = fields.Float('CO2 Emissions', help='CO2 emissions of the vehicle')
-    image = fields.Binary(related='model_id.image', string="Logo")
-    image_medium = fields.Binary(related='model_id.image_medium', string="Logo (medium)")
-    image_small = fields.Binary(related='model_id.image_small', string="Logo (small)")
+    image = fields.Binary(related='model_id.image', string="Logo", readonly=False)
+    image_medium = fields.Binary(related='model_id.image_medium', string="Logo (medium)", readonly=False)
+    image_small = fields.Binary(related='model_id.image_small', string="Logo (small)", readonly=False)
     contract_renewal_due_soon = fields.Boolean(compute='_compute_contract_reminder', search='_search_contract_renewal_due_soon',
         string='Has Contracts to renew', multi='contract_info')
     contract_renewal_overdue = fields.Boolean(compute='_compute_contract_reminder', search='_search_get_overdue_contract_reminder',
@@ -292,7 +292,7 @@ class FleetVehicleOdometer(models.Model):
     value = fields.Float('Odometer Value', group_operator="max")
     vehicle_id = fields.Many2one('fleet.vehicle', 'Vehicle', required=True)
     unit = fields.Selection(related='vehicle_id.odometer_unit', string="Unit", readonly=True)
-    driver_id = fields.Many2one(related="vehicle_id.driver_id", string="Driver")
+    driver_id = fields.Many2one(related="vehicle_id.driver_id", string="Driver", readonly=False)
 
     @api.depends('vehicle_id', 'date')
     def _compute_vehicle_log_name(self):

--- a/addons/fleet/models/fleet_vehicle_cost.py
+++ b/addons/fleet/models/fleet_vehicle_cost.py
@@ -12,7 +12,7 @@ class FleetVehicleCost(models.Model):
     _description = 'Cost related to a vehicle'
     _order = 'date desc, vehicle_id asc'
 
-    name = fields.Char(related='vehicle_id.name', string='Name', store=True)
+    name = fields.Char(related='vehicle_id.name', string='Name', store=True, readonly=False)
     vehicle_id = fields.Many2one('fleet.vehicle', 'Vehicle', required=True, help='Vehicle concerned by this log')
     cost_subtype_id = fields.Many2one('fleet.service.type', 'Type', help='Cost type purchased with this cost')
     amount = fields.Float('Total Price')
@@ -134,7 +134,7 @@ class FleetVehicleLogContract(models.Model):
     # we need to keep this field as a related with store=True because the graph view doesn't support
     # (1) to address fields from inherited table
     # (2) fields that aren't stored in database
-    cost_amount = fields.Float(related='cost_id.amount', string='Amount', store=True)
+    cost_amount = fields.Float(related='cost_id.amount', string='Amount', store=True, readonly=False)
     odometer = fields.Float(string='Odometer at creation', 
         help='Odometer measure of the vehicle at the moment of the contract creation')
 
@@ -317,7 +317,7 @@ class FleetVehicleLogFuel(models.Model):
     # we need to keep this field as a related with store=True because the graph view doesn't support
     # (1) to address fields from inherited table
     # (2) fields that aren't stored in database
-    cost_amount = fields.Float(related='cost_id.amount', string='Amount', store=True)
+    cost_amount = fields.Float(related='cost_id.amount', string='Amount', store=True, readonly=False)
 
     @api.onchange('vehicle_id')
     def _onchange_vehicle(self):
@@ -366,7 +366,7 @@ class FleetVehicleLogServices(models.Model):
     vendor_id = fields.Many2one('res.partner', 'Vendor', domain="[('supplier','=',True)]")
     # we need to keep this field as a related with store=True because the graph view doesn't support
     # (1) to address fields from inherited table and (2) fields that aren't stored in database
-    cost_amount = fields.Float(related='cost_id.amount', string='Amount', store=True)
+    cost_amount = fields.Float(related='cost_id.amount', string='Amount', store=True, readonly=False)
     notes = fields.Text()
     cost_id = fields.Many2one('fleet.vehicle.cost', 'Cost', required=True, ondelete='cascade')
 

--- a/addons/fleet/models/fleet_vehicle_model.py
+++ b/addons/fleet/models/fleet_vehicle_model.py
@@ -12,9 +12,9 @@ class FleetVehicleModel(models.Model):
     name = fields.Char('Model name', required=True)
     brand_id = fields.Many2one('fleet.vehicle.model.brand', 'Make', required=True, help='Make of the vehicle')
     vendors = fields.Many2many('res.partner', 'fleet_vehicle_model_vendors', 'model_id', 'partner_id', string='Vendors')
-    image = fields.Binary(related='brand_id.image', string="Logo")
-    image_medium = fields.Binary(related='brand_id.image_medium', string="Logo (medium)")
-    image_small = fields.Binary(related='brand_id.image_small', string="Logo (small)")
+    image = fields.Binary(related='brand_id.image', string="Logo", readonly=False)
+    image_medium = fields.Binary(related='brand_id.image_medium', string="Logo (medium)", readonly=False)
+    image_small = fields.Binary(related='brand_id.image_small', string="Logo (small)", readonly=False)
 
     @api.multi
     @api.depends('name', 'brand_id')
