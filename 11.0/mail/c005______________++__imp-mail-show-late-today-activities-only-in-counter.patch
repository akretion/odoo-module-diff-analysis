PR: https://github.com/odoo/odoo/pull/

From: f2d492fac38248f3dbbc0c9761869f4db21f90ad
From: Fabien Pinckaers
Date: 2017-07-05 22:18:45

Structural Changes: 4
Total Changes: 37

[IMP] mail: show late+today activities only in counter

================================= pseudo patch: =================================

--- a/addons/mail/models/mail_activity.py
+++ b/addons/mail/models/mail_activity.py
@@ -132,33 +132,39 @@ class MailActivity(models.Model):
     def create(self, values):
         activity = super(MailActivity, self).create(values)
         self.env[activity.res_model].browse(activity.res_id).message_subscribe(partner_ids=[activity.user_id.partner_id.id])
-        self.env['bus.bus'].sendone(
-            (self._cr.dbname, 'res.partner', activity.user_id.partner_id.id),
-            {'type': 'activity_updated', 'activity_created': True})
+        if activity.date_deadline <= fields.Date.today():
+            self.env['bus.bus'].sendone(
+                (self._cr.dbname, 'res.partner', activity.user_id.partner_id.id),
+                {'type': 'activity_updated', 'activity_created': True})
         return activity
 
     @api.multi
     def write(self, values):
-        res = super(MailActivity, self).write(values)
         if values.get('user_id'):
             pre_responsibles = self.mapped('user_id.partner_id')
+        res = super(MailActivity, self).write(values)
+        if values.get('user_id'):
             for activity in self:
                 self.env[activity.res_model].browse(activity.res_id).message_subscribe(partner_ids=[activity.user_id.partner_id.id])
-                self.env['bus.bus'].sendone(
-                    (self._cr.dbname, 'res.partner', activity.user_id.partner_id.id),
-                    {'type': 'activity_updated', 'activity_created': True})
-            for partner in pre_responsibles:
-                self.env['bus.bus'].sendone(
-                    (self._cr.dbname, 'res.partner', partner.id),
-                    {'type': 'activity_updated', 'activity_deleted': True})
+                if activity.date_deadline <= fields.Date.today():
+                    self.env['bus.bus'].sendone(
+                        (self._cr.dbname, 'res.partner', activity.user_id.partner_id.id),
+                        {'type': 'activity_updated', 'activity_created': True})
+            for activity in self:
+                if activity.date_deadline <= fields.Date.today():
+                    for partner in pre_responsibles:
+                        self.env['bus.bus'].sendone(
+                            (self._cr.dbname, 'res.partner', partner.id),
+                            {'type': 'activity_updated', 'activity_deleted': True})
         return res
 
     @api.multi
     def unlink(self):
         for activity in self:
-            self.env['bus.bus'].sendone(
-                (self._cr.dbname, 'res.partner', activity.user_id.partner_id.id),
-                {'type': 'activity_updated', 'activity_deleted': True})
+            if activity.date_deadline <= fields.Date.today():
+                self.env['bus.bus'].sendone(
+                    (self._cr.dbname, 'res.partner', activity.user_id.partner_id.id),
+                    {'type': 'activity_updated', 'activity_deleted': True})
         return super(MailActivity, self).unlink()
 
     @api.multi

--- a/addons/mail/models/res_users.py
+++ b/addons/mail/models/res_users.py
@@ -145,7 +145,8 @@ class Users(models.Model):
                     'total_count': 0, 'today_count': 0, 'overdue_count': 0, 'planned_count': 0,
                 }
             user_activities[activity['model']]['%s_count' % activity['states']] += activity['count']
-            user_activities[activity['model']]['total_count'] += activity['count']
+            if activity['states'] in ('today','overdue'):
+                user_activities[activity['model']]['total_count'] += activity['count']
 
         return user_activities.values()
 
