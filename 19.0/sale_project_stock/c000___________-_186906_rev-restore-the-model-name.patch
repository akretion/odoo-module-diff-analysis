PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:3 + add:0, change matches:
-    _inherit = ['sale.order.line']
-    _inherit = ['stock.move']
-    _inherit = ['stock.picking']

Total Changes: 6

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/sale_project_stock/models/sale_order_line.py
+++ b/addons/sale_project_stock/models/sale_order_line.py
@@ -5,7 +5,7 @@ from odoo import models
 
 
 class SaleOrderLine(models.Model):
-    _inherit = ['sale.order.line']
+    _inherit = 'sale.order.line'
 
     def _get_action_per_item(self):
         """ Get action per Sales Order Item to display the stock moves linked

--- a/addons/sale_project_stock/models/stock_move.py
+++ b/addons/sale_project_stock/models/stock_move.py
@@ -5,7 +5,7 @@ from odoo.tools import float_is_zero
 
 
 class StockMove(models.Model):
-    _inherit = ['stock.move']
+    _inherit = 'stock.move'
 
     def _sale_get_invoice_price(self, order):
         """ Based on the current stock move, compute the price to reinvoice the analytic line that is going to be created (so the

--- a/addons/sale_project_stock/models/stock_picking.py
+++ b/addons/sale_project_stock/models/stock_picking.py
@@ -5,7 +5,7 @@ from odoo.exceptions import UserError
 
 
 class StockPicking(models.Model):
-    _inherit = ['stock.picking']
+    _inherit = 'stock.picking'
 
     def button_validate(self):
         res = super().button_validate()
