PR: https://github.com/odoo/odoo/pull/138531

From: e15b75efb4454102b19a33d4f6a6845784bc9be1
From: Chong Wang (cwg)
Date: 2023-10-23 20:07:20

Structural Changes: 4
Total Changes: 22

[IMP] core: export record translation

Currently, bulk-importing translations for non-module loaded data is hard
1. PO file import works fine, but exporting a PO template for non-module loaded
data is near impossible (since PO exports will only export entire modules)
2. Import of translated values during csv/excel file import is not supported

This commit fix the issue by improve 1 which reuses the translation export
wizard for modules to export translations for non-module records. So that user
can export translations for selected records with a domain and import the po
file after translating

[DEBUG MODE] Settings -> Translations -> Export translations -> Export Type
("model") -> Select `Model to Export` and `Model Domain` -> Export
The framework will
1. create external ids for records without external ids
2. export translations for stored translated and inherited translated fields

closes odoo/odoo#138531

Task: 3463505
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/odoo/addons/base/wizard/base_export_language.py
+++ b/odoo/addons/base/wizard/base_export_language.py
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
+import ast
 import base64
 import contextlib
 import io
@@ -23,8 +24,13 @@ class BaseLanguageExport(models.TransientModel):
     lang = fields.Selection(_get_languages, string='Language', required=True, default=NEW_LANG_KEY)
     format = fields.Selection([('csv','CSV File'), ('po','PO File'), ('tgz', 'TGZ Archive')],
                               string='File Format', required=True, default='po')
+    export_type = fields.Selection([('module', 'Module'), ('model', 'Model')],
+                                   string='Export Type', required=True, default='module')
     modules = fields.Many2many('ir.module.module', 'rel_modules_langexport', 'wiz_id', 'module_id',
                                string='Apps To Export', domain=[('state','=','installed')])
+    model_id = fields.Many2one('ir.model', string='Model to Export', domain=[('transient', '=', False)])
+    model_name = fields.Char(string="Model Name", related="model_id.model")
+    domain = fields.Char(string="Model Domain", default='[]')
     data = fields.Binary('File', readonly=True, attachment=False)
     state = fields.Selection([('choose', 'choose'), ('get', 'get')], # choose language or get the file
                              default='choose')
@@ -32,15 +38,21 @@ class BaseLanguageExport(models.TransientModel):
     def act_getfile(self):
         this = self[0]
         lang = this.lang if this.lang != NEW_LANG_KEY else False
-        mods = sorted(this.mapped('modules.name')) or ['all']
 
         with contextlib.closing(io.BytesIO()) as buf:
-            tools.trans_export(lang, mods, buf, this.format, self._cr)
+            if this.export_type == 'model':
+                ids = self.env[this.model_name].search(ast.literal_eval(this.domain)).ids
+                tools.trans_export_records(lang, this.model_name, ids, buf, this.format, self._cr)
+            else:
+                mods = sorted(this.mapped('modules.name')) or ['all']
+                tools.trans_export(lang, mods, buf, this.format, self._cr)
             out = base64.encodebytes(buf.getvalue())
 
         filename = 'new'
         if lang:
             filename = tools.get_iso_codes(lang)
+        elif this.export_type == 'model':
+            filename = this.model_name.replace('.', '_')
         elif len(mods) == 1:
             filename = mods[0]
         extension = this.format

--- a/odoo/addons/base/wizard/base_export_language_views.xml
+++ b/odoo/addons/base/wizard/base_export_language_views.xml
@@ -11,7 +11,11 @@
                     <group invisible="state != 'choose'" string="Export Settings">
                         <field name="lang"/>
                         <field name="format"/>
-                        <field name="modules" widget="many2many_tags" options="{'no_create': True}"/>
+                        <field name="export_type"/>
+                        <field name="modules" widget="many2many_tags" options="{'no_create': True}" invisible="export_type == 'model'"/>
+                        <field name="model_id" options="{'no_create': True}" invisible="export_type == 'module'"/>
+                        <field name="model_name" invisible="1"/>
+                        <field name="domain" widget="domain" options="{'model': 'model_name'}" invisible="export_type == 'module'"/>
                     </group>
                     <div invisible="state != 'get'">
                         <h2>Export Complete</h2>
