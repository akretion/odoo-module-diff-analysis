PR: https://github.com/odoo/odoo/pull/

From: 512fd20dfd5b102b142d51d180512f9fd45de1aa
From: Christophe Simonis
Date: 2018-03-16 12:37:59

Structural Changes: 8
Total Changes: 14

[IMP] maintenance: allow cross-company usage

Company fields should not be required.

================================= pseudo patch: =================================

--- a/addons/maintenance/models/maintenance.py
+++ b/addons/maintenance/models/maintenance.py
@@ -31,7 +31,7 @@ class MaintenanceEquipmentCategory(models.Model):
         self.fold = False if self.equipment_count else True
 
     name = fields.Char('Category Name', required=True, translate=True)
-    company_id = fields.Many2one('res.company', string='Company', required=True,
+    company_id = fields.Many2one('res.company', string='Company',
         default=lambda self: self.env.user.company_id)
     technician_user_id = fields.Many2one('res.users', 'Responsible', track_visibility='onchange', default=lambda self: self.env.uid, oldname='user_id')
     color = fields.Integer('Color Index')
@@ -122,7 +122,7 @@ class MaintenanceEquipment(models.Model):
         return recs.name_get()
 
     name = fields.Char('Equipment Name', required=True, translate=True)
-    company_id = fields.Many2one('res.company', string='Company', required=True,
+    company_id = fields.Many2one('res.company', string='Company',
         default=lambda self: self.env.user.company_id)
     active = fields.Boolean(default=True)
     technician_user_id = fields.Many2one('res.users', string='Technician', track_visibility='onchange', oldname='user_id')
@@ -282,10 +282,14 @@ class MaintenanceRequest(models.Model):
         return super(MaintenanceRequest, self)._track_subtype(init_values)
 
     def _get_default_team_id(self):
-        return self.env['maintenance.team'].search([('company_id', '=', self.env.user.company_id.id)], limit=1).id
+        MT = self.env['maintenance.team']
+        team = MT.search([('company_id', '=', self.env.user.company_id.id)], limit=1)
+        if not team:
+            team = MT.search([], limit=1)
+        return team.id
 
     name = fields.Char('Subjects', required=True)
-    company_id = fields.Many2one('res.company', string='Company', required=True,
+    company_id = fields.Many2one('res.company', string='Company',
         default=lambda self: self.env.user.company_id)
     description = fields.Text('Description')
     request_date = fields.Date('Request Date', track_visibility='onchange', default=fields.Date.context_today,
@@ -376,7 +380,7 @@ class MaintenanceTeam(models.Model):
 
     name = fields.Char(required=True, translate=True)
     active = fields.Boolean(default=True)
-    company_id = fields.Many2one('res.company', string='Company', required=True,
+    company_id = fields.Many2one('res.company', string='Company',
         default=lambda self: self.env.user.company_id)
     member_ids = fields.Many2many('res.users', 'maintenance_team_users_rel', string="Team Members")
     color = fields.Integer("Color Index", default=0)
