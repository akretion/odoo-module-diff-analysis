PR: https://github.com/odoo/odoo/pull/77389

From: 44e5f0cd2c1e6d449d1f0e448293824210f52e92
From: Fabio Barbero
Date: 2021-10-26 19:40:39

Structural Changes: 9
Total Changes: 14

[IMP] event_*, website_event_*: improve UI

Purpose
=======
Give the user a better experience when handling events by removing
useless views and using coherent names of fields.

Specifications
==============
Add placeholders in multiple fields, change names in event_event module
to be more consistent with each other, remove and add filters/measures
in events and tracks.

Task-2646692

closes odoo/odoo#77389

Related: odoo/enterprise#21294
Signed-off-by: Thibault Delavallee (tde) <tde@openerp.com>

================================= pseudo patch: =================================

--- a/addons/event/models/event_event.py
+++ b/addons/event/models/event_event.py
@@ -131,22 +131,22 @@ class EventEvent(models.Model):
     legend_normal = fields.Char(related='stage_id.legend_normal', string='Kanban Ongoing Explanation', readonly=True)
     # Seats and computation
     seats_max = fields.Integer(
-        string='Maximum Attendees Number',
+        string='Maximum Attendees',
         compute='_compute_seats_max', readonly=False, store=True,
         help="For each event you can define a maximum registration of seats(number of attendees), above this numbers the registrations are not accepted.")
-    seats_limited = fields.Boolean('Maximum Attendees', required=True, compute='_compute_seats_limited',
+    seats_limited = fields.Boolean('Limit Attendees', required=True, compute='_compute_seats_limited',
                                    readonly=False, store=True)
     seats_reserved = fields.Integer(
-        string='Reserved Seats',
+        string='Number of Registrations',
         store=True, readonly=True, compute='_compute_seats')
     seats_available = fields.Integer(
         string='Available Seats',
         store=True, readonly=True, compute='_compute_seats')
     seats_unconfirmed = fields.Integer(
-        string='Unconfirmed Seat Reservations',
+        string='Unconfirmed Registrations',
         store=True, readonly=True, compute='_compute_seats')
     seats_used = fields.Integer(
-        string='Number of Participants',
+        string='Number of Attendees',
         store=True, readonly=True, compute='_compute_seats')
     seats_expected = fields.Integer(
         string='Number of Expected Attendees',

--- a/addons/event/models/event_ticket.py
+++ b/addons/event/models/event_ticket.py
@@ -19,10 +19,10 @@ class EventTemplateTicket(models.Model):
     event_type_id = fields.Many2one(
         'event.type', string='Event Category', ondelete='cascade', required=True)
     # seats
-    seats_limited = fields.Boolean(string='Seats Limit', readonly=True, store=True,
+    seats_limited = fields.Boolean(string='Limit Attendees', readonly=True, store=True,
                                    compute='_compute_seats_limited')
     seats_max = fields.Integer(
-        string='Maximum Seats',
+        string='Maximum Attendees',
         help="Define the number of available tickets. If you have too many registrations you will "
              "not be able to sell tickets anymore. Set 0 to ignore this rule set as unlimited.")
 
