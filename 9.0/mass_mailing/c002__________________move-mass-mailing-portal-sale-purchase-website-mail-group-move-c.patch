PR: https://github.com/odoo/odoo/pull/

From: de27deba9bf4d32bace206a5539881323f1d20e2
From: Thibault Delavall√©e
Date: 2015-07-02 11:33:59

Structural Changes: 1
Total Changes: 43

[MOVE] mass_mailing, portal_sale, purchase, website_mail_group: move code
related to the mail.mail model in their own mail_mail.py file. This ease
the process of working on the mail.mail model and inheritance, if the
code is not hidden between unrelated models.

================================= pseudo patch: =================================

--- a/addons/mass_mailing/models/mail_mail.py
+++ b/addons/mass_mailing/models/mail_mail.py
@@ -3,12 +3,16 @@
 
 import urllib
 import urlparse
+import re
 
 from openerp import tools
 from openerp import SUPERUSER_ID
 from openerp.osv import osv, fields
 
 
+URL_REGEX = r'(\bhref=[\'"]([^\'"]+)[\'"])'
+
+
 class MailMail(osv.Model):
     """Add the mass mailing campaign data to mail"""
     _name = 'mail.mail'
@@ -53,11 +57,24 @@ class MailMail(osv.Model):
         return url
 
     def send_get_mail_body(self, cr, uid, ids, partner=None, context=None):
-        """ Override to add the tracking URL to the body. """
+        """ Override to add the tracking URL to the body and to add
+        Statistic_id in shorted urls """
         # TDE: temporary addition (mail was parameter) due to semi-new-API
         body = super(MailMail, self).send_get_mail_body(cr, uid, ids, partner=partner, context=context)
         mail = self.browse(cr, uid, ids[0], context=context)
 
+        links_blacklist = ['/unsubscribe_from_list']
+
+        if mail.mailing_id and body and mail.statistics_ids:
+            for match in re.findall(URL_REGEX, self.body_html):
+
+                href = match[0]
+                url = match[1]
+
+                if not [s for s in links_blacklist if s in href]:
+                    new_href = href.replace(url, url + '/m/' + str(self.statistics_ids[0].id))
+                    body = body.replace(href, new_href)
+
         # prepend <base> tag for images using absolute urls
         domain = self.pool.get("ir.config_parameter").get_param(cr, uid, "web.base.url", context=context)
         base = "<base href='%s'>" % domain

--- a/addons/mass_mailing/models/mass_mailing.py
+++ b/addons/mass_mailing/models/mass_mailing.py
@@ -3,7 +3,6 @@
 from datetime import datetime
 from dateutil import relativedelta
 import random
-import re
 
 from openerp import tools
 from openerp import models, api, _
@@ -14,8 +13,6 @@ from openerp.tools.safe_eval import safe_eval as eval
 from openerp.tools import ustr
 from openerp.osv import osv, fields
 
-URL_REGEX = r'(\bhref=[\'"]([^\'"]+)[\'"])'
-
 
 class MassMailingTag(osv.Model):
     """Model of categories of mass mailing, i.e. marketing, newsletter, ... """
@@ -830,24 +827,3 @@ class MassMailing(osv.Model):
                 self.send_mail(cr, uid, [mass_mailing_id], context=context)
             else:
                 self.write(cr, uid, [mass_mailing_id], {'state': 'done'}, context=context)
-
-
-class MailMail(models.Model):
-    _inherit = ['mail.mail']
-
-    @api.multi
-    def send_get_mail_body(self, partner=None):
-        """Override to add Statistic_id in shorted urls """
-        links_blacklist = ['/unsubscribe_from_list']
-
-        if self.mailing_id and self.body_html and self.statistics_ids:
-            for match in re.findall(URL_REGEX, self.body_html):
-
-                href = match[0]
-                url = match[1]
-
-                if not [s for s in links_blacklist if s in href]:
-                    new_href = href.replace(url, url + '/m/' + str(self.statistics_ids[0].id))
-                    self.body_html = self.body_html.replace(href, new_href)
-
-        return super(MailMail, self).send_get_mail_body(partner=partner)
