PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:9 + add:0, change matches:
-    _inherit = ['calendar.event']
-    _inherit = ['crm.team.member']
-    _inherit = ['digest.digest']
-    _inherit = ['ir.config_parameter']
-    _inherit = ["mail.activity"]
-    _inherit = ['res.config.settings']
-    _inherit = ['res.partner']
-    _inherit = ['res.users']
-    _inherit = ['utm.campaign']

Total Changes: 24

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/crm/models/calendar.py
+++ b/addons/crm/models/calendar.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models
 
 
 class CalendarEvent(models.Model):
-    _inherit = ['calendar.event']
+    _inherit = 'calendar.event'
 
     @api.model
     def default_get(self, fields):

--- a/addons/crm/models/crm_lead.py
+++ b/addons/crm/models/crm_lead.py
@@ -86,6 +86,7 @@ PLS_UPDATE_BATCH_STEP = 5000
 
 
 class CrmLead(models.Model):
+    _name = 'crm.lead'
     _description = "Lead"
     _order = "priority desc, id desc"
     _inherit = ['mail.thread.cc',

--- a/addons/crm/models/crm_lead_scoring_frequency.py
+++ b/addons/crm/models/crm_lead_scoring_frequency.py
@@ -3,6 +3,7 @@ from odoo import fields, models
 
 
 class CrmLeadScoringFrequency(models.Model):
+    _name = 'crm.lead.scoring.frequency'
     _description = 'Lead Scoring Frequency'
 
     variable = fields.Char('Variable', index=True)
@@ -13,6 +14,7 @@ class CrmLeadScoringFrequency(models.Model):
 
 
 class CrmLeadScoringFrequencyField(models.Model):
+    _name = 'crm.lead.scoring.frequency.field'
     _description = 'Fields that can be used for predictive lead scoring computation'
 
     name = fields.Char(related="field_id.field_description")

--- a/addons/crm/models/crm_lost_reason.py
+++ b/addons/crm/models/crm_lost_reason.py
@@ -5,6 +5,7 @@ from odoo import fields, models, _
 
 
 class CrmLostReason(models.Model):
+    _name = 'crm.lost.reason'
     _description = 'Opp. Lost Reason'
 
     name = fields.Char('Description', required=True, translate=True)

--- a/addons/crm/models/crm_recurring_plan.py
+++ b/addons/crm/models/crm_recurring_plan.py
@@ -5,6 +5,7 @@ from odoo import fields, models
 
 
 class CrmRecurringPlan(models.Model):
+    _name = 'crm.recurring.plan'
     _description = "CRM Recurring revenue plans"
     _order = "sequence"
 

--- a/addons/crm/models/crm_team.py
+++ b/addons/crm/models/crm_team.py
@@ -18,6 +18,7 @@ _logger = logging.getLogger(__name__)
 
 
 class CrmTeam(models.Model):
+    _name = 'crm.team'
     _inherit = ['mail.alias.mixin', 'crm.team']
     _description = 'Sales Team'
 

--- a/addons/crm/models/crm_team_member.py
+++ b/addons/crm/models/crm_team_member.py
@@ -13,7 +13,7 @@ _logger = logging.getLogger(__name__)
 
 
 class CrmTeamMember(models.Model):
-    _inherit = ['crm.team.member']
+    _inherit = 'crm.team.member'
 
     # assignment
     assignment_enabled = fields.Boolean(related="crm_team_id.assignment_enabled")

--- a/addons/crm/models/digest.py
+++ b/addons/crm/models/digest.py
@@ -6,7 +6,7 @@ from odoo.exceptions import AccessError
 
 
 class DigestDigest(models.Model):
-    _inherit = ['digest.digest']
+    _inherit = 'digest.digest'
 
     kpi_crm_lead_created = fields.Boolean('New Leads')
     kpi_crm_lead_created_value = fields.Integer(compute='_compute_kpi_crm_lead_created_value')

--- a/addons/crm/models/ir_config_parameter.py
+++ b/addons/crm/models/ir_config_parameter.py
@@ -6,7 +6,7 @@ from odoo.addons.base.models.ir_model import MODULE_UNINSTALL_FLAG
 
 
 class IrConfig_Parameter(models.Model):
-    _inherit = ['ir.config_parameter']
+    _inherit = 'ir.config_parameter'
 
     def write(self, vals):
         result = super().write(vals)

--- a/addons/crm/models/mail_activity.py
+++ b/addons/crm/models/mail_activity.py
@@ -5,7 +5,7 @@ from odoo import models
 
 
 class MailActivity(models.Model):
-    _inherit = ["mail.activity"]
+    _inherit = "mail.activity"
 
     def action_create_calendar_event(self):
         """ Small override of the action that creates a calendar.

--- a/addons/crm/models/res_config_settings.py
+++ b/addons/crm/models/res_config_settings.py
@@ -9,7 +9,7 @@ from odoo.tools import format_list
 
 
 class ResConfigSettings(models.TransientModel):
-    _inherit = ['res.config.settings']
+    _inherit = 'res.config.settings'
 
     group_use_lead = fields.Boolean(string="Leads", implied_group='crm.group_use_lead')
     group_use_recurring_revenues = fields.Boolean(string="Recurring Revenues", implied_group='crm.group_use_recurring_revenues')

--- a/addons/crm/models/res_partner.py
+++ b/addons/crm/models/res_partner.py
@@ -5,7 +5,7 @@ from odoo.osv import expression
 
 
 class ResPartner(models.Model):
-    _inherit = ['res.partner']
+    _inherit = 'res.partner'
 
     opportunity_ids = fields.One2many('crm.lead', 'partner_id', string='Opportunities', domain=[('type', '=', 'opportunity')])
     opportunity_count = fields.Integer(

--- a/addons/crm/models/res_users.py
+++ b/addons/crm/models/res_users.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class ResUsers(models.Model):
-    _inherit = ['res.users']
+    _inherit = 'res.users'
 
     target_sales_won = fields.Integer('Won in Opportunities Target')
     target_sales_done = fields.Integer('Activities Done Target')

--- a/addons/crm/models/utm.py
+++ b/addons/crm/models/utm.py
@@ -5,7 +5,7 @@ from odoo import fields, models
 
 
 class UtmCampaign(models.Model):
-    _inherit = ['utm.campaign']
+    _inherit = 'utm.campaign'
 
     use_leads = fields.Boolean('Use Leads', compute='_compute_use_leads')
     crm_lead_count = fields.Integer('Leads/Opportunities count', groups='sales_team.group_sale_salesman', compute="_compute_crm_lead_count")
