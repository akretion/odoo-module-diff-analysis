PR: https://github.com/odoo/odoo/pull/150040

From: 20a46a4bbcf369b8a57da390a3f86827c4e1d6fa
From: Xavier Bol (xbo)
Date: 2024-01-22 18:12:09

Structural Changes: 3
Total Changes: 15

[FIX] sale{_timesheet}: avoid using allowed_so_line_ids

Before this commit, the `allowed_so_line_ids` has been introduced
to always use `_default_sale_line_domain` method in the domain of
`so_line` field and so instead of easing the domain in the field definition
we will be able to override the domain by overriding `_default_sale_line_domain`
method. However, since in `sale_timesheet` module, the new domain will contain
a dynamic value in the right part of a leaf
(`('order_partner_id', 'child_of', commercial_partner_id)`), the
`allowed_so_line_ids` is instead use in the domain of `so_line` field to
easily add that leaf in the domain returned `_default_sale_line_domain`
in the compute method of that field. The problem is the number of SOLs
fetched could be really huge and caused a performance issues.

This commit reverts the commit b7491b5b94a1c411fce55565c2bdbddb99b32de5 by
- removing the `allowed_so_line_ids` field
- removing the `_default_sale_line_domain` method since the method
  will no longer be used
- manually adding the domain instead of calling `_default_sale_line_domain`
- altering the domain when the `sale_timesheet` module is installed to
  get the same domain used in the `sale_line_id` of `project.task` model

closes odoo/odoo#150040

X-original-commit: aba07a5e1d78c5813a4862f1a6563d34c1e47114
Related: odoo/upgrade#5565
Signed-off-by: Xavier Bol (xbo) <xbo@odoo.com>

================================= pseudo patch: =================================

--- a/addons/sale/models/analytic.py
+++ b/addons/sale/models/analytic.py
@@ -7,20 +7,7 @@ from odoo import fields, models
 class AccountAnalyticLine(models.Model):
     _inherit = "account.analytic.line"
 
-    allowed_so_line_ids = fields.Many2many('sale.order.line', compute='_compute_allowed_so_line_ids')
-    so_line = fields.Many2one('sale.order.line', string='Sales Order Item', domain="[('id', 'in', allowed_so_line_ids)]")
-
-    def _default_sale_line_domain(self):
-        """ This is only used for delivered quantity of SO line based on analytic line, and timesheet
-            (see sale_timesheet). This can be override to allow further customization.
-        """
-        self.ensure_one()
-        return [('qty_delivered_method', '=', 'analytic')]
-
-    def _compute_allowed_so_line_ids(self):
-        for timesheet in self:
-            domain = timesheet._default_sale_line_domain()
-            timesheet.allowed_so_line_ids = self.env['sale.order.line'].search(domain)
+    so_line = fields.Many2one('sale.order.line', string='Sales Order Item', domain=[('qty_delivered_method', '=', 'analytic')])
 
 
 class AccountAnalyticApplicability(models.Model):
