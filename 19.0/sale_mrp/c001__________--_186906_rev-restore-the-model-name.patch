PR: https://github.com/odoo/odoo/pull/186906

From: 9144eb051538d5a92d403e1ad9c635ce39e090ec
From: Gorash
Date: 2024-11-14 10:39:02

Breaking data model changes scores: del:7 + add:0, change matches:
-    _inherit = ["account.move.line"]
-    _inherit = ['mrp.bom']
-    _inherit = ['mrp.production']
-    _inherit = ['sale.order']
-    _inherit = ['sale.order.line']
-    _inherit = ['stock.move.line']
-    _inherit = ['stock.rule']

Total Changes: 14

[REV] *: Restore the model `_name`

Following internal discussions, the python typing and inheritance task is
canceled. The use of the class name instead of '_name' was done to allow
notations such as `partner_id = fields.Many2one[base.ResParter](string='Partner')`.
Since this notation is canceled, we put `_name` back (although the class
name is sufficient).

Partial revert:
https://github.com/odoo/enterprise/pull/69762
https://github.com/odoo/odoo/pull/178200

closes odoo/odoo#186906

Related: odoo/enterprise#73643
Signed-off-by: Raphael Collet <rco@odoo.com>

================================= pseudo patch: =================================

--- a/addons/sale_mrp/models/account_move.py
+++ b/addons/sale_mrp/models/account_move.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class AccountMoveLine(models.Model):
-    _inherit = ["account.move.line"]
+    _inherit = "account.move.line"
 
     def _stock_account_get_anglo_saxon_price_unit(self):
         price_unit = super(AccountMoveLine, self)._stock_account_get_anglo_saxon_price_unit()

--- a/addons/sale_mrp/models/mrp_bom.py
+++ b/addons/sale_mrp/models/mrp_bom.py
@@ -6,7 +6,7 @@ from odoo.exceptions import UserError
 
 
 class MrpBom(models.Model):
-    _inherit = ['mrp.bom']
+    _inherit = 'mrp.bom'
 
     def write(self, vals):
         if not vals.get('active', True) or ('phantom' in self.mapped('type') and vals.get('type', 'phantom') != 'phantom'):

--- a/addons/sale_mrp/models/mrp_production.py
+++ b/addons/sale_mrp/models/mrp_production.py
@@ -5,7 +5,7 @@ from odoo import api, fields, models, _
 
 
 class MrpProduction(models.Model):
-    _inherit = ['mrp.production']
+    _inherit = 'mrp.production'
 
     sale_order_count = fields.Integer(
         "Count of Source SO",

--- a/addons/sale_mrp/models/sale_order.py
+++ b/addons/sale_mrp/models/sale_order.py
@@ -6,7 +6,7 @@ from odoo import api, fields, models, _
 
 
 class SaleOrder(models.Model):
-    _inherit = ['sale.order']
+    _inherit = 'sale.order'
 
     mrp_production_count = fields.Integer(
         "Count of MO generated",

--- a/addons/sale_mrp/models/sale_order_line.py
+++ b/addons/sale_mrp/models/sale_order_line.py
@@ -6,7 +6,7 @@ from odoo.tools import float_compare
 
 
 class SaleOrderLine(models.Model):
-    _inherit = ['sale.order.line']
+    _inherit = 'sale.order.line'
 
     @api.depends('product_uom_qty', 'qty_delivered', 'product_id', 'state')
     def _compute_qty_to_deliver(self):

--- a/addons/sale_mrp/models/stock_move_line.py
+++ b/addons/sale_mrp/models/stock_move_line.py
@@ -4,7 +4,7 @@ from odoo import models
 
 
 class StockMoveLine(models.Model):
-    _inherit = ['stock.move.line']
+    _inherit = 'stock.move.line'
 
     def _compute_sale_price(self):
         kit_lines = self.filtered(lambda move_line: move_line.move_id.bom_line_id.bom_id.type == 'phantom')

--- a/addons/sale_mrp/models/stock_rule.py
+++ b/addons/sale_mrp/models/stock_rule.py
@@ -2,7 +2,7 @@ from odoo import models
 
 
 class StockRule(models.Model):
-    _inherit = ['stock.rule']
+    _inherit = 'stock.rule'
 
     def _prepare_mo_vals(self, product_id, product_qty, product_uom, location_dest_id, name, origin, company_id, values, bom):
         res = super()._prepare_mo_vals(product_id, product_qty, product_uom, location_dest_id, name, origin, company_id, values, bom)
