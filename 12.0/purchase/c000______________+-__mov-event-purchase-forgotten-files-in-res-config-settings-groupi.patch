PR: https://github.com/odoo/odoo/pull/

From: 9aa4695b5cf0aa270c290422053d842b7503eb6b
From: Richard Mathot
Date: 2017-10-11 06:58:24

Structural Changes: 5
Total Changes: 47

[MOV] event,purchase: forgotten files in res_config_settings grouping

================================= pseudo patch: =================================

--- a/addons/purchase/models/__init__.py
+++ b/addons/purchase/models/__init__.py
@@ -7,4 +7,3 @@ from . import res_company
 from . import res_config_settings
 from . import res_partner
 from . import stock
-from . import stock_config_settings

--- a/addons/purchase/models/res_config_settings.py
+++ b/addons/purchase/models/res_config_settings.py
@@ -29,12 +29,23 @@ class ResConfigSettings(models.TransientModel):
     is_installed_sale = fields.Boolean()
     group_analytic_account_for_purchases = fields.Boolean('Analytic accounting for purchases',
         implied_group='purchase.group_analytic_accounting')
+    po_lead = fields.Float(related='company_id.po_lead')
+    use_po_lead = fields.Boolean(
+        string="Security Lead Time for Purchase",
+        oldname='default_new_po_lead',
+        help="Margin of error for vendor lead times. When the system generates Purchase Orders for reordering products,they will be scheduled that many days earlier to cope with unexpected vendor delays.")
+
+    @api.onchange('use_po_lead')
+    def _onchange_use_po_lead(self):
+        if not self.use_po_lead:
+            self.po_lead = 0.0
 
     @api.multi
     def get_values(self):
         res = super(ResConfigSettings, self).get_values()
         res.update(
-            is_installed_sale=self.env['ir.module.module'].search([('name', '=', 'sale'), ('state', '=', 'installed')]).id
+            is_installed_sale=self.env['ir.module.module'].search([('name', '=', 'sale'), ('state', '=', 'installed')]).id,
+            use_po_lead=self.env['ir.config_parameter'].sudo().get_param('purchase.use_po_lead')
         )
         return res
 
@@ -42,5 +53,4 @@ class ResConfigSettings(models.TransientModel):
         super(ResConfigSettings, self).set_values()
         self.po_lock = 'lock' if self.lock_confirmed_po else 'edit'
         self.po_double_validation = 'two_step' if self.po_order_approval else 'one_step'
-
-
+        self.env['ir.config_parameter'].sudo().set_param('purchase.use_po_lead', self.use_po_lead)

--- a/addons/purchase/models/stock_config_settings.py
+++ b/None
@@ -1,30 +0,0 @@
-# -*- coding: utf-8 -*-
-# Part of Odoo. See LICENSE file for full copyright and licensing details.
-
-from odoo import api, fields, models
-
-
-class ResConfigSettings(models.TransientModel):
-    _inherit = 'res.config.settings'
-
-    po_lead = fields.Float(related='company_id.po_lead')
-    use_po_lead = fields.Boolean(
-        string="Security Lead Time for Purchase",
-        oldname='default_new_po_lead',
-        help="Margin of error for vendor lead times. When the system generates Purchase Orders for reordering products,they will be scheduled that many days earlier to cope with unexpected vendor delays.")
-
-    @api.onchange('use_po_lead')
-    def _onchange_use_po_lead(self):
-        if not self.use_po_lead:
-            self.po_lead = 0.0
-
-    def get_values(self):
-        res = super(ResConfigSettings, self).get_values()
-        res.update(
-            use_po_lead=self.env['ir.config_parameter'].sudo().get_param('purchase.use_po_lead')
-        )
-        return res
-
-    def set_values(self):
-        super(ResConfigSettings, self).set_values()
-        self.env['ir.config_parameter'].sudo().set_param('purchase.use_po_lead', self.use_po_lead)
