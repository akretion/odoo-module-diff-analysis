PR: https://github.com/odoo/odoo/pull/32976

From: c212cfe8992292f57acacd809de26e1817533095
From: Thanh Dodeur
Date: 2019-06-05 09:12:13

Structural Changes: 1
Total Changes: 46

[REF] *: removes datas_fname from ir.attachment

This commit removes the field `datas_fname` from `ir.attachment` as
it was unnecessary and most of the time the duplicate of `name` or
`url`.

Task #1909865

closes odoo/odoo#32976

Signed-off-by: Martin Geubelle (mge) <mge@openerp.com>

================================= pseudo patch: =================================

--- a/odoo/addons/base/models/assetsbundle.py
+++ b/odoo/addons/base/models/assetsbundle.py
@@ -262,8 +262,8 @@ class AssetsBundle(object):
                FROM ir_attachment
               WHERE create_uid = %s
                 AND url like %s
-           GROUP BY datas_fname
-           ORDER BY datas_fname
+           GROUP BY name
+           ORDER BY name
          """, [SUPERUSER_ID, url_pattern])
         attachment_ids = [r[0] for r in self.env.cr.fetchall()]
         return self.env['ir.attachment'].sudo().browse(attachment_ids)
@@ -279,8 +279,7 @@ class AssetsBundle(object):
         fname = '%s.%s' % (self.name, type)
         mimetype = 'application/javascript' if type == 'js' else 'text/css'
         values = {
-            'name': "/web/content/%s" % type,
-            'datas_fname': fname,
+            'name': fname,
             'mimetype': mimetype,
             'res_model': 'ir.ui.view',
             'res_id': False,
@@ -299,7 +298,6 @@ class AssetsBundle(object):
             type=''
         )
         values = {
-            'name': url,
             'url': url,
         }
         attachment.write(values)
@@ -448,9 +446,8 @@ class AssetsBundle(object):
                                 datas=base64.b64encode(asset.content.encode('utf8')),
                                 mimetype='text/css',
                                 type='binary',
-                                name=url,
+                                name=fname,
                                 url=url,
-                                datas_fname=fname,
                                 res_model=False,
                                 res_id=False,
                             ))

--- a/odoo/addons/base/models/ir_actions_report.py
+++ b/odoo/addons/base/models/ir_actions_report.py
@@ -154,7 +154,7 @@ class IrActionsReport(models.Model):
         if not attachment_name:
             return None
         return self.env['ir.attachment'].search([
-                ('datas_fname', '=', attachment_name),
+                ('name', '=', attachment_name),
                 ('res_model', '=', self.model),
                 ('res_id', '=', record.id)
         ], limit=1)
@@ -175,7 +175,6 @@ class IrActionsReport(models.Model):
         attachment_vals = {
             'name': attachment_name,
             'datas': base64.encodestring(buffer.getvalue()),
-            'datas_fname': attachment_name,
             'res_model': self.model,
             'res_id': record.id,
         }

--- a/odoo/addons/base/models/ir_attachment.py
+++ b/odoo/addons/base/models/ir_attachment.py
@@ -201,7 +201,7 @@ class IrAttachment(models.Model):
             vals = {
                 'file_size': len(bin_data),
                 'checksum': self._compute_checksum(bin_data),
-                'index_content': self._index(bin_data, attach.datas_fname, attach.mimetype),
+                'index_content': self._index(bin_data, attach.mimetype),
                 'store_fname': False,
                 'db_datas': value,
             }
@@ -232,8 +232,8 @@ class IrAttachment(models.Model):
         mimetype = None
         if values.get('mimetype'):
             mimetype = values['mimetype']
-        if not mimetype and values.get('datas_fname'):
-            mimetype = mimetypes.guess_type(values['datas_fname'])[0]
+        if not mimetype and values.get('name'):
+            mimetype = mimetypes.guess_type(values['name'])[0]
         if not mimetype and values.get('url'):
             mimetype = mimetypes.guess_type(values['url'])[0]
         if values.get('datas') and (not mimetype or mimetype == 'application/octet-stream'):
@@ -251,8 +251,8 @@ class IrAttachment(models.Model):
         return values
 
     @api.model
-    def _index(self, bin_data, datas_fname, file_type):
-        """ compute the index content of the given filename, or binary data.
+    def _index(self, bin_data, file_type):
+        """ compute the index content of the given binary data.
             This is a python implementation of the unix command 'strings'.
             :param bin_data : datas in binary form
             :return index_content : string containing all the printable character of the binary data
@@ -275,7 +275,6 @@ class IrAttachment(models.Model):
         return ['base.group_system']
 
     name = fields.Char('Name', required=True)
-    datas_fname = fields.Char('Filename')
     description = fields.Text('Description')
     res_name = fields.Char('Resource Name', compute='_compute_res_name', store=True)
     res_model = fields.Char('Resource Model', readonly=True, help="The database object this attachment will be attached to.")
@@ -374,7 +373,7 @@ class IrAttachment(models.Model):
                 raise AccessError(_("Sorry, you are not allowed to access this document."))
 
     def _read_group_allowed_fields(self):
-        return ['type', 'company_id', 'res_id', 'create_date', 'create_uid', 'res_name', 'name', 'mimetype', 'id', 'url', 'datas_fname', 'res_field', 'res_model']
+        return ['type', 'company_id', 'res_id', 'create_date', 'create_uid', 'res_name', 'name', 'mimetype', 'id', 'url', 'res_field', 'res_model']
 
     @api.model
     def read_group(self, domain, fields, groupby, offset=0, limit=None, orderby=False, lazy=True):

--- a/odoo/addons/base/models/ir_http.py
+++ b/odoo/addons/base/models/ir_http.py
@@ -338,7 +338,7 @@ class IrHttp(models.AbstractModel):
 
     def _binary_record_content(
             self, record, field='datas', filename=None,
-            filename_field='datas_fname', default_mimetype='application/octet-stream'):
+            filename_field='name', default_mimetype='application/octet-stream'):
 
         model = record._name
         mimetype = 'mimetype' in record and record.mimetype or False
@@ -387,7 +387,7 @@ class IrHttp(models.AbstractModel):
         return (status, headers, content)
 
     def binary_content(self, xmlid=None, model='ir.attachment', id=None, field='datas',
-                       unique=False, filename=None, filename_field='datas_fname', download=False,
+                       unique=False, filename=None, filename_field='name', download=False,
                        mimetype=None, default_mimetype='application/octet-stream',
                        access_token=None):
         """ Get file, attachment or downloadable content

--- a/odoo/addons/base/tests/test_ir_http.py
+++ b/odoo/addons/base/tests/test_ir_http.py
@@ -12,8 +12,7 @@ class test_ir_http_mimetype(common.TransactionCase):
         """ Test mimetype for attachment """
         attachment = self.env['ir.attachment'].create({
             'datas': GIF,
-            'name': 'Test mimetype gif',
-            'datas_fname': 'file.gif'})
+            'name': 'file.gif'})
 
         status, headers, content = self.env['ir.http'].binary_content(
             id=attachment.id,
@@ -27,8 +26,7 @@ class test_ir_http_mimetype(common.TransactionCase):
         """ Test mimetype for attachment with bad name"""
         attachment = self.env['ir.attachment'].create({
             'datas': GIF,
-            'name': 'Test mimetype gif with png name',
-            'datas_fname': 'file.png'})
+            'name': 'file.png'})
 
         status, headers, content = self.env['ir.http'].binary_content(
             id=attachment.id,
@@ -81,8 +79,7 @@ class test_ir_http_mimetype(common.TransactionCase):
         public_user = self.env.ref('base.public_user')
         attachment = self.env['ir.attachment'].create({
             'datas': GIF,
-            'name': 'Test valid access token with image',
-            'datas_fname': 'image.gif'
+            'name': 'image.gif'
         })
 
         defaults = {

--- a/odoo/addons/base/views/ir_attachment_views.xml
+++ b/odoo/addons/base/views/ir_attachment_views.xml
@@ -13,8 +13,7 @@
                     <group>
                         <group>
                             <field name="type"/>
-                            <field name="datas" filename="datas_fname" attrs="{'invisible':[('type','=','url')]}"/>
-                            <field name="datas_fname" invisible="1" attrs="{'invisible':[('type','=','url')]}" class="oe_inline oe_right"/>
+                            <field name="datas" filename="name" attrs="{'invisible':[('type','=','url')]}"/>
                             <field name="url" widget="url" attrs="{'invisible':[('type','=','binary')]}"/>
                             <field name="mimetype" groups="base.group_no_one"/>
                         </group>
@@ -49,7 +48,6 @@
             <field name="arch" type="xml">
                 <tree string="Attachments">
                     <field name="name"/>
-                    <field name="datas_fname"/>
                     <field name="res_model"/>
                     <field name="res_field"/>
                     <field name="res_id"/>
@@ -64,7 +62,7 @@
             <field name="model">ir.attachment</field>
             <field name="arch" type="xml">
                 <search string="Attachments">
-                    <field name="name" filter_domain="['|', ('name','ilike',self), ('datas_fname','ilike',self)]" string="Attachment"/>
+                    <field name="name" filter_domain="[('name','ilike',self)]" string="Attachment"/>
                     <field name="create_date"/>
                     <filter name="my_documents_filter"
                         string="My Document(s)"
