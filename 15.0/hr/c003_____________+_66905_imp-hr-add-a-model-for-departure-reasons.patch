PR: https://github.com/odoo/odoo/pull/66905

From: 5f98b6acdb0bf9f556da62889c911d40179cd0c8
From: Kevin Baptiste
Date: 2021-03-10 08:32:36

Structural Changes: 3
Total Changes: 39

[IMP] hr: add a model for departure reasons

The "Departure Reasons" where hardcoded and couldn't reflect all the
valid departure reasons (like "End Of Fixed-Term Contract").

This commit introduces a new model `hr.departure.reason`.

closes odoo/odoo#66905

Taskid: 2447056
Related: odoo/enterprise#16709
Related: odoo/upgrade#2211
Signed-off-by: Yannick Tivisse (yti) <yti@odoo.com>

================================= pseudo patch: =================================

--- a/addons/hr/models/__init__.py
+++ b/addons/hr/models/__init__.py
@@ -1,11 +1,12 @@
 # -*- coding: utf-8 -*-
 # Part of Odoo. See LICENSE file for full copyright and licensing details.
 
-from . import hr_employee_base 
+from . import hr_employee_base
 from . import hr_employee
 from . import hr_employee_category
 from . import hr_employee_public
 from . import hr_department
+from . import hr_departure_reason
 from . import hr_job
 from . import hr_plan
 from . import hr_work_location

--- a/None
+++ b/addons/hr/models/hr_departure_reason.py
@@ -0,0 +1,27 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import api, fields, models, _
+from odoo.exceptions import UserError
+
+
+class DepartureReason(models.Model):
+    _name = "hr.departure.reason"
+    _description = "Departure Reason"
+    _order = "sequence"
+
+    sequence = fields.Integer("Sequence", default=10)
+    name = fields.Char(string="Reason", required=True, translate=True)
+
+    def _get_default_departure_reasons(self):
+        return {
+            'fired': self.env.ref('hr.departure_fired', False),
+            'resigned': self.env.ref('hr.departure_resigned', False),
+            'retired': self.env.ref('hr.departure_retired', False),
+        }
+
+    @api.ondelete(at_uninstall=False)
+    def _unlink_except_default_departure_reasons(self):
+        ids = set(map(lambda a: a.id, self._get_default_departure_reasons().values()))
+        if set(self.ids) & ids:
+            raise UserError(_('Default departure reasons cannot be deleted.'))

--- a/addons/hr/models/hr_employee.py
+++ b/addons/hr/models/hr_employee.py
@@ -106,11 +106,8 @@ class HrEmployeePrivate(models.Model):
     barcode = fields.Char(string="Badge ID", help="ID used for employee identification.", groups="hr.group_hr_user", copy=False)
     pin = fields.Char(string="PIN", groups="hr.group_hr_user", copy=False,
         help="PIN used to Check In/Out in the Kiosk Mode of the Attendance application (if enabled in Configuration) and to change the cashier in the Point of Sale application.")
-    departure_reason = fields.Selection([
-        ('fired', 'Fired'),
-        ('resigned', 'Resigned'),
-        ('retired', 'Retired')
-    ], string="Departure Reason", groups="hr.group_hr_user", copy=False, tracking=True)
+    departure_reason_id = fields.Many2one("hr.departure.reason", string="Departure Reason", groups="hr.group_hr_user",
+                                          copy=False, tracking=True, ondelete='restrict')
     departure_description = fields.Text(string="Additional Information", groups="hr.group_hr_user", copy=False, tracking=True)
     departure_date = fields.Date(string="Departure Date", groups="hr.group_hr_user", copy=False, tracking=True)
     message_main_attachment_id = fields.Many2one(groups="hr.group_hr_user")
@@ -273,7 +270,7 @@ class HrEmployeePrivate(models.Model):
         res = super(HrEmployeePrivate, self).toggle_active()
         unarchived_employees = self.filtered(lambda employee: employee.active)
         unarchived_employees.write({
-            'departure_reason': False,
+            'departure_reason_id': False,
             'departure_description': False,
             'departure_date': False
         })
