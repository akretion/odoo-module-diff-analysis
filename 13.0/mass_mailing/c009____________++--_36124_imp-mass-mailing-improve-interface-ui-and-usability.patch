PR: https://github.com/odoo/odoo/pull/36124

From: 2b6ebb3df726208aa5a7de0413f3eed5c33eefa3
From: laa
Date: 2019-09-06 07:47:13

Structural Changes: 10
Total Changes: 11

[IMP] mass_mailing : improve interface, UI and usability

In order to improve and clarify the mass-mailing (Email Marketing) module
several changes have been made

1 - Clarify the name of the application:
2 - Prevent the “Quick Add/Create” feature in the mailing kanban view
3 - Label and wording clarification in mailing_mailing form view :
4 - Clarify button names "Send now" ("put_in_queue")
5 - Mailing Form view layout
6 - Clarify the required field
7 - Clarify the readonly field
8 - Wording clarification if scheduling mail in the future
9 - Add a Placeholders tools page in the form view:
10 - Clarify the Campaigns view
11 - Clarify the Action Helpers

TASK-ID : 2046078

closes odoo/odoo#36124

Signed-off-by: Thibault Delavallee (tde) <tde@openerp.com>

================================= pseudo patch: =================================

--- a/addons/mass_mailing/models/mailing.py
+++ b/addons/mass_mailing/models/mailing.py
@@ -39,6 +39,7 @@ class MassMailing(models.Model):
     A mass mailing is an occurence of sending emails. """
     _name = 'mailing.mailing'
     _description = 'Mass Mailing'
+    _inherit = [ 'mail.thread', 'mail.activity.mixin']
     # number of periods for tracking mail_mail statistics
     _period_number = 6
     _order = 'sent_date DESC'
@@ -64,12 +65,12 @@ class MassMailing(models.Model):
                 res['reply_to_mode'] = 'thread'
         return res
 
-    active = fields.Boolean(default=True)
+    active = fields.Boolean(default=True, tracking=True)
     subject = fields.Char('Subject', help='Subject of emails to send', required=True, translate=True)
-    email_from = fields.Char(string='From', required=True,
+    email_from = fields.Char(string='Send From', required=True,
         default=lambda self: self.env['mail.message']._get_default_from())
     sent_date = fields.Datetime(string='Sent Date', copy=False)
-    schedule_date = fields.Datetime(string='Schedule in the Future')
+    schedule_date = fields.Datetime(string='Scheduled for', tracking=True)
     # don't translate 'body_arch', the translations are only on 'body_html'
     body_arch = fields.Html(string='Body', translate=False)
     body_html = fields.Html(string='Body converted to be send by mail', sanitize_attributes=False)
@@ -82,9 +83,9 @@ class MassMailing(models.Model):
     medium_id = fields.Many2one('utm.medium', string='Medium', help="Delivery method: Email")
     clicks_ratio = fields.Integer(compute="_compute_clicks_ratio", string="Number of Clicks")
     state = fields.Selection([('draft', 'Draft'), ('in_queue', 'In Queue'), ('sending', 'Sending'), ('done', 'Sent')],
-        string='Status', required=True, copy=False, default='draft', group_expand='_group_expand_states')
+        string='Status', required=True, tracking=True, copy=False, default='draft', group_expand='_group_expand_states')
     color = fields.Integer(string='Color Index')
-    user_id = fields.Many2one('res.users', string='Responsible', default=lambda self: self.env.user)
+    user_id = fields.Many2one('res.users', string='Responsible', tracking=True,  default=lambda self: self.env.user)
     # mailing options
     mailing_type = fields.Selection([('mail', 'Email')], string="Mailing Type", default="mail", required=True)
     reply_to_mode = fields.Selection(
