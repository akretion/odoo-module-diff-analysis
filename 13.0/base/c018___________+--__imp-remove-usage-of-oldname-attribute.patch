PR: https://github.com/odoo/odoo/pull/

From: 886eca0131716e137e60a1e398a9fc3996dfa425
From: Christophe Simonis
Date: 2019-08-05 09:36:41

Structural Changes: 9
Total Changes: 16

[IMP] *: remove usage of `oldname` attribute

This attribute is misleading as it is insufficient to correctly upgrade
the database. It only renames the column in the database, but other
operations are needed, like updating the corresponding `ir.model.fields`
record (and its xmlid). The default values and the translations are also
lost during the upgrade.

Moreover, this feature was misused. It was:
 - left on fields during multiple versions.
 - used on reports (SQL views). This would be ok if the feature was
   complete, but, as is, it was useless.
 - kept unchanged after a second renaming of the field (which can happen
   versions later the first rename).
 - used, even when the meaning of the field changed. i.e. the field
   `archived` has been renamed to the classic `active`, but the value
   in the database should be switched.

================================= pseudo patch: =================================

--- a/odoo/addons/base/models/ir_actions.py
+++ b/odoo/addons/base/models/ir_actions.py
@@ -388,7 +388,7 @@ class IrActionsServer(models.Model):
                                  string='Child Actions', help='Child server actions that will be executed. Note that the last return returned action value will be used as global return value.')
     # Create
     crud_model_id = fields.Many2one('ir.model', string='Create/Write Target Model',
-                                    oldname='srcmodel_id', help="Model for record creation / update. Set this field only to specify a different model than the base model.")
+                                    help="Model for record creation / update. Set this field only to specify a different model than the base model.")
     crud_model_name = fields.Char(related='crud_model_id.model', string='Target Model', readonly=True)
     link_field_id = fields.Many2one('ir.model.fields', string='Link using field',
                                     help="Provide the field used to link the newly created record "
@@ -606,7 +606,7 @@ class IrServerObjectLines(models.Model):
         ('value', 'Value'),
         ('reference', 'Reference'),
         ('equation', 'Python expression')
-    ], 'Evaluation Type', default='value', required=True, change_default=True, oldname='type')
+    ], 'Evaluation Type', default='value', required=True, change_default=True)
     resource_ref = fields.Reference(
         string='Record', selection='_selection_target_model',
         compute='_compute_resource_ref', inverse='_set_resource_ref')

--- a/odoo/addons/base/models/ir_model.py
+++ b/odoo/addons/base/models/ir_model.py
@@ -339,7 +339,7 @@ class IrModelFields(models.Model):
                             help="List of options for a selection field, "
                                  "specified as a Python expression defining a list of (key, label) pairs. "
                                  "For example: [('blue','Blue'),('yellow','Yellow')]")
-    copied = fields.Boolean(string='Copied', oldname='copy',
+    copied = fields.Boolean(string='Copied',
                             help="Whether the value is copied when duplicating a record.")
     related = fields.Char(string='Related Field', help="The corresponding related field, if any. This must be a dot-separated list of field names.")
     related_field_id = fields.Many2one('ir.model.fields', compute='_compute_related_field_id',
@@ -974,8 +974,8 @@ class IrModelConstraint(models.Model):
     type = fields.Char(string='Constraint Type', required=True, size=1, index=True,
                        help="Type of the constraint: `f` for a foreign key, "
                             "`u` for other constraints.")
-    write_date = fields.Datetime(oldname='date_update')
-    create_date = fields.Datetime(oldname='date_init')
+    write_date = fields.Datetime()
+    create_date = fields.Datetime()
 
     _sql_constraints = [
         ('module_name_uniq', 'unique(name, module)',
@@ -1108,8 +1108,8 @@ class IrModelRelation(models.Model):
                        help="PostgreSQL table name implementing a many2many relation.")
     model = fields.Many2one('ir.model', required=True, index=True)
     module = fields.Many2one('ir.module.module', required=True, index=True)
-    write_date = fields.Datetime(oldname='date_update')
-    create_date = fields.Datetime(oldname='date_init')
+    write_date = fields.Datetime()
+    create_date = fields.Datetime()
 
     def _module_data_uninstall(self):
         """

--- a/odoo/addons/base/models/ir_ui_view.py
+++ b/odoo/addons/base/models/ir_ui_view.py
@@ -222,7 +222,7 @@ class View(models.Model):
                                Note that it will read `arch_db` or `arch_fs` if in dev-xml mode.""")
     arch_base = fields.Text(compute='_compute_arch_base', inverse='_inverse_arch_base', string='Base View Architecture',
                             help="This field is the same as `arch` field without translations")
-    arch_db = fields.Text(string='Arch Blob', translate=xml_translate, oldname='arch',
+    arch_db = fields.Text(string='Arch Blob', translate=xml_translate,
                           help="This field stores the view arch.")
     arch_fs = fields.Char(string='Arch Filename', help="""File from where the view originates.
                                                           Useful to (hard) reset broken views or to read arch from file in dev-xml mode.""")
