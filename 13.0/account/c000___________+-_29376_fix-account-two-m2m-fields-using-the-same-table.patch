PR: https://github.com/odoo/odoo/pull/29376

From: 3bd587ed4b29f0f48747cd1f983100ed965b2b91
From: Raphael Collet
Date: 2018-12-11 13:19:11

Breaking data model changes score: 6, change matches:
-    analytic_tag_ids = fields.Many2many('account.analytic.tag', string='Analytic Tags')
+    analytic_tag_ids = fields.Many2many('account.analytic.tag', string='Analytic Tags',
-    second_analytic_tag_ids = fields.Many2many('account.analytic.tag', string='Second Analytic Tags')
+    second_analytic_tag_ids = fields.Many2many('account.analytic.tag', string='Second Analytic Tags',

Total Changes: 6

[FIX] account: two m2m fields using the same table

The fields `analytic_tag_ids` and `second_analytic_tag_ids` on model
'account.reconcile.model' were accidentally using the same table and columns,
because of the automatic generation of the table name.  Make them explicitly
use distinct table names.

closes odoo/odoo#29376

================================= pseudo patch: =================================

--- a/addons/account/models/account_reconcile_model.py
+++ b/addons/account/models/account_reconcile_model.py
@@ -84,7 +84,8 @@ class AccountReconcileModel(models.Model):
     amount = fields.Float(string='Write-off Amount', digits=0, required=True, default=100.0, help="Fixed amount will count as a debit if it is negative, as a credit if it is positive.")
     tax_id = fields.Many2one('account.tax', string='Tax', ondelete='restrict')
     analytic_account_id = fields.Many2one('account.analytic.account', string='Analytic Account', ondelete='set null')
-    analytic_tag_ids = fields.Many2many('account.analytic.tag', string='Analytic Tags')
+    analytic_tag_ids = fields.Many2many('account.analytic.tag', string='Analytic Tags',
+                                        relation='account_reconcile_model_analytic_tag_rel')
 
     # Second part fields.
     has_second_line = fields.Boolean(string='Add a second line', default=False)
@@ -104,7 +105,8 @@ class AccountReconcileModel(models.Model):
     second_amount = fields.Float(string='Second Write-off Amount', digits=0, required=True, default=100.0, help="Fixed amount will count as a debit if it is negative, as a credit if it is positive.")
     second_tax_id = fields.Many2one('account.tax', string='Second Tax', ondelete='restrict', domain=[('type_tax_use', '=', 'purchase')])
     second_analytic_account_id = fields.Many2one('account.analytic.account', string='Second Analytic Account', ondelete='set null')
-    second_analytic_tag_ids = fields.Many2many('account.analytic.tag', string='Second Analytic Tags')
+    second_analytic_tag_ids = fields.Many2many('account.analytic.tag', string='Second Analytic Tags',
+                                               relation='account_reconcile_model_second_analytic_tag_rel')
 
     @api.onchange('name')
     def onchange_name(self):
