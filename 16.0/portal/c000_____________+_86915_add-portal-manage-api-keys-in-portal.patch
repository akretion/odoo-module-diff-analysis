PR: https://github.com/odoo/odoo/pull/86915

From: 5b078f2a77d24b5d21f323f138141de9ad40dd39
From: Denis Ledoux
Date: 2022-03-22 14:17:08

Structural Changes: 3
Total Changes: 49

[ADD] portal: manage api keys in portal

Add the possibility for portal users to manage API keys
in the frontend portal interface.

- Allow for portal users to manage their API keys if the system parameter
  `portal.allow_api_keys` is set.
  A settting in `res.config.settings` is added in order
  to enable or disable the feature (to add/remove the system parameter)
  through a compute field,
  to avoid adding a new database column in standard
  (as this revision targets stable 15.0).
  The setting appear only in debug mode.

- Display the API keys in the portal in debug mode only
  (as in the back-end for regular users, in their profile)

- The flow in the frontend is a mimic of the flow from the backend,
  the wording and the look and feel is from the back-end.

closes odoo/odoo#86915

Signed-off-by: Denis Ledoux (dle) <dle@odoo.com>

================================= pseudo patch: =================================

--- a/addons/portal/models/__init__.py
+++ b/addons/portal/models/__init__.py
@@ -6,4 +6,6 @@ from . import ir_ui_view
 from . import mail_thread
 from . import mail_message
 from . import portal_mixin
+from . import res_config_settings
 from . import res_partner
+from . import res_users_apikeys_description

--- a/None
+++ b/addons/portal/models/res_config_settings.py
@@ -0,0 +1,27 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import api, fields, models
+
+
+class ResConfigSettings(models.TransientModel):
+    _inherit = 'res.config.settings'
+
+    portal_allow_api_keys = fields.Boolean(
+        string='Customer API Keys',
+        compute='_compute_portal_allow_api_keys',
+        inverse='_inverse_portal_allow_api_keys',
+    )
+
+    def _compute_portal_allow_api_keys(self):
+        for setting in self:
+            setting.portal_allow_api_keys = self.env['ir.config_parameter'].sudo().get_param('portal.allow_api_keys')
+
+    def _inverse_portal_allow_api_keys(self):
+        self.env['ir.config_parameter'].sudo().set_param('portal.allow_api_keys', self.portal_allow_api_keys)
+
+    @api.model
+    def get_values(self):
+        res = super(ResConfigSettings, self).get_values()
+        res['portal_allow_api_keys'] = bool(self.env['ir.config_parameter'].sudo().get_param('portal.allow_api_keys'))
+        return res

--- a/None
+++ b/addons/portal/models/res_users_apikeys_description.py
@@ -0,0 +1,20 @@
+# -*- coding: utf-8 -*-
+# Part of Odoo. See LICENSE file for full copyright and licensing details.
+
+from odoo import models, _
+from odoo.exceptions import AccessError
+
+
+class APIKeyDescription(models.TransientModel):
+    _inherit = 'res.users.apikeys.description'
+
+    def check_access_make_key(self):
+        try:
+            return super().check_access_make_key()
+        except AccessError:
+            if self.env['ir.config_parameter'].sudo().get_param('portal.allow_api_keys'):
+                if self.user_has_groups('base.group_portal'):
+                    return
+                else:
+                    raise AccessError(_("Only internal and portal users can create API keys"))
+            raise
