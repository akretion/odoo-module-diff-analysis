PR: https://github.com/odoo/odoo/pull/

From: 1c38e61c3582bf4e874bb5d1414a375bc895c134
From: Thibault Delavall√©e
Date: 2015-07-09 08:09:10

Structural Changes: 1
Total Changes: 39

[REM] mail, hr: removed suggested groups / suggested employees feature.

Removed fields and code related to the display of groups and employee
suggestions. This impacts notably the model of res.users in mail and
hr.

================================= pseudo patch: =================================

--- a/addons/mail/models/mail_group.py
+++ b/addons/mail/models/mail_group.py
@@ -164,14 +164,6 @@ class MailGroup(models.Model):
             that receive the context without the wrapper. """
         return self.message_unsubscribe_users()
 
-    @api.model
-    def get_suggested_thread(self, removed_suggested_threads=None):
-        """Show the suggestion of groups if display_groups_suggestions if the
-        user perference allows it."""
-        if not self.env.user.display_groups_suggestions:
-            return []
-        return super(MailGroup, self).get_suggested_thread(removed_suggested_threads)
-
     @api.multi
     def message_get_email_values(self, notif_mail=None):
         self.ensure_one()

--- a/addons/mail/models/mail_thread.py
+++ b/addons/mail/models/mail_thread.py
@@ -1840,29 +1840,6 @@ class MailThread(models.AbstractModel):
         self.env['mail.notification'].invalidate_cache(['is_read'])
         return True
 
-    @api.model
-    def get_suggested_thread(self, removed_suggested_threads=None):
-        """Return a list of suggested threads, sorted by the numbers of followers"""
-        # TDE HACK: originally by MAT from portal/mail_mail.py but not working until the inheritance graph bug is not solved in trunk
-        # TDE FIXME: relocate in portal when it won't be necessary to reload the hr.employee model in an additional bridge module
-        if 'is_portal' in self.pool['res.groups']._fields:
-            if any(group.is_portal for group in self.env.user.sudo().groups_id):
-                return []
-
-        threads = []
-        if removed_suggested_threads is None:
-            removed_suggested_threads = []
-
-        for thread in self.search([('id', 'not in', removed_suggested_threads), ('message_is_follower', '=', False)]):
-            data = {
-                'id': thread.id,
-                'popularity': len(thread.message_follower_ids),
-                'name': thread.name,
-                'image_small': thread.image_small
-            }
-            threads.append(data)
-        return sorted(threads, key=lambda x: (x['popularity'], x['id']), reverse=True)[:3]
-
     @api.multi
     def message_change_thread(self, new_thread):
         """

--- a/addons/mail/models/res_users.py
+++ b/addons/mail/models/res_users.py
@@ -18,7 +18,6 @@ class Users(models.Model):
     alias_id = fields.Many2one('mail.alias', 'Alias', ondelete="restrict", required=True,
             help="Email address internally associated with this user. Incoming "\
                  "emails will appear in the user's notifications.", copy=False, auto_join=True)
-    display_groups_suggestions = fields.Boolean("Display Groups Suggestions", default=True)
 
     def __init__(self, pool, cr):
         """ Override of __init__ to add access rights on notification_email_send
@@ -28,10 +27,10 @@ class Users(models.Model):
         init_res = super(Users, self).__init__(pool, cr)
         # duplicate list to avoid modifying the original reference
         self.SELF_WRITEABLE_FIELDS = list(self.SELF_WRITEABLE_FIELDS)
-        self.SELF_WRITEABLE_FIELDS.extend(['notify_email', 'display_groups_suggestions'])
+        self.SELF_WRITEABLE_FIELDS.extend(['notify_email'])
         # duplicate list to avoid modifying the original reference
         self.SELF_READABLE_FIELDS = list(self.SELF_READABLE_FIELDS)
-        self.SELF_READABLE_FIELDS.extend(['notify_email', 'alias_domain', 'alias_name', 'display_groups_suggestions'])
+        self.SELF_READABLE_FIELDS.extend(['notify_email', 'alias_domain', 'alias_name'])
         return init_res
 
     def _auto_init(self, cr, context=None):
@@ -123,9 +122,6 @@ class Users(models.Model):
     def message_get_suggested_recipients(self):
         return dict((res_id, list()) for res_id in self._ids)
 
-    def stop_showing_groups_suggestions(self):
-        self.write({"display_groups_suggestions": False})
-
 
 class res_users_mail_group(models.Model):
     """ Update of res.users class
